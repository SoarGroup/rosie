####
# agent-name = <string>
#   OPTIONAL: default is the name of the config file (minus extension)
# The name of the agent, used to identify other config files in the directory

agent-name = tabletop


####
# agent-dir = <path> (Relative to the directory this file is in)
#   OPTIONAL: default is the directory this config file is in
# The directory to create the agent directory in

# agent-dir = 


####
# domain = << magicbot tabletop internal fetch >>
#   REQUIRED
# Which domain this agent is operating in (determines how perception/action is handled)
# Will create the wme (<s> ^agent-params.domain <domain>) on the top-state

domain = internal


####
# simulate-perception = << true false >>
#   OPTIONAL: default is false
# Only relevant when the domain is internal
# If true, the agent will do additional processing to better simulate perception

simulate-perception = true


####
# internal-world-file = <filename>
#   OPTIONAL: default is none
# Will source the file in agent/manage-world-state/world/internal-worlds/<filename>
# Used to create a simulated copy of the world on the top-state
# Only relevant when the domain is internal

internal-world-file = blocksworld.soar


####
# waypoint-map-file = <filename>
#   OPTIONAL: default is none
# Will source the file in agent/manage-world-state/world/maps/<filename>
# Defines a waypoint map used by the agent for navigation

waypoint-map-file = blocksworld.soar


####
# parser = << laird lucia >>
#   OPTIONAL: Default is laird
# Which parser will be used to interpret new messages
# Will create the wme (<s> ^agent-params.parser <parser>) on the top-state

parser = laird


####
# sentence-source = << chat scripts >>
#   OPTIONAL: Default is chat
# Where new sentences come from (either chat interface or internal automated scripts)
# Will create the wme (<s> ^agent-params.sentence-source <source>) on the top-state)

sentence-source = chat


####
# sentences-file = <path> (Relative to the directory this file is in)
#   OPTIONAL: Defaults to ./<agent-name>.sentences
# A file with a list of sentences (one per line) to send to the agent
#   If sentence-source = scripts, this serves as input into the SentencesGenerator java tool
#   If sentence-source = chat, this will create message buttons on the chat panel

sentences-file = sentences.txt


####
# world-file = <path> (Relative to the directory this file is in)
#   OPTIONAL: Defaults to ./<agent-name>.world
# File containing the description of the world to be used in internal testing
#   Serves as input into the WorldGenerator java tool

#world-file = example.world


####
# smem-config-file = <path> (Relative to the directory this file is in)
#   OPTIONAL: Defaults to ./<agent-name>.smem
# File containing configuration information for initializing semantic memory
#   Serves as input into the SmemConfigurator java tool

smem-config-file = smem.txt


####
# custom-soar-file  = <path> (Relative to the directory this file is in)
#   OPTIONAL: Defaults to ./<agent-name>.soar
# A soar file that will be sourced when the agent loads
#   (can contain soar code specialized to this particular agent)

custom-soar-file = tabletop.soar


####
# custom-smem-file  = <path> (Relative to the directory this file is in)
#   OPTIONAL: Defaults to ./<agent-name>_smem.soar
# A soar file containing smem add commands that will be sourced when the agent loads
#   (can contain smem information specialized to this particular agent)

custom-smem-file = tabletop.smem


####
# Other Settings
# Any additional settings here will be put into the autogenerated rosie.config file

verbose = true

spawn-debugger = true

enable-log = false

watch-level = 1
