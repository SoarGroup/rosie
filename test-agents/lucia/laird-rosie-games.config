###############   General Agent Parameters   #######################

####
# agent-name = <string>
#   OPTIONAL: default is the name of the config file (minus extension)
# The name of the agent, used to identify other config files in the directory
#  Choose the one you want based on:
#     parser: laird or lucia
#     mode:   rosie or test - test mode runs without agent logic
#     setup:  games or robot - games uses James's setup, robot uses Aaron'script
#

agent-name = laird-rosie-games
#agent-name = laird-test-games
#agent-name = laird-rosie-robot
#agent-name = laird-test-robot

#agent-name = lucia-rosie-games
#agent-name = lucia-test-games
#agent-name = lucia-rosie-robot
#agent-name = lucia-test-robot


####
# agent-dir = <path> (Relative to the directory this file is in)
#   OPTIONAL: default is the directory this config file is in
# The directory to create the agent directory in

# agent-dir = 


####
# smem-config-file = <path> (Relative to the directory this file is in)
#   OPTIONAL: Defaults to ./<agent-name>.smem
# File containing configuration information for initializing semantic memory
#   Serves as input into the SmemConfigurator java tool

#smem-config-file = smem.txt
smem-config-file = game.example.smem
#smem-config-file = smem-am.txt

####
# custom-soar-file  = <path> (Relative to the directory this file is in)
#   OPTIONAL: Defaults to ./<agent-name>.soar
# A soar file that will be sourced when the agent loads
#   (can contain soar code specialized to this particular agent)

custom-soar-file = test-lucia.soar

####
# custom-smem-file  = <path> (Relative to the directory this file is in)
#   OPTIONAL: Defaults to ./<agent-name>_smem.soar
# A soar file containing smem add commands that will be sourced when the agent loads
#   (can contain smem information specialized to this particular agent)

#custom-smem-file = lucia-test.soar
custom-smem-file = game.example_smem.soar


####
# domain = << magicbot tabletop internal fetch >>
#   REQUIRED
# Which domain this agent is operating in (determines how perception/action is handled)
# Will create the wme (<s> ^agent-params.domain <domain>) on the top-state

domain = internal

#  Set up the log file according to the agent name
log-filename = test-agents/lucia/logs/laird-rosie-games.txt
#log-filename = test-agents/lucia/logs/laird-test-games.txt
#log-filename = test-agents/lucia/logs/laird-rosie-robot.txt
#log-filename = test-agents/lucia/logs/laird-test-robot.txt

#log-filename = test-agents/lucia/logs/lucia-rosie-games.txt
#log-filename = test-agents/lucia/logs/lucia-test-games.txt
#log-filename = test-agents/lucia/logs/lucia-rosie-robot.txt
#log-filename = test-agents/lucia/logs/lucia-test-robot.txt


###############   Parser Selection Parameters   #######################

####
# parser = << laird lucia >>
#   OPTIONAL: Default is laird
# Which parser will be used to interpret new messages
# Will create the wme (<s> ^agent-params.parser <parser>) on the top-state

parser = laird

####
# sentence-source = << chat scripts >>
#   OPTIONAL: Default is chat
# Where new sentences come from (either chat interface or internal automated scripts)
# Will create the wme (<s> ^agent-params.sentence-source <source>) on the top-state)

sentence-source = scripts

####
# sentences-file = <path> (Relative to the directory this file is in)
#   OPTIONAL: Defaults to ./<agent-name>.sentences
# A file with a list of sentences (one per line) to send to the agent
#   If sentence-source = scripts, this serves as input into the SentencesGenerator java tool
#   If sentence-source = chat, this will create message buttons on the chat panel

#sentences-file = sentences.txt
#sentences-file = Data/Bugs.txt
#sentences-file = Data/Basic50.txt
#sentences-file = Data/209ordered.txt
#sentences-file = Data/209ordered - failed.txt
#sentences-file = Data/8puzzle/script.txt
#sentences-file = kitchen-tasks-simple.txt
sentences-file = Data/games/block-puzzles/blocks-world.txt


###############   Mode Selection Parameters   #######################

####
# parser-test = << true false >>
#   OPTIONAL: Default is false
# Whether to run parsing in regression test mode
# Will create the wme (<s> ^agent-params.parser-test <parser-test>) on the top-state

parser-test = false


###############   Setup Parameters   #######################

####
# simulate-perception = << true false >>
#   OPTIONAL: default is false
# Only relevant when the domain is internal
# If true, the agent will do additional processing to better simulate perception

# Use this for games
simulate-perception = false
# Use this for the robot
#simulate-perception = true


####
# hypothetical = << true false >>
#   OPTIONAL: Default is false
# Whether to run parsing test in hypothetical  mode
# Will create the wme (<s> ^agent-params.hypothetical <parser-test>) on the top-state

# Use this for the robot
#hypothetical = false
# Use this for games
hypothetical = true


####
# world-file = <path> (Relative to the directory this file is in)
#   OPTIONAL: Defaults to ./<agent-name>.world
# File containing the description of the world to be used in internal testing
#   Serves as input into the WorldGenerator java tool

world-file = world1.txt
#world-file = Data/8puzzle/init-8puzzle.world




####
# Other Settings
# Any additional settings here will be put into the autogenerated rosie.config file

# If true, will print out additional print messages when sourcing the agent
verbose = false

# If true, will start the agent running right away
start-running = false

# If true, will launch the soar debugger
spawn-debugger = true

#  If true, Soar output goes to stdout
write-to-stdout = false

# If true, will write output to a rosie-log.txt file
enable-log = true

# What level the tracing should be at (equivalent to watch n)
watch-level = 0

