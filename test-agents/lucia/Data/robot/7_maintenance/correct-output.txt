I: "Go to the kitchen."
> go-to-location1(to1(current kitchen))
< go-to-location1(to1(current kitchen))
R: "I'm ready for a new task"
I: "Keep the soda in the fridge."
> keep1(blue soda, in1(fridge))
R: "What is the next goal or subtask of keep?"
I: "The only goal is that the soda is always in the fridge."
  > open1(fridge)
    > approach1(fridge)
    < approach1(fridge)
  < open1(fridge)
  > pick-up1(blue soda)
    > approach1(blue soda)
    < approach1(blue soda)
  < pick-up1(blue soda)
  > put-down1(blue soda, in1(fridge))
    > approach1(fridge)
    < approach1(fridge)
  < put-down1(blue soda, in1(fridge))
R: "I have achieved the goal of keep."
I: "!CMD move soda1_12 wp01."
  > pick-up1(blue soda)
  < pick-up1(blue soda)
  > put-down1(blue soda, in1(fridge))
  < put-down1(blue soda, in1(fridge))
R: "I have achieved the goal of keep."
I: "!CMD place soda1_12 on1 table1_7."
  > pick-up1(blue soda)
  < pick-up1(blue soda)
  > put-down1(blue soda, in1(fridge))
  < put-down1(blue soda, in1(fridge))
R: "I have achieved the goal of keep."
I: "!CMD move soda1_12 wp03."
  > find1(blue soda)
    > scan1(end{ visible1(blue soda) })
    < scan1(end{ visible1(blue soda) })
    > recall1(location, blue soda)
### Task op_recall1 retrieved nothing!
    < recall1(location, blue soda)
    > recall1(current location, when{ visible1(blue soda) })
### Task op_recall1 retrieved nothing!
    < recall1(current location, when{ visible1(blue soda) })
R: "I can't find blue soda, can you help?"
I: "Unknown."
    > explore1(end{ visible1(blue soda) })
      > go-to-waypoint1(wp08)
        > go-to-next-waypoint1(wp08)
        < go-to-next-waypoint1(wp08)
      < go-to-waypoint1(wp08)
      > go-to-waypoint1(wp02)
        > go-to-next-waypoint1(wp02)
        < go-to-next-waypoint1(wp02)
      < go-to-waypoint1(wp02)
      > go-to-waypoint1(wp09)
        > go-to-next-waypoint1(wp08)
        < go-to-next-waypoint1(wp08)
        > go-to-next-waypoint1(wp09)
        < go-to-next-waypoint1(wp09)
      < go-to-waypoint1(wp09)
      > go-to-waypoint1(wp03)
        > go-to-next-waypoint1(wp03)
        < go-to-next-waypoint1(wp03)
      < go-to-waypoint1(wp03)
    < explore1(end{ visible1(blue soda) })
  < find1(blue soda)
  > pick-up1(blue soda)
    > approach1(blue soda)
    < approach1(blue soda)
  < pick-up1(blue soda)
  > find1(fridge)
    > scan1(end{ visible1(fridge) })
    < scan1(end{ visible1(fridge) })
    > recall1(location, fridge)
### Task op_recall1 retrieved nothing!
    < recall1(location, fridge)
    > recall1(current location, when{ visible1(fridge) })
    < recall1(current location, when{ visible1(fridge) })
    > go-to-location1(to1(recalled kitchen))
      > go-to-waypoint1(wp01)
        > go-to-next-waypoint1(wp09)
        < go-to-next-waypoint1(wp09)
        > go-to-next-waypoint1(wp08)
        < go-to-next-waypoint1(wp08)
        > go-to-next-waypoint1(wp01)
        < go-to-next-waypoint1(wp01)
      < go-to-waypoint1(wp01)
    < go-to-location1(to1(current kitchen))
  < find1(fridge)
  > put-down1(blue soda, in1(fridge))
    > approach1(fridge)
    < approach1(fridge)
  < put-down1(blue soda, in1(fridge))
R: "I have achieved the goal of keep."
I: "You are done."
< keep1(blue soda, in1(fridge))
R: "I'm ready for a new task"
I: "!CMD place soda1_12 on1 table1_7."
I: "Keep the soda in the fridge."
> keep1(blue soda, in1(fridge))
  > pick-up1(blue soda)
    > approach1(blue soda)
    < approach1(blue soda)
  < pick-up1(blue soda)
  > put-down1(blue soda, in1(fridge))
    > approach1(fridge)
    < approach1(fridge)
  < put-down1(blue soda, in1(fridge))
R: "I have achieved the goal of keep."
I: "!CMD move soda1_12 wp03."
  > find1(blue soda)
    > scan1(end{ visible1(blue soda) })
    < scan1(end{ visible1(blue soda) })
    > recall1(location, blue soda)
### Task op_recall1 retrieved nothing!
    < recall1(location, blue soda)
    > recall1(current location, when{ visible1(blue soda) })
    < recall1(current location, when{ visible1(blue soda) })
    > go-to-location1(to1(recalled hall))
      > go-to-waypoint1(wp08)
        > go-to-next-waypoint1(wp08)
        < go-to-next-waypoint1(wp08)
      < go-to-waypoint1(wp08)
    < go-to-location1(to1(current hall))
    > scan1(end{ visible1(blue soda) })
    < scan1(end{ visible1(blue soda) })
R: "I can't find blue soda, can you help?"
I: "Unknown."
    > explore1(end{ visible1(blue soda) })
      > go-to-waypoint1(wp01)
        > go-to-next-waypoint1(wp01)
        < go-to-next-waypoint1(wp01)
      < go-to-waypoint1(wp01)
      > go-to-waypoint1(wp02)
        > go-to-next-waypoint1(wp08)
        < go-to-next-waypoint1(wp08)
        > go-to-next-waypoint1(wp02)
        < go-to-next-waypoint1(wp02)
      < go-to-waypoint1(wp02)
      > go-to-waypoint1(wp09)
        > go-to-next-waypoint1(wp08)
        < go-to-next-waypoint1(wp08)
        > go-to-next-waypoint1(wp09)
        < go-to-next-waypoint1(wp09)
      < go-to-waypoint1(wp09)
      > go-to-waypoint1(wp03)
        > go-to-next-waypoint1(wp03)
        < go-to-next-waypoint1(wp03)
      < go-to-waypoint1(wp03)
    < explore1(end{ visible1(blue soda) })
  < find1(blue soda)
  > pick-up1(blue soda)
    > approach1(blue soda)
    < approach1(blue soda)
  < pick-up1(blue soda)
  > find1(fridge)
    > scan1(end{ visible1(fridge) })
    < scan1(end{ visible1(fridge) })
    > recall1(location, fridge)
### Task op_recall1 retrieved nothing!
    < recall1(location, fridge)
    > recall1(current location, when{ visible1(fridge) })
    < recall1(current location, when{ visible1(fridge) })
    > go-to-location1(to1(recalled kitchen))
      > go-to-waypoint1(wp01)
        > go-to-next-waypoint1(wp09)
        < go-to-next-waypoint1(wp09)
        > go-to-next-waypoint1(wp08)
        < go-to-next-waypoint1(wp08)
        > go-to-next-waypoint1(wp01)
        < go-to-next-waypoint1(wp01)
      < go-to-waypoint1(wp01)
    < go-to-location1(to1(current kitchen))
  < find1(fridge)
  > put-down1(blue soda, in1(fridge))
    > approach1(fridge)
    < approach1(fridge)
  < put-down1(blue soda, in1(fridge))
R: "I have achieved the goal of keep."
I: "You are done."
< keep1(blue soda, in1(fridge))
R: "I'm ready for a new task"
I: "Go to the conference room."
> go-to-location1(to1(conference))
  > go-to-waypoint1(wp03)
    > go-to-next-waypoint1(wp08)
    < go-to-next-waypoint1(wp08)
    > go-to-next-waypoint1(wp09)
    < go-to-next-waypoint1(wp09)
    > go-to-next-waypoint1(wp03)
    < go-to-next-waypoint1(wp03)
  < go-to-waypoint1(wp03)
< go-to-location1(to1(current conference))
R: "I'm ready for a new task"
I: "Monitor the door until the meeting is finished."
> monitor1(door, end{ task-completed(meeting) })
R: "What is the next goal or subtask of monitor?"
I: "The only goal is that the door is always closed."
  > close1(door)
    > approach1(door)
    < approach1(door)
  < close1(door)
R: "I have achieved the goal of monitor."
I: "!CMD set-pred door1_37 is-open1 open2."
  > close1(door)
  < close1(door)
R: "I have achieved the goal of monitor."
I: "!CMD set-pred door1_37 is-open1 open2."
  > close1(door)
  < close1(door)
R: "I have achieved the goal of monitor."
I: "The meeting is finished."
R: "Ok"
< monitor1(door, end{ task-completed(meeting) })
R: "I'm ready for a new task"
I: "Monitor the door until the meeting is finished."
> monitor1(door, end{ task-completed(meeting) })
R: "I have achieved the goal of monitor."
I: "!CMD set-pred door1_37 is-open1 open2."
  > close1(door)
  < close1(door)
R: "I have achieved the goal of monitor."
I: "!CMD set-pred door1_37 is-open1 open2."
  > close1(door)
  < close1(door)
R: "I have achieved the goal of monitor."
I: "The meeting is finished."
R: "Ok"
< monitor1(door, end{ task-completed(meeting) })
R: "I'm ready for a new task"
I: "Go to the Bob's office."
> go-to-location1(to1(office))
  > go-to-waypoint1(wp06)
    > go-to-next-waypoint1(wp09)
      > open1(door)
      < open1(door)
    < go-to-next-waypoint1(wp09)
    > go-to-next-waypoint1(wp10)
    < go-to-next-waypoint1(wp10)
    > go-to-next-waypoint1(wp06)
    < go-to-next-waypoint1(wp06)
  < go-to-waypoint1(wp06)
< go-to-location1(to1(current office))
R: "I'm ready for a new task"
I: "Observe Bob for ten minutes."
> observe1(bob, end{ 10 minutes })
R: "What is the next goal or subtask of observe?"
I: "The only goal is that Bob is always visible."
R: "I have achieved the goal of observe."
I: "!CMD move person_29 wp01."
  > find1(bob)
    > scan1(end{ visible1(bob) })
    < scan1(end{ visible1(bob) })
    > recall1(office, bob)
### Task op_recall1 retrieved nothing!
    < recall1(office, bob)
    > recall1(current location, when{ visible1(bob) })
### Task op_recall1 retrieved nothing!
    < recall1(current location, when{ visible1(bob) })
R: "I can't find bob, can you help?"
I: "Unknown."
    > explore1(end{ visible1(bob) })
      > go-to-waypoint1(wp10)
        > go-to-next-waypoint1(wp10)
        < go-to-next-waypoint1(wp10)
      < go-to-waypoint1(wp10)
      > go-to-waypoint1(wp07)
        > go-to-next-waypoint1(wp07)
        < go-to-next-waypoint1(wp07)
      < go-to-waypoint1(wp07)
      > go-to-waypoint1(wp09)
        > go-to-next-waypoint1(wp10)
        < go-to-next-waypoint1(wp10)
        > go-to-next-waypoint1(wp09)
        < go-to-next-waypoint1(wp09)
      < go-to-waypoint1(wp09)
      > go-to-waypoint1(wp03)
        > go-to-next-waypoint1(wp03)
        < go-to-next-waypoint1(wp03)
      < go-to-waypoint1(wp03)
      > go-to-waypoint1(wp04)
        > go-to-next-waypoint1(wp09)
        < go-to-next-waypoint1(wp09)
        > go-to-next-waypoint1(wp04)
        < go-to-next-waypoint1(wp04)
      < go-to-waypoint1(wp04)
      > go-to-waypoint1(wp05)
        > go-to-next-waypoint1(wp09)
        < go-to-next-waypoint1(wp09)
        > go-to-next-waypoint1(wp05)
        < go-to-next-waypoint1(wp05)
      < go-to-waypoint1(wp05)
      > go-to-waypoint1(wp08)
        > go-to-next-waypoint1(wp09)
        < go-to-next-waypoint1(wp09)
        > go-to-next-waypoint1(wp08)
        < go-to-next-waypoint1(wp08)
      < go-to-waypoint1(wp08)
      > go-to-waypoint1(wp01)
        > go-to-next-waypoint1(wp01)
        < go-to-next-waypoint1(wp01)
      < go-to-waypoint1(wp01)
    < explore1(end{ visible1(bob) })
  < find1(bob)
R: "I have achieved the goal of observe."
I: "Go to the Bob's office."
< observe1(bob, end{ 10 minutes })
R: "I'm ready for a new task"
I: "Observe Bob for ten minutes."
> observe1(bob, end{ 10 minutes })
R: "I have achieved the goal of observe."
I: "!CMD move person_29 wp01."
< observe1(bob, end{ 10 minutes })
R: "I'm ready for a new task"
I: "Unknown."
