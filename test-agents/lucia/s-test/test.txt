# Comparator running in directory: null
#   Source: lucia.txt
#   Target: parse.txt
#   Output: test.txt

# The name of the puzzle is blocks-world.
object-description(arg1(of1), predicate(blocks-world1))
object-description(arg1(of1), predicate(blocks-world1))
# CORRECT_MATCH

# Load init-blocksworld.
command(load1, arg1(init-blocksworld1))
command(load1, arg1(init-blocksworld3))
# CORRECT_MATCH

# Ok.
yes
yes
# CORRECT_MATCH

# You can move a clear block onto a clear object.
command(move1, arg1(new-object-id2), arg2(on1(new-object-id3)))
command(move1, arg1(new-object-id4), arg2(on1(new-object-id5)))
# CORRECT_MATCH

# If a location is not below an object then it is clear.
conditional(if(action, arg1, modifier, predicate), then(action, arg1, predicate))
conditional(if(action, arg1, modifier, predicate), then(action, arg1, predicate))
# CORRECT_MATCH

# Load final-blocksworld.
command(load1, arg1(final-blocksworld8))
command(load1, arg1(final-blocksworld10))
# CORRECT_MATCH

# The goal is that a red block is on a green block and the red block is below an orange block.
object-description(arg1(goal))
object-description(arg1(goal))
# CORRECT_MATCH

# Ok.
yes
yes
# CORRECT_MATCH

# Initial category counts: 
# 8 total sentences processed.
#   0 of type NO_TARGET.
#   0 of type FAILURE.
#   0 of type NO_MATCH.
#   0 of type MESSAGE_MATCH.
#   3 of type SIGNATURE_MATCH.
#   5 of type BOTH_MATCH.
#   0 of type STRUCTURES_BAD.
#   0 of type DETAIL_PROBLEM.
#   0 of type CORRECT_MATCH.

# Final category counts: 
# 8 total sentences processed.
#   0 of type NO_TARGET.
#   0 of type FAILURE.
#   0 of type NO_MATCH.
#   0 of type MESSAGE_MATCH.
#   0 of type SIGNATURE_MATCH.
#   0 of type BOTH_MATCH.
#   0 of type STRUCTURES_BAD.
#   0 of type DETAIL_PROBLEM.
#   8 of type CORRECT_MATCH.

