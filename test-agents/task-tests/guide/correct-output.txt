I: "Permanently remember the fridge as the storage location of a soda."
> remember1(fridge, storage location, soda)
### Task op_remember1 - storing edge soda1 --( storage1 location )--> fridge1
< remember1(fridge, storage location, soda)
R: "I'm ready for a new task"
I: "Permanently remember the fridge as the storage location of a water."
> remember1(fridge, storage location, water)
### Task op_remember1 - storing edge water1 --( storage1 location )--> fridge1
< remember1(fridge, storage location, water)
R: "I'm ready for a new task"
I: "Permanently remember the fridge as the storage location of a juice."
> remember1(fridge, storage location, juice)
### Task op_remember1 - storing edge juice1 --( storage1 location )--> fridge1
< remember1(fridge, storage location, juice)
R: "I'm ready for a new task"
I: "Guide Alice."
> guide1(alice)
R: "What is the next goal or subtask of guide?"
I: "Serve Alice."
  > serve1(alice)
R: "What is the next goal or subtask of serve?"
I: "The goal is that Alice is holding the desired drink."
R: "What do I do next for serve?"
I: "Ask Alice "What drink would you like?"."
    > ask1(What drink would you like?, alice)
R: "What drink would you like?"
I: "A soda."
    < ask1(What drink would you like?, alice)
R: "What do I do next for serve?"
I: "Remember the answer as the desired drink."
    > remember1(answered soda, desired drink)
    < remember1(answered soda, desired drink)
    > find1(answered soda)
      > scan1(end{ visible1(answered soda) })
      < scan1(end{ visible1(answered soda) })
      > recall1(location, answered soda)
### Task op_recall1 retrieved fridge1
      < recall1(location, answered soda)
      > find1(recalled fridge)
        > scan1(end{ visible1(recalled fridge) })
        < scan1(end{ visible1(recalled fridge) })
        > recall1(location, recalled fridge)
### Task op_recall1 retrieved nothing!
        < recall1(location, fridge)
        > recall1(current location, when{ visible1(fridge) })
### Task op_recall1 retrieved nothing!
        < recall1(current location, when{ visible1(fridge) })
R: "I can't find fridge, can you help?"
I: "The fridge is in the kitchen."
R: "Ok"
        > go-to-location1(to1(kitchen))
          > go-to-waypoint1(wp01)
            > go-to-next-waypoint1(wp05)
            < go-to-next-waypoint1(wp05)
            > go-to-next-waypoint1(wp01)
            < go-to-next-waypoint1(wp01)
          < go-to-waypoint1(wp01)
        < go-to-location1(to1(current kitchen))
      < find1(fridge)
    < find1(blue answered soda)
    > pick-up1(blue answered soda)
      > approach1(blue answered soda)
      < approach1(blue answered soda)
    < pick-up1(blue answered soda)
    > find1(alice)
      > scan1(end{ visible1(alice) })
      < scan1(end{ visible1(alice) })
      > recall1(office, alice)
### Task op_recall1 retrieved nothing!
      < recall1(office, alice)
      > recall1(current location, when{ visible1(alice) })
      < recall1(current location, when{ visible1(alice) })
      > go-to-location1(to1(recalled main))
        > go-to-waypoint1(wp02)
          > go-to-next-waypoint1(wp05)
          < go-to-next-waypoint1(wp05)
          > go-to-next-waypoint1(wp02)
          < go-to-next-waypoint1(wp02)
        < go-to-waypoint1(wp02)
      < go-to-location1(to1(current main))
    < find1(alice)
    > give1(blue answered soda, to1(alice))
      > approach1(alice)
      < approach1(alice)
    < give1(blue answered soda, to1(alice))
R: "What is the next goal or subtask of serve?"
I: "Permanently remember the desired drink as the preferred drink of Alice."
    > remember1(blue answered soda, preferred drink, alice)
### Task op_remember1 - storing edge person-alice1 --( preferred1 drink1 )--> soda1
    < remember1(blue answered soda, preferred drink, alice)
R: "What is the next goal or subtask of serve?"
I: "You are done."
  < serve1(alice)
R: "What is the next goal or subtask of guide?"
I: "Say "Follow me to the lab"."
  > say1(Follow me to the lab)
R: "Follow me to the lab"
  < say1(Follow me to the lab)
R: "What is the next goal or subtask of guide?"
I: "Go to the lab."
  > go-to-location1(to1(lab))
    > go-to-waypoint1(wp04)
      > go-to-next-waypoint1(wp05)
      < go-to-next-waypoint1(wp05)
      > go-to-next-waypoint1(wp06)
      < go-to-next-waypoint1(wp06)
      > go-to-next-waypoint1(wp04)
      < go-to-next-waypoint1(wp04)
    < go-to-waypoint1(wp04)
  < go-to-location1(to1(current lab))
R: "What is the next goal or subtask of guide?"
I: "!CMD move person_16 wp04."
I: "Complete the following tasks."
R: "What do I do next for guide?"
I: "Say "To the right are the computer workstations"."
  > say1(To the right are the computer workstations)
R: "To the right are the computer workstations"
  < say1(To the right are the computer workstations)
R: "What do I do next for guide?"
I: "Say "On the left is the workbench"."
  > say1(On the left is the workbench)
R: "On the left is the workbench"
  < say1(On the left is the workbench)
R: "What do I do next for guide?"
I: "Say "The red cabinet contains various tools"."
  > say1(The red cabinet contains various tools)
R: "The red cabinet contains various tools"
  < say1(The red cabinet contains various tools)
R: "What do I do next for guide?"
I: "You are done."
R: "What is the next goal or subtask of guide?"
I: "Say "Feel free to look around and let me know when you are done"."
  > say1(Feel free to look around and let me know when you are done)
R: "Feel free to look around and let me know when you are done"
  < say1(Feel free to look around and let me know when you are done)
R: "What is the next goal or subtask of guide?"
I: "Follow Alice."
  > follow-wall1(alice)
R: "What is the next goal or subtask of follow-wall?"
I: "The only goal is that Alice is always visible."
R: "I have achieved the goal of follow-wall."
I: "Finished."
  < follow-wall1(alice)
R: "What is the next goal or subtask of guide?"
I: "Say "Follow me back to the main office"."
  > say1(Follow me back to the main office)
R: "Follow me back to the main office"
  < say1(Follow me back to the main office)
R: "What is the next goal or subtask of guide?"
I: "Go to the main office."
  > go-to-location1(to1(main))
    > go-to-waypoint1(wp02)
      > go-to-next-waypoint1(wp06)
      < go-to-next-waypoint1(wp06)
      > go-to-next-waypoint1(wp05)
      < go-to-next-waypoint1(wp05)
      > go-to-next-waypoint1(wp02)
      < go-to-next-waypoint1(wp02)
    < go-to-waypoint1(wp02)
  < go-to-location1(to1(current main))
R: "What is the next goal or subtask of guide?"
I: "You are done."
< guide1(alice)
R: "I'm ready for a new task"
I: "Guide Bob."
> guide1(bob)
  > serve1(bob)
    > find1(bob)
      > scan1(end{ visible1(bob) })
      < scan1(end{ visible1(bob) })
      > recall1(office, bob)
### Task op_recall1 retrieved nothing!
      < recall1(office, bob)
      > recall1(current location, when{ visible1(bob) })
      < recall1(current location, when{ visible1(bob) })
      > go-to-location1(to1(recalled kitchen))
        > go-to-waypoint1(wp01)
          > go-to-next-waypoint1(wp05)
          < go-to-next-waypoint1(wp05)
          > go-to-next-waypoint1(wp01)
          < go-to-next-waypoint1(wp01)
        < go-to-waypoint1(wp01)
      < go-to-location1(to1(current kitchen))
    < find1(bob)
    > ask1(What drink would you like?, bob)
R: "What drink would you like?"
I: "A water."
    < ask1(What drink would you like?, bob)
    > remember1(white answered water, desired drink)
    < remember1(white answered water, desired drink)
    > pick-up1(white answered water)
      > approach1(white answered water)
      < approach1(white answered water)
    < pick-up1(white answered water)
    > give1(white answered water, to1(bob))
      > approach1(bob)
      < approach1(bob)
    < give1(white answered water, to1(bob))
    > remember1(white answered water, preferred drink, bob)
### Task op_remember1 - storing edge person-bob1 --( preferred1 drink1 )--> water1
    < remember1(white answered water, preferred drink, bob)
  < serve1(bob)
  > say1(Follow me to the lab)
R: "Follow me to the lab"
  < say1(Follow me to the lab)
  > go-to-location1(to1(lab))
    > go-to-waypoint1(wp04)
      > go-to-next-waypoint1(wp05)
      < go-to-next-waypoint1(wp05)
      > go-to-next-waypoint1(wp06)
      < go-to-next-waypoint1(wp06)
      > go-to-next-waypoint1(wp04)
      < go-to-next-waypoint1(wp04)
    < go-to-waypoint1(wp04)
  < go-to-location1(to1(current lab))
  > say1(To the right are the computer workstations)
R: "To the right are the computer workstations"
  < say1(To the right are the computer workstations)
  > say1(On the left is the workbench)
R: "On the left is the workbench"
  < say1(On the left is the workbench)
  > say1(The red cabinet contains various tools)
R: "The red cabinet contains various tools"
  < say1(The red cabinet contains various tools)
  > say1(Feel free to look around and let me know when you are done)
R: "Feel free to look around and let me know when you are done"
  < say1(Feel free to look around and let me know when you are done)
  > follow-wall1(bob)
    > find1(bob)
      > scan1(end{ visible1(bob) })
      < scan1(end{ visible1(bob) })
      > recall1(office, bob)
### Task op_recall1 retrieved nothing!
      < recall1(office, bob)
      > recall1(current location, when{ visible1(bob) })
      < recall1(current location, when{ visible1(bob) })
      > go-to-location1(to1(recalled kitchen))
        > go-to-waypoint1(wp01)
          > go-to-next-waypoint1(wp06)
          < go-to-next-waypoint1(wp06)
          > go-to-next-waypoint1(wp05)
          < go-to-next-waypoint1(wp05)
          > go-to-next-waypoint1(wp01)
          < go-to-next-waypoint1(wp01)
        < go-to-waypoint1(wp01)
      < go-to-location1(to1(current kitchen))
    < find1(bob)
R: "I have achieved the goal of follow-wall."
I: "Finished."
  < follow-wall1(bob)
  > say1(Follow me back to the main office)
R: "Follow me back to the main office"
  < say1(Follow me back to the main office)
  > go-to-location1(to1(main))
    > go-to-waypoint1(wp02)
      > go-to-next-waypoint1(wp05)
      < go-to-next-waypoint1(wp05)
      > go-to-next-waypoint1(wp02)
      < go-to-next-waypoint1(wp02)
    < go-to-waypoint1(wp02)
  < go-to-location1(to1(current main))
< guide1(bob)
R: "I'm ready for a new task"
