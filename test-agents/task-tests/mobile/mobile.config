####
# agent-name = <string>
#   OPTIONAL: default is the name of the config file (minus extension)
# The name of the agent, used to identify other config files in the directory

agent-name = mobile


####
# agent-dir = <path> (Relative to the directory this file is in)
#   OPTIONAL: default is the directory this config file is in
# The directory to create the agent directory in

agent-dir = agent


####
# domain = << magicbot tabletop internal fetch >>
#   REQUIRED
# Which domain this agent is operating in (determines how perception/action is handled)
# Will create the wme (<s> ^agent-params.domain <domain>) on the top-state

domain = internal


####
# source-soar-file = <filename> [ANY NUMBER]
# Will tell the soar agent to source the give file
# You can use the following path prefixes:
#   ${config-dir} - resolves to the directory that contains this file
#   ${agent-dir} - resolves to the created agent directory
#   ${rosie-agent} - resolves to $ROSIE_HOME/agent

source-soar-file = ${config-dir}/../testing-rules.soar
source-soar-file = ${config-dir}/../waypoint-map.soar
source-soar-file = ${config-dir}/../internal-world.soar


####
# source-smem-file = <filename> [ANY NUMBER]
# Will tell the soar agent to source the give file containing smem adds
#    it will be put through the LTI mapping process and copied into the agent dir
# You can use the above ${...} path prefixes with the file

source-smem-file = ${config-dir}/../testing.smem


####
# smem-config-file = <filename> [ANY NUMBER]
# File containing configuration information for initializing semantic memory
#   Serves as input into the SmemConfigurator java tool
# You can use the ${...} path prefixes with the file

smem-config-file = ${rosie-agent}/_smem_config.txt
smem-config-file = ${config-dir}/../smem-config.txt


####
# parser = << laird lucia >>
#   OPTIONAL: Default is laird
# Which parser will be used to interpret new messages
# Will create the wme (<s> ^agent-params.parser <parser>) on the top-state

parser = laird


####
# sentence-source = << chat scripts >>
#   OPTIONAL: Default is chat
# Where new sentences come from (either chat interface or internal automated scripts)
# Will create the wme (<s> ^agent-params.sentence-source <source>) on the top-state)

sentence-source = scripts


####
# sentences-file = <path> (Relative to the directory this file is in)
#   OPTIONAL: Defaults to ./<agent-name>.sentences
# A file with a list of sentences (one per line) to send to the agent
#   If sentence-source = scripts, this serves as input into the SentencesGenerator java tool
#   If sentence-source = chat, this will create message buttons on the chat panel

sentences-file = script.txt


####
# world-file = <path> (Relative to the directory this file is in)
#   OPTIONAL: Defaults to ./<agent-name>.world
# File containing the description of the world to be used in internal testing
#   Serves as input into the WorldGenerator java tool

#world-file = example.world




####
# Other Settings
# Any additional settings here will be put into the autogenerated rosie.config file

reconfig-on-launch = true

spawn-debugger = false

use-action-stack-connector = true

verbose = false
watch-level = 0
write-to-stdout = true

#enable-log = true
log-filename = ${agent-dir}/rosie-log.txt

task-test-output-filename = ${config-dir}/test-output.txt



