I: "Permanently remember Alice's office as the office of Alice."
> remember1(office, office, alice)
### Task op_remember1 - storing edge person-alice1 --( office1 )--> loc-alice-off1
< remember1(office, office, alice)
R: "I'm ready for a new task"
I: "Permanently remember Bob's office as the office of Bob."
> remember1(office, office, bob)
### Task op_remember1 - storing edge person-bob1 --( office1 )--> loc-bob-off1
< remember1(office, office, bob)
R: "I'm ready for a new task"
I: "Permanently remember Charlie's office as the office of Charlie."
> remember1(office, office, charlie)
### Task op_remember1 - storing edge person-charlie1 --( office1 )--> loc-charlie-off1
< remember1(office, office, charlie)
R: "I'm ready for a new task"
I: "Permanently remember the main office as the storage location of a water."
> remember1(main, storage location, water)
### Task op_remember1 - storing edge water1 --( storage1 location )--> loc-main1
< remember1(main, storage location, water)
R: "I'm ready for a new task"
I: "Permanently remember the fridge as the storage location of a juice."
> remember1(fridge, storage location, orange juice)
### Task op_remember1 - storing edge juice1 --( storage1 location )--> fridge1
< remember1(fridge, storage location, orange juice)
R: "I'm ready for a new task"
I: "Permanently remember water as the preferred drink of Bob."
> remember1(water, preferred drink, bob)
### Task op_remember1 - storing edge person-bob1 --( preferred1 drink1 )--> water1
< remember1(water, preferred drink, bob)
R: "I'm ready for a new task"
I: "Permanently remember soda as the preferred drink of Mary."
> remember1(blue soda, preferred drink, mary)
### Task op_remember1 - storing edge person-chef1 --( preferred1 drink1 )--> soda1
< remember1(blue soda, preferred drink, mary)
R: "I'm ready for a new task"
I: "Serve Mary."
> serve1(mary)
R: "What is the next goal or subtask of serve?"
I: "The goal is that Mary is holding the desired drink."
R: "What do I do next for serve?"
I: "Recall the preferred drink of Mary."
  > recall1(preferred drink, mary)
### Task op_recall1 retrieved soda1
  < recall1(preferred drink, mary)
R: "What do I do next for serve?"
I: "If there is a preferred drink then ask Mary the preferred drink."
  > ask1(blue preferred soda, mary)
R: "blue preferred soda"
I: "Yes."
  < ask1(blue preferred soda, mary)
R: "What do I do next for serve?"
I: "If the answer is yes then remember the preferred drink as the desired drink."
  > remember1(blue preferred soda, desired drink)
  < remember1(blue desired soda, desired drink)
  > pick-up1(blue desired soda)
    > approach1(blue desired soda)
    < approach1(blue desired soda)
  < pick-up1(blue desired soda)
  > give1(blue desired soda, to1(mary))
    > approach1(mary)
    < approach1(mary)
  < give1(blue desired soda, to1(mary))
R: "What is the next goal or subtask of serve?"
I: "Permanently remember the desired drink as the preferred drink of Mary."
  > remember1(blue desired soda, preferred drink, mary)
### Task op_remember1 - storing edge person-chef1 --( preferred1 drink1 )--> soda1
  < remember1(blue desired soda, preferred drink, mary)
R: "What is the next goal or subtask of serve?"
I: "You are done."
< serve1(mary)
R: "I'm ready for a new task"
I: "Serve Alice."
> serve1(alice)
  > find1(alice)
    > scan1(end{ visible1(alice) })
    < scan1(end{ visible1(alice) })
    > recall1(office, alice)
### Task op_recall1 retrieved loc-alice-off1
    < recall1(office, alice)
    > go-to-location1(to1(recalled office))
      > go-to-waypoint1(wp05)
        > go-to-next-waypoint1(wp08)
        < go-to-next-waypoint1(wp08)
        > go-to-next-waypoint1(wp09)
        < go-to-next-waypoint1(wp09)
        > go-to-next-waypoint1(wp05)
        < go-to-next-waypoint1(wp05)
      < go-to-waypoint1(wp05)
    < go-to-location1(to1(current office))
  < find1(alice)
  > recall1(preferred drink, alice)
### Task op_recall1 retrieved nothing!
  < recall1(preferred drink, alice)
R: "What do I do next for serve?"
I: "If nothing was recalled then ask Alice "What drink would you like?"."
  > ask1(What drink would you like?, alice)
R: "What drink would you like?"
I: "A soda."
  < ask1(What drink would you like?, alice)
R: "What do I do next for serve?"
I: "Remember the answered drink as the desired drink."
  > remember1(answered soda, desired drink)
  < remember1(answered soda, desired drink)
  > find1(answered soda)
    > scan1(end{ visible1(answered soda) })
    < scan1(end{ visible1(answered soda) })
    > recall1(location, answered soda)
### Task op_recall1 retrieved nothing!
    < recall1(location, answered soda)
    > recall1(current location, when{ visible1(answered soda) })
    < recall1(current location, when{ visible1(answered soda) })
    > go-to-location1(to1(recalled kitchen))
      > go-to-waypoint1(wp01)
        > go-to-next-waypoint1(wp09)
        < go-to-next-waypoint1(wp09)
        > go-to-next-waypoint1(wp08)
        < go-to-next-waypoint1(wp08)
        > go-to-next-waypoint1(wp01)
        < go-to-next-waypoint1(wp01)
      < go-to-waypoint1(wp01)
    < go-to-location1(to1(current kitchen))
  < find1(blue answered soda)
  > pick-up1(blue answered soda)
    > approach1(blue answered soda)
    < approach1(blue answered soda)
  < pick-up1(blue answered soda)
  > find1(alice)
    > scan1(end{ visible1(alice) })
    < scan1(end{ visible1(alice) })
    > recall1(office, alice)
### Task op_recall1 retrieved loc-alice-off1
    < recall1(office, alice)
    > go-to-location1(to1(recalled office))
      > go-to-waypoint1(wp05)
        > go-to-next-waypoint1(wp08)
        < go-to-next-waypoint1(wp08)
        > go-to-next-waypoint1(wp09)
        < go-to-next-waypoint1(wp09)
        > go-to-next-waypoint1(wp05)
        < go-to-next-waypoint1(wp05)
      < go-to-waypoint1(wp05)
    < go-to-location1(to1(current office))
  < find1(alice)
  > give1(blue answered soda, to1(alice))
    > approach1(alice)
    < approach1(alice)
  < give1(blue answered soda, to1(alice))
  > remember1(blue answered soda, preferred drink, alice)
### Task op_remember1 - storing edge person-alice1 --( preferred1 drink1 )--> soda1
  < remember1(blue answered soda, preferred drink, alice)
< serve1(alice)
R: "I'm ready for a new task"
I: "Serve Bob."
> serve1(bob)
  > find1(bob)
    > scan1(end{ visible1(bob) })
    < scan1(end{ visible1(bob) })
    > recall1(office, bob)
### Task op_recall1 retrieved loc-bob-off1
    < recall1(office, bob)
    > go-to-location1(to1(recalled office))
      > go-to-waypoint1(wp06)
        > go-to-next-waypoint1(wp09)
        < go-to-next-waypoint1(wp09)
        > go-to-next-waypoint1(wp10)
        < go-to-next-waypoint1(wp10)
        > go-to-next-waypoint1(wp06)
        < go-to-next-waypoint1(wp06)
      < go-to-waypoint1(wp06)
    < go-to-location1(to1(current office))
  < find1(bob)
  > recall1(preferred drink, bob)
### Task op_recall1 retrieved water1
  < recall1(preferred drink, bob)
  > ask1(preferred water, bob)
R: "preferred water"
I: "No."
  < ask1(preferred water, bob)
R: "What do I do next for serve?"
I: "If the answer is nope then ask Bob "What drink would you like?"."
  > ask1(What drink would you like?, bob)
R: "What drink would you like?"
I: "A soda."
  < ask1(What drink would you like?, bob)
  > remember1(answered soda, desired drink)
  < remember1(answered soda, desired drink)
  > find1(answered soda)
    > scan1(end{ visible1(answered soda) })
    < scan1(end{ visible1(answered soda) })
    > recall1(location, answered soda)
### Task op_recall1 retrieved nothing!
    < recall1(location, answered soda)
    > recall1(current location, when{ visible1(answered soda) })
    < recall1(current location, when{ visible1(answered soda) })
    > go-to-location1(to1(recalled office))
      > go-to-waypoint1(wp05)
        > go-to-next-waypoint1(wp10)
        < go-to-next-waypoint1(wp10)
        > go-to-next-waypoint1(wp09)
        < go-to-next-waypoint1(wp09)
        > go-to-next-waypoint1(wp05)
        < go-to-next-waypoint1(wp05)
      < go-to-waypoint1(wp05)
    < go-to-location1(to1(current office))
  < find1(blue answered soda)
  > pick-up1(blue answered soda)
    > approach1(blue answered soda)
    < approach1(blue answered soda)
  < pick-up1(blue answered soda)
  > find1(bob)
    > scan1(end{ visible1(bob) })
    < scan1(end{ visible1(bob) })
    > recall1(office, bob)
### Task op_recall1 retrieved loc-bob-off1
    < recall1(office, bob)
    > go-to-location1(to1(recalled office))
      > go-to-waypoint1(wp06)
        > go-to-next-waypoint1(wp09)
        < go-to-next-waypoint1(wp09)
        > go-to-next-waypoint1(wp10)
        < go-to-next-waypoint1(wp10)
        > go-to-next-waypoint1(wp06)
        < go-to-next-waypoint1(wp06)
      < go-to-waypoint1(wp06)
    < go-to-location1(to1(current office))
  < find1(bob)
  > give1(blue answered soda, to1(bob))
    > approach1(bob)
    < approach1(bob)
  < give1(blue answered soda, to1(bob))
  > remember1(blue answered soda, preferred drink, bob)
### Task op_remember1 - storing edge person-bob1 --( preferred1 drink1 )--> soda1
  < remember1(blue answered soda, preferred drink, bob)
< serve1(bob)
R: "I'm ready for a new task"
I: "Serve Alice."
> serve1(alice)
  > find1(alice)
    > scan1(end{ visible1(alice) })
    < scan1(end{ visible1(alice) })
    > recall1(office, alice)
### Task op_recall1 retrieved loc-alice-off1
    < recall1(office, alice)
    > go-to-location1(to1(recalled office))
      > go-to-waypoint1(wp05)
        > go-to-next-waypoint1(wp10)
        < go-to-next-waypoint1(wp10)
        > go-to-next-waypoint1(wp09)
        < go-to-next-waypoint1(wp09)
        > go-to-next-waypoint1(wp05)
        < go-to-next-waypoint1(wp05)
      < go-to-waypoint1(wp05)
    < go-to-location1(to1(current office))
  < find1(alice)
  > recall1(preferred drink, alice)
### Task op_recall1 retrieved soda1
  < recall1(preferred drink, alice)
  > ask1(preferred soda, alice)
R: "preferred soda"
I: "Yes."
  < ask1(preferred soda, alice)
  > remember1(preferred soda, desired drink)
  < remember1(desired soda, desired drink)
  > find1(desired soda)
    > scan1(end{ visible1(desired soda) })
    < scan1(end{ visible1(desired soda) })
    > recall1(location, desired soda)
### Task op_recall1 retrieved nothing!
    < recall1(location, desired soda)
    > recall1(current location, when{ visible1(desired soda) })
    < recall1(current location, when{ visible1(desired soda) })
    > go-to-location1(to1(recalled office))
      > go-to-waypoint1(wp06)
        > go-to-next-waypoint1(wp09)
        < go-to-next-waypoint1(wp09)
        > go-to-next-waypoint1(wp10)
        < go-to-next-waypoint1(wp10)
        > go-to-next-waypoint1(wp06)
        < go-to-next-waypoint1(wp06)
      < go-to-waypoint1(wp06)
    < go-to-location1(to1(current office))
  < find1(blue desired soda)
  > pick-up1(blue desired soda)
    > approach1(blue desired soda)
    < approach1(blue desired soda)
  < pick-up1(blue desired soda)
  > find1(alice)
    > scan1(end{ visible1(alice) })
    < scan1(end{ visible1(alice) })
    > recall1(office, alice)
### Task op_recall1 retrieved loc-alice-off1
    < recall1(office, alice)
    > go-to-location1(to1(recalled office))
      > go-to-waypoint1(wp05)
        > go-to-next-waypoint1(wp10)
        < go-to-next-waypoint1(wp10)
        > go-to-next-waypoint1(wp09)
        < go-to-next-waypoint1(wp09)
        > go-to-next-waypoint1(wp05)
        < go-to-next-waypoint1(wp05)
      < go-to-waypoint1(wp05)
    < go-to-location1(to1(current office))
  < find1(alice)
  > give1(blue desired soda, to1(alice))
    > approach1(alice)
    < approach1(alice)
  < give1(blue desired soda, to1(alice))
  > remember1(blue desired soda, preferred drink, alice)
### Task op_remember1 - storing edge person-alice1 --( preferred1 drink1 )--> soda1
  < remember1(blue desired soda, preferred drink, alice)
< serve1(alice)
R: "I'm ready for a new task"
I: "Serve Charlie."
> serve1(charlie)
  > find1(charlie)
    > scan1(end{ visible1(charlie) })
    < scan1(end{ visible1(charlie) })
    > recall1(office, charlie)
### Task op_recall1 retrieved loc-charlie-off1
    < recall1(office, charlie)
    > go-to-location1(to1(recalled office))
      > go-to-waypoint1(wp07)
        > go-to-next-waypoint1(wp09)
        < go-to-next-waypoint1(wp09)
        > go-to-next-waypoint1(wp10)
        < go-to-next-waypoint1(wp10)
        > go-to-next-waypoint1(wp07)
        < go-to-next-waypoint1(wp07)
      < go-to-waypoint1(wp07)
    < go-to-location1(to1(current office))
  < find1(charlie)
  > recall1(preferred drink, charlie)
### Task op_recall1 retrieved nothing!
  < recall1(preferred drink, charlie)
  > ask1(What drink would you like?, charlie)
R: "What drink would you like?"
I: "A water."
  < ask1(What drink would you like?, charlie)
  > remember1(answered water, desired drink)
  < remember1(answered water, desired drink)
  > find1(answered water)
    > scan1(end{ visible1(answered water) })
    < scan1(end{ visible1(answered water) })
    > recall1(location, answered water)
### Task op_recall1 retrieved loc-main1
    < recall1(location, answered water)
    > go-to-location1(to1(recalled main))
      > go-to-waypoint1(wp02)
        > go-to-next-waypoint1(wp10)
        < go-to-next-waypoint1(wp10)
        > go-to-next-waypoint1(wp09)
        < go-to-next-waypoint1(wp09)
        > go-to-next-waypoint1(wp08)
        < go-to-next-waypoint1(wp08)
        > go-to-next-waypoint1(wp02)
        < go-to-next-waypoint1(wp02)
      < go-to-waypoint1(wp02)
    < go-to-location1(to1(current main))
  < find1(white answered water)
  > pick-up1(white answered water)
    > approach1(white answered water)
    < approach1(white answered water)
  < pick-up1(white answered water)
  > find1(charlie)
    > scan1(end{ visible1(charlie) })
    < scan1(end{ visible1(charlie) })
    > recall1(office, charlie)
### Task op_recall1 retrieved loc-charlie-off1
    < recall1(office, charlie)
    > go-to-location1(to1(recalled office))
      > go-to-waypoint1(wp07)
        > go-to-next-waypoint1(wp08)
        < go-to-next-waypoint1(wp08)
        > go-to-next-waypoint1(wp09)
        < go-to-next-waypoint1(wp09)
        > go-to-next-waypoint1(wp10)
        < go-to-next-waypoint1(wp10)
        > go-to-next-waypoint1(wp07)
        < go-to-next-waypoint1(wp07)
      < go-to-waypoint1(wp07)
    < go-to-location1(to1(current office))
  < find1(charlie)
  > give1(white answered water, to1(charlie))
    > approach1(charlie)
    < approach1(charlie)
  < give1(white answered water, to1(charlie))
  > remember1(white answered water, preferred drink, charlie)
### Task op_remember1 - storing edge person-charlie1 --( preferred1 drink1 )--> water1
  < remember1(white answered water, preferred drink, charlie)
< serve1(charlie)
R: "I'm ready for a new task"
I: "Serve Mary."
> serve1(mary)
  > find1(mary)
    > scan1(end{ visible1(mary) })
    < scan1(end{ visible1(mary) })
    > recall1(office, mary)
### Task op_recall1 retrieved nothing!
    < recall1(office, mary)
    > recall1(current location, when{ visible1(mary) })
    < recall1(current location, when{ visible1(mary) })
    > go-to-location1(to1(recalled kitchen))
      > go-to-waypoint1(wp01)
        > go-to-next-waypoint1(wp10)
        < go-to-next-waypoint1(wp10)
        > go-to-next-waypoint1(wp09)
        < go-to-next-waypoint1(wp09)
        > go-to-next-waypoint1(wp08)
        < go-to-next-waypoint1(wp08)
        > go-to-next-waypoint1(wp01)
        < go-to-next-waypoint1(wp01)
      < go-to-waypoint1(wp01)
    < go-to-location1(to1(current kitchen))
  < find1(mary)
  > recall1(preferred drink, mary)
### Task op_recall1 retrieved soda1
  < recall1(preferred drink, mary)
  > ask1(preferred soda, mary)
R: "preferred soda"
I: "No."
  < ask1(preferred soda, mary)
  > ask1(What drink would you like?, mary)
R: "What drink would you like?"
I: "A juice."
  < ask1(What drink would you like?, mary)
  > remember1(orange answered juice, desired drink)
  < remember1(orange answered juice, desired drink)
  > pick-up1(orange answered juice)
    > approach1(orange answered juice)
    < approach1(orange answered juice)
  < pick-up1(orange answered juice)
  > give1(orange answered juice, to1(mary))
    > approach1(mary)
    < approach1(mary)
  < give1(orange answered juice, to1(mary))
  > remember1(orange answered juice, preferred drink, mary)
### Task op_remember1 - storing edge person-chef1 --( preferred1 drink1 )--> juice1
  < remember1(orange answered juice, preferred drink, mary)
< serve1(mary)
R: "I'm ready for a new task"
