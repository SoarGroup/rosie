
### Propose learn-action-model-rule for an instantiated goal
sp {learn-task-action-model*propose*learn-action-model-rule*instantiated*goal
   (state <s> ^name learn-task-action-model
              ^default-model-learning true
              ^possible-goal <pg>)
   (<pg> -^instantiate-conditions
          ^instantiate-goal.instantiation <ins>)
-->
   (<s> ^operator <o> + =)
   (<o> ^name learn-action-model-rule
        ^goal-instantiation <ins>)
}

### Propose learn-action-model-rule for an instantiated goal with conditions
sp {learn-task-action-model*propose*learn-action-model-rule*instantiated*goal*with*conditions
   (state <s> ^name learn-task-action-model
              ^default-model-learning true
              ^possible-goal <pg>
              ^satisfied <conds>)
   (<pg> ^instantiate-conditions.instantiation <conds>
         ^instantiate-goal.instantiation <ins>)
-->
   (<s> ^operator <o> + =)
   (<o> ^name learn-action-model-rule
        ^goal-instantiation <ins>
        ^goal-conditions <conds>)
}

### If there are no valid goals to learn as action models, just learn the default changes
sp {learn-task-action-model*propose*learn-action-model-rule
   (state <s> ^name learn-task-action-model
              ^default-model-learning true)
-->
   (<s> ^operator <o> + < =)
   (<o> ^name learn-action-model-rule)
}

### Learn all the required changes to the state when evaluating an operator

sp {execution-type*internal*apply*task-operator*mark*tried-tied-operator
   (state <s> ^name learn-task-action-model
              ^operator.name learn-action-model-rule
              ^superstate <ss>)
   (<ss> ^operator <o>
         ^untried-tied-operator <o>)
-->
   (<ss> ^untried-tied-operator <o> -
         ^tried-tied-operator <o>)
}

sp {execution-type*internal*apply*task-operator*update*current-evaluation-depth
   (state <s> ^name learn-task-action-model
              ^operator.name learn-action-model-rule
              ^superstate <ss>)
   (<ss> ^operator <o>
         ^current-evaluation-depth <ced>)
-->
   (<ss> ^current-evaluation-depth <ced> -
         ^current-evaluation-depth (- <ced> 1))
}

sp {execution-type*internal*apply*task-operator*increment*plan-length
   (state <s> ^name learn-task-action-model
              ^operator.name learn-action-model-rule
              ^superstate <ss>)
   (<ss> ^operator <o>
         ^plan-length <n>)
-->
   (<ss> ^plan-length <n> -
         ^plan-length (+ <n> 1))
}

sp {execution-type*internal*apply*task-operator*mark*performed-subtask
   (state <s> ^name learn-task-action-model
              ^operator.name learn-action-model-rule
              ^task-operator.subtask-handle <sub-h>
              ^superstate.current-task-segment <seg>)
-->
   (<seg> ^performed-subtask <sub-h>)
}

### If there are any unary/relation goal predicates, use them as action model changes to the world

sp {__TASK_MODEL__*problem-space*action*interal*apply*task*action-model*unary*predicate
   (state <s> ^name learn-task-action-model
              ^operator <o>
              ^superstate.problem-space <ps>
              ^world.objects.object <obj>)
   (<ps> ^name action
         ^execution-type internal)
   (<o> ^name learn-action-model-rule
        ^goal-instantiation.<pnum> <gp>)
   (<gp> ^type unary
         ^handle <pred-h>
         ^property-handle <prop-h>
         ^1 <obj>)
   (<obj> ^predicates <obj-preds>)
-->
   (<obj-preds> ^<prop-h> <pred-h>)
}

sp {__TASK_MODEL__*problem-space*action*internal*apply*task*action-model*remove*other*predicate
   (state <s> ^name learn-task-action-model
              ^operator <o>
              ^superstate.problem-space <ps>
              ^world.objects.object <obj>)
   (<ps> ^name action
         ^execution-type internal)
   (<o> ^name learn-action-model-rule
        ^goal-instantiation.<pnum> <gp>)
   (<gp> ^type unary
         ^handle <pred-h>
         ^property-handle <prop-h>
         ^1 <obj>)
   (<obj> ^predicates <obj-preds>)
   (<obj-preds> ^<prop-h> { <other-pred> <> <pred-h> })
-->
   (<obj-preds> ^<prop-h> <other-pred> -)
}

sp {__TASK_MODEL__*problem-space*action*interal*apply*task*action-model*1*relation
   (state <s> ^name learn-task-action-model
              ^operator <o>
              ^superstate.problem-space <ps>
              ^world <w>)
   (<ps> ^name action
         ^execution-type internal)
   (<o> ^name learn-action-model-rule
        ^goal-instantiation.<pnum> <gp>)
   (<gp> ^type relation
         ^handle <rel-h>
         ^1 <obj1>
         ^2 <obj2>)
   (<w> ^objects <objs>
        ^predicates.predicate <wpred>)
   (<objs> ^object <obj1> <obj2>)
   (<wpred> ^handle <rel-h>)
   -{(<wpred> ^instance <i>)
     (<i> ^1 <obj1> ^2 <obj2>)}
-->
    (<wpred> ^instance <i>)
    (<i> ^1 <obj1> ^2 <obj2>)
}

