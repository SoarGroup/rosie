
sp {problem-space*action*force-state-no-change*reject*all*operators
   (state <s> ^problem-space.name action
              ^force-state-no-change true
              ^operator <o> +)
   (<o> ^name <> clear-state-no-change)
-->
   (<s> ^operator <o> -)
}

# When doing search, don't propose the same task within itself
sp {problem-space*action*reject*recursive*tasks
   (state <s> ^problem-space.name action
              ^problem-space.subproblem search
              ^name <task-name>
              ^operator <o> +)
   (<o> ^item-type task-operator
        ^name <task-name>)
-->
   (<s> ^operator <o> -)
}

sp {problem-space*action*prefer*best-pref-eval*over*exceed-depth
   (state <s> ^problem-space.name action
              ^operator <o1> +
              ^operator <o2> +
              ^best-pref-eval <o1>)
   (<o1> ^item-type task-operator)
   (<o2> ^name exceed-depth)
-->
   (<s> ^operator <o1> > <o2>)
}

sp {problem-space*action*prefer*subtasks*equal*plan-length
   (state <s> ^problem-space.name action
              ^operator <o1> +
              ^operator <o2> +
              ^best-pref-eval <o1> <o2>)
   (<o1> ^item-type task-operator
         ^plan-length <len>)
   (<o2> ^item-type task-operator
         ^plan-length <len>)
-->
   (<s> ^operator <o1> = <o2>)
}

sp {problem-space*action*prefer*subtasks*smaller*plan-length
   (state <s> ^problem-space.name action
              ^operator <o1> +
              ^operator <o2> +
              ^best-pref-eval <o1> <o2>)
   (<o1> ^item-type task-operator
         ^plan-length <len>)
   (<o2> ^item-type task-operator
         ^plan-length > <len>)
  -{(<o2> ^plan-length < <len>)}
-->
   (<s> ^operator <o1> > <o2>)
}
