
# If the goal came with conditions, we want to generalize those first 
#    via generalize-task-argument (in task-utils)
sp {learn-task-goal*elaborate*generalize-task-argument*goal-conditions
   (state <s> ^name learn-task-goal
              ^task-goal.conditions <conds>)
-->
   (<s> ^generalize-task-argument <gen-arg>)
   (<gen-arg> ^arg-type predicate-set
              ^type goal-conditions
              ^instantiation <conds>)
}

# Elaborate the reference task-operator and TCN used by generalize-task-argument
sp {learn-task-goal*elaborate*generalize-task-argument*goal-conditions*reference-info
   (state <s> ^name learn-task-goal
              ^task-operator <task-op>
              ^task-concept-network.procedural <tcn-proc>)
-->
   (<s> ^reference-task-op <task-op>
        ^reference-tcn-proc <tcn-proc>)
}


# Elaborate any reference-info for objects in the conditions
# (Set of predicates explicitly mentioned by the instructor)

sp {learn-task-goal*elaborate*generalize-task-argument*object*reference-info
   (state <s> ^name learn-task-goal
              ^generalize-task-argument <arg>)
   (<arg> ^arg-type object
          ^instantiation <i>)
-->
   (<i> ^reference-info <info>)
}

sp {learn-task-goal*elaborate*generalize-task-argument*object*reference-info*constraints
   (state <s> ^name learn-task-goal
              ^generalize-task-argument <pred-arg>
              ^generalize-task-argument <obj-arg>)
   (<pred-arg> ^arg-type predicate
               ^instantiation <pred-ins>
               ^<gen-obj> <obj-arg>)
   (<pred-ins> ^reference-info <ref-info>
               ^<num> <obj>)
   (<ref-info> ^num <num>
               ^{ <prop-h> <> num } <pred-h>)
   (<obj-arg> ^arg-type object
              ^instantiation <obj-ins>)
   (<obj-ins> ^id <obj>
              ^reference-info <obj-ref-info>)
-->
   (<obj-ref-info> ^<prop-h> <pred-h>)
}

