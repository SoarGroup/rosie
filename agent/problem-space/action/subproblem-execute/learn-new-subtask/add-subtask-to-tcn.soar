# Once the subtask operator has been generalized, add it to the parent TCN
sp {learn-new-subtask*propose*add-subtask-to-tcn
   (state <s> ^name learn-new-subtask
              ^generalized-subtask <gen-subtask>
              ^task-concept-network.procedural <proc>)
   (<proc> -^subtasks.subtask <gen-subtask>)
-->
   (<s> ^operator <o> +)
   (<o> ^name add-subtask-to-tcn
        ^procedural-lti <proc>
        ^subtask-rep <gen-subtask>)
}

# If there is no ^tcn.procedural.subtasks lti, create one
sp {learn-new-subtask*apply*add-subtask-to-tcn*create*subtasks*lti
   (state <s> ^name learn-new-subtask
              ^operator <o>)
   (<o> ^name add-subtask-to-tcn
        ^procedural-lti <proc>)
   (<proc> -^subtasks <subs>)
-->
   (<proc> ^subtasks <subs>)

   (<s> ^to-store <proc>)
}

# Add the subtask to the subtasks lti
sp {learn-new-subtask*apply*add-subtask-to-tcn*add*subtask
   (state <s> ^name learn-new-subtask
              ^operator <o>)
   (<o> ^name add-subtask-to-tcn
        ^procedural-lti.subtasks <subs>
        ^subtask-rep <sub>)
-->
   (<subs> ^subtask <sub>)

   (<s> ^to-store <subs> <sub>)
}

# Create a subtask-handle
sp {learn-new-subtask*apply*add-subtask-to-tcn*create*subtask*handle
   (state <s> ^name learn-new-subtask
              ^operator <o>)
   (<o> ^name add-subtask-to-tcn
        ^subtask-rep <sub>)
-->
   (<sub> ^handle (make-constant-symbol |subtask|))
}

# Mark the subtask as not being learned
sp {learn-new-subtask*apply*add-subtask-to-tcn*mark*learned-proposal*no
   (state <s> ^name learn-new-subtask
              ^operator <o>)
   (<o> ^name add-subtask-to-tcn
        ^subtask-rep <sub>)
-->
   (<sub> ^learned-proposal no)
}

### Make sure the subtask operator is fully stored

sp {learn-new-subtask*apply*add-subtask-to-tcn*store*argument
   (state <s> ^name learn-new-subtask
              ^operator <o>)
   (<o> ^name add-subtask-to-tcn
        ^subtask-rep.<arg-name> <arg>)
   (<arg> ^arg-type <any>)
-->
   (<s> ^to-store <arg>)
}

sp {learn-new-subtask*apply*add-subtask-to-tcn*store*arg*slots
   (state <s> ^name learn-new-subtask
              ^operator <o>)
   (<o> ^name add-subtask-to-tcn
        ^subtask-rep.<arg-name>.{ << id 1 2 3 4 5 predicate >> } <slot>)
-->
   (<s> ^to-store <slot>)
}

sp {learn-new-subtask*apply*add-subtask-to-tcn*store*predicate*arg*default
   (state <s> ^name learn-new-subtask
              ^operator <o>)
   (<o> ^name add-subtask-to-tcn
        ^subtask-rep.<arg-name>.{ << id 1 2 3 4 5 >> }.{ << default imagined >> } <def>)
-->
   (<s> ^to-store <def>)
}

sp {learn-new-subtask*apply*add-subtask-to-tcn*store*arg*predicate*slot
   (state <s> ^name learn-new-subtask
              ^operator <o>)
   (<o> ^name add-subtask-to-tcn
        ^subtask-rep.<arg-name>.{ << 1 2 3 4 5 >> }.{ << id 1 2 3 4 5 >> } <slot>)
-->
   (<s> ^to-store <slot>)
}

sp {learn-new-subtask*apply*add-subtask-to-tcn*store*predicate*arg*predicate*default
   (state <s> ^name learn-new-subtask
              ^operator <o>)
   (<o> ^name add-subtask-to-tcn
        ^subtask-rep.<arg-name>.{ << 1 2 3 4 5 >> }.{ << id 1 2 3 4 5 >> }.{ << default imagined >> } <def>)
-->
   (<s> ^to-store <def>)
}

