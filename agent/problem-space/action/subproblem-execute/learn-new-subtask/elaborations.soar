## subtask-operator - the operator to add to the TCN
sp {learn-new-subtask*elaborate*subtask-operator*from*superstate*operator
   (state <s> ^name learn-new-subtask
              ^superstate.operator.subtask-operator <sub-op>)
-->
   (<s> ^subtask-operator <sub-op>)
}

## task-operator - the parent task operator
sp {learn-new-subtask*elaborate*task-operator*from*superstate
   (state <s> ^name learn-new-subtask
              ^superstate.task-operator <task-op>)
-->
   (<s> ^task-operator <task-op>)
}

## task-goal - the current task goal 
sp {learn-new-subtask*elaborate*task-goal
   (state <s> ^name learn-new-subtask
              ^superstate.desired <des>)
-->
   (<s> ^task-goal <des>)
}

## subtask-handle - the handle that identifies this specific subtask under the parent task

# elaborate it from a matching task operator
sp {learn-new-subtask*elaborate*subtask-handle*from*matching-task
   (state <s> ^name learn-new-subtask
              ^match-task-operator <mto>)
   (<mto> ^successful-match.subtask-handle <sub-h>)
-->
   (<s> ^subtask-handle <sub-h>)
}

sp {learn-new-subtask*elaborate*subtask-handle*from*created*subtask
   (state <s> ^name learn-new-subtask
              ^generalized-subtask.handle <sub-h>)
-->
   (<s> ^subtask-handle <sub-h>)
}

## dont want a problem-space
sp {learn-new-subtask*elaborate*default-problem-space*no
   (state <s> ^name learn-new-subtask)
-->
   (<s> ^default-problem-space no)
}

