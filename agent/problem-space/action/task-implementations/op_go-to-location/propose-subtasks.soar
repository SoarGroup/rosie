
sp {op_go-to-location1*external*propose*op_go-to-waypoint1
   (state <s> ^name op_go-to-location1
              ^problem-space.execution-type external
              ^desired-waypoint <wp>)
-->
   (<s> ^operator <o> + =)
   (<o> ^name op_go-to-waypoint1
        ^item-type task-operator
        ^task-handle go-to-waypoint1
        ^arg1 <arg1>)
   (<arg1> ^arg-type waypoint
           ^id <wp>)
}

sp {op_go-to-location1*external*magicbot*reject*select-next-goal*until*scanned
   (state <s> ^name op_go-to-location1
              ^problem-space.execution-type external
              ^agent-params.domain magicbot
              ^operator <o> +
              ^desired.handle gotoloc1goal1
             -^current-task-segment.performed-scan)
   (<o> ^name select-next-goal)
-->
   (<s> ^operator <o> -)
}

sp {op_go-to-location1*external*magicbot*propose*op_scan1
   (state <s> ^name op_go-to-location1
              ^problem-space.execution-type external
              ^agent-params.domain magicbot
              ^desired <des>
             -^current-task-segment.performed-scan)
   (<des> ^handle gotoloc1goal1
          ^satisfied true)
-->
   (<s> ^operator <o> + =)
   (<o> ^name op_scan1
        ^item-type task-operator
        ^task-handle scan1)
   (<s> ^require-subtask op_scan1)
}

sp {op_go-to-location1*apply*pop-task-segment*op_scan1*mark*finished
   (state <s> ^name op_go-to-location1
              ^operator <o>
              ^current-task-segment <seg>)
   (<o> ^name pop-task-segment
        ^segment <child-seg>)
   (<child-seg> ^task-operator.name op_scan1)
-->
   (<seg> ^performed-scan true)
}

