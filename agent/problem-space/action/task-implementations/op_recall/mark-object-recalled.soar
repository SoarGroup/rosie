
sp {op_recall1*smem*propose*mark-object-recalled
   (state <s> ^name op_recall1
              ^memory-type smem
              ^tail-object <obj>)
   (<obj> -^predicates.modifier1 recalled1)
-->
   (<s> ^operator <o> + =)
   (<o> ^name mark-object-recalled
        ^object <obj>)
}

sp {op_recall1*apply*mark-object-recalled
   (state <s> ^name op_recall1
              ^operator <o>)
   (<o> ^name mark-object-recalled
        ^object <obj>)
   (<obj> ^predicates <preds>)
-->
   (<preds> ^modifier1 recalled1)
}

# Finish recall

sp {op_recall1*smem*propose*finish-recall
   (state <s> ^name op_recall1
              ^memory-type smem
              ^tail-object <obj>
              ^current-task-segment <seg>)
   (<obj> ^predicates.modifier1 recalled1)
   (<seg> -^recall-command.status success)
-->
   (<s> ^operator <o> + =)
   (<o> ^name finish-recall)
}

sp {op_recall*apply*finish-recall*add*object*to*parent*task-objects*added-object
   (state <s> ^name op_recall1
              ^operator <o>
              ^parent-task-segment.task-objects <objs>)
   (<o> ^name finish-recall
        ^object <obj>)
-->
   (<objs> ^added-object <obj>)
}

# Mark the recall-command as successful (will complete the goal)
sp {op_recall*apply*finish-recall*mark*command*complete
   (state <s> ^name op_recall1
              ^operator.name finish-recall
              ^current-task-segment <seg>)
-->
   (<seg> ^recall-command.status success)
}
