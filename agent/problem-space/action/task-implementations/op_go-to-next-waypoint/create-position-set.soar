# This creates a set of points (position-set) to navigate when moving to the next waypoint
sp {op_go-to-next-waypoint1*propose*create-position-set
   (state <s> ^name op_go-to-next-waypoint1
              ^agent-params.domain << magicbot cozmo >>
              ^problem-space.execution-type external
             -^current-task-segment.position-set)
-->
   (<s> ^operator <o> +)
   (<o> ^name create-position-set)
}

sp {op_go-to-next-waypoint*elaborate*create-position-set*edge
   (state <s> ^name op_go-to-next-waypoint1
              ^operator <o> +
              ^waypoint <wp>
              ^world.robot.current-waypoint.edge <edge>)
   (<o> ^name create-position-set)
   (<edge> ^end <wp>)
-->
   (<o> ^edge <edge>)
}

sp {op_go-to-next-waypoint1*apply*create-position-set*create*position-set*no*door
   (state <s> ^name op_go-to-next-waypoint1
              ^operator <o>
              ^current-task-segment <seg>)
   (<o> ^name create-position-set
        ^edge <edge>)
   (<edge> ^doorway false
           ^end <end>)
   (<end> ^x <ex> ^y <ey>)
-->
   (<seg> ^position-set <pos>)
   (<pos> ^next <p1>)
   (<p1> ^x <ex> ^y <ey> ^next none)
}

sp {op_go-to-next-waypoint1*apply*create-position-set*create*position-set*ignore*door
   (state <s> ^name op_go-to-next-waypoint1
              ^operator <o>
              ^agent-params.navigation-ignore-doors true
              ^current-task-segment <seg>)
   (<o> ^name create-position-set
        ^edge <edge>)
   (<edge> ^doorway true
           ^end <end>)
   (<end> ^x <ex> ^y <ey>)
-->
   (<seg> ^position-set <pos>)
   (<pos> ^next <p1>)
   (<p1> ^x <ex> ^y <ey> ^next none)
}

sp {op_go-to-next-waypoint1*apply*create-position-set*create*position-set*door*no*object
   (state <s> ^name op_go-to-next-waypoint1
              ^operator <o>
              ^agent-params <params>
              ^current-task-segment <seg>)
   (<params> -^navigation-ignore-doors true)
   (<o> ^name create-position-set
        ^edge <edge>)
   (<edge> ^doorway true
           ^door_sx <dsx>
           ^door_sy <dsy>
           ^door_ex <dex>
           ^door_ey <dey>
           ^end <end>
          -^door_handle)
   (<end> ^x <ex> ^y <ey>)
-->
   (<seg> ^position-set <pos>)
   (<pos> ^next <p1>)
   (<p1> ^x <dsx> ^y <dsy> ^next <p2>)
   (<p2> ^x <dex> ^y <dey> ^next <p3>)
   (<p3> ^x <ex> ^y <ey> ^next none)
}

sp {op_go-to-next-waypoint1*apply*create-position-set*create*position-set*door*with*object
   (state <s> ^name op_go-to-next-waypoint1
              ^operator <o>
              ^agent-params <params>
              ^current-task-segment <seg>)
   (<params> -^navigation-ignore-doors true)
   (<o> ^name create-position-set
        ^edge <edge>)
   (<edge> ^doorway true
           ^door_sx <dsx>
           ^door_sy <dsy>
           ^door_ex <dex>
           ^door_ey <dey>
           ^end <end>
           ^door_handle <dh>)
   (<end> ^x <ex> ^y <ey>)
-->
   (<seg> ^position-set <pos>)
   (<pos> ^next <p1>)
   (<p1> ^x <dsx> ^y <dsy> ^next <p2>)
   (<p2> ^x <dex> ^y <dey> ^next <p3> ^check-door true)
   (<p3> ^x <ex> ^y <ey> ^next none)
}
