### Send the give command to the output link when the person is visible and reachable

sp {op_plug1*propose*send-plug-command
   (state <s> ^name op_plug1
              ^plugging-object <switch>
              ^target-object <light>)
-->
   (<s> ^operator <o> + =)
   (<o> ^name send-plug-command
        ^item-type command-operator
        ^command-name plug-command
        ^arg1.id <switch>
        ^arg2 <arg2>)
   (<arg2> ^2 <light>)
}

### internal ###

sp {op_plug1*external*apply*send-plug-command*internal
   (state <s> ^name op_plug1
              ^problem-space.execution-type external
              ^agent-params.domain internal
              ^operator <o>
              ^io.output-link <ol>
              ^current-task-segment <seg>)
   (<o> ^name send-plug-command
        ^command-name <cmd-name>
        ^arg1.id <switch>
        ^arg2.{2} <light>)
-->
   (<ol> ^perform-action <pa>)
   (<pa> ^item-type output-command
         ^name plug
         ^object <switch>
         ^object-target <light>)
   (<seg> ^<cmd-name> <pa>)
}


# ### magicbot ###

# sp {op_plug-in*external*apply*send-plug-in-command*put-on-object
#    (state <s> ^name op_give1
#               ^problem-space.execution-type external
#               ^agent-params.domain magicbot
#               ^operator <o>
#               ^io.output-link <ol>
#               ^current-task-segment <seg>)
#    (<o> ^name send-give-command
#         ^arg1.id.perception-id <perc-id>
#         ^arg2.{2}.perception-id <perc-id2>
#         ^command-name <cmd-name>)
# -->
#    (<ol> ^do-control-law <cmd>)
#    (<cmd> ^name put-on-object
#           ^item-type output-command
#           ^parameters <params>
#           ^termination-condition <term>)
#    (<params> ^object-id (int <perc-id2>)
#              ^relation to1)
#    (<term> ^name holding
#            ^parameters <term-params>)
#    (<term-params> ^object-id (int <perc-id>)
#                   ^negated true)
#    (<seg> ^<cmd-name> <cmd>)
# }
