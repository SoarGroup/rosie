### For the internal environment, simulate the lock command on the top-state world ###

sp {op_lock1*propose*simulate-lock-command
   (state <s> ^name op_lock1
              ^problem-space.execution-type external
              ^agent-params.domain internal
              ^current-task-segment <seg>)
   (<seg> ^lock-command <cmd>)
   (<cmd> -^status complete)
-->
   (<s> ^operator <o> +)
   (<o> ^name simulate-lock-command
        ^item-type command-operator
        ^command <cmd>)
}

sp {op_lock1*apply*simulate-lock-command*mark*command*complete
   (state <s> ^name op_lock1
              ^operator <o>)
   (<o> ^name simulate-lock-command
        ^command <cmd>)
-->
   (<cmd> ^status complete)
}


### simulate-perception = false, change on the object directly ###

sp {op_lock1*apply*simulate-lock-command*change*to*locked1
   (state <s> ^name op_lock1
              ^operator <o>
             -^agent-params.simulate-perception true)
   (<o> ^name simulate-lock-command
        ^command.object.predicates <preds>)
   (<preds> ^<prop> not-locked1)
-->
   (<preds> ^<prop> not-locked1 -
            ^<prop> locked1)
}


### simulate-perception = true, change on the perception-monitor ###

sp {op_lock1*apply*simulate-lock-command*simulate-perception*change*to*locked1
   (state <s> ^name op_lock1
              ^operator <o>
              ^agent-params.simulate-perception true
              ^top-state.perception-monitor.object-monitor.object-info <obj-info>)
   (<o> ^name simulate-lock-command
        ^command.object <obj>)
   (<obj-info> ^input-link-obj.property <il-prop>
               ^world-obj <obj>)
   (<il-prop> ^predicate-handle not-locked1)
-->
   (<il-prop> ^predicate-handle not-locked1 -
              ^predicate-handle locked1)
}

