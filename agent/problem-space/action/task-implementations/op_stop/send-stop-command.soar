### send the low-level stop command to the output-link ###

sp {op_stop1*propose*send-stop-command
   (state <s> ^name op_stop1)
-->
   (<s> ^operator <o> + =)
   (<o> ^name send-stop-command
        ^item-type command-operator
        ^command-name stop-command)
}


### magicbot ###

sp {op_stop1*external*apply*send-stop-command*magicbot
   (state <s> ^name op_stop1
              ^problem-space.execution-type external
              ^operator <o>
              ^agent-params.domain magicbot
              ^current-task-segment <seg>
              ^top-state.io.output-link <out>)
   (<o> ^name send-stop-command
        ^command-name <cmd-name>)
-->
   (<out> ^do-control-law <law>)
   (<law> ^name stop
          ^item-type output-command
          ^termination-condition.name stabilized)
   (<seg> ^<cmd-name> <law>)
}

# For non-magicbot, just report success
sp {op_stop1*external*apply*send-stop-command*others
   (state <s> ^name op_stop1
              ^problem-space.execution-type external
              ^operator <o>
              ^agent-params.domain <> magicbot
              ^current-task-segment <seg>)
   (<o> ^name send-stop-command
        ^item-type output-command
        ^command-name <cmd-name>)
-->
   (<seg> ^<cmd-name> <law>)
   (<law> ^name stop
          ^status success)
}

#### cozmo ? ###
#
#sp {op_scan1*external*apply*send-stop-command*cozmo
#   (state <s> ^name op_scan1
#              ^problem-space.execution-type external
#              ^operator <o>
#              ^agent-params.domain cozmo
#              ^current-task-segment <seg>
#              ^top-state.io.output-link <out>)
#   (<o> ^name send-stop-command
#        ^command-name <cmd-name>)
#-->
#   (<out> ^stop <stop>)
#   (<stop> ^item-type output-command)
#   (<seg> ^<cmd-name> <stop>)
#}
