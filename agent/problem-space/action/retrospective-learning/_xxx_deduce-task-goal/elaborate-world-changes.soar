sp {deduce-task-goal*elaborate*world-changes
   (state <s> ^name deduce-task-goal)
-->
   (<s> ^world-changes <c>)
}

sp {deduce-task-goal*elaborate*world-changes*new-predicate*state
   (state <s> ^name deduce-task-goal
              ^world-changes <c>
              ^world.objects.object <src-obj>
              ^world-copy.objects.object <obj>)
   (<src-obj> ^handle <handle>
             ^predicates.<pred-name> <pred-val>)
   (<obj> ^handle <handle>
          -^predicates.<pred-name> <pred-val>)
-->
   (<c> ^new-predicate <new-pred>)
   (<new-pred> ^type unary
               ^handle <pred-val>
               ^property-handle <pred-name>
               ^1 <obj>)
}

sp {deduce-task-goal*elaborate*world-changes*new-predicate*relation
   (state <s> ^name deduce-task-goal
              ^world-changes <c>
              ^world.objects.object <src-obj1>
              ^world.objects.object <src-obj2>
              ^world.predicates.predicate <src-pred>
              ^world-copy.objects.object <obj1>
              ^world-copy.objects.object <obj2>
              ^world-copy.predicates.predicate <pred>)
   (<src-obj1> ^handle <handle1>)
   (<src-obj2> ^handle <handle2>)
   (<src-pred> ^handle <pred-handle>
               ^instance <src-i>)
   (<src-i> ^1 <src-obj1> ^2 <src-obj2>)
   (<obj1> ^handle <handle1>)
   (<obj2> ^handle <handle2>)
   (<pred> ^handle <pred-handle>)
   -{(<pred> ^instance <i>)
     (<i> ^1 <obj1> ^2 <obj2>)}
-->
   (<c> ^new-predicate <new-pred>)
   (<new-pred> ^type relation
               ^handle <pred-handle>
               ^1 <obj1>
               ^2 <obj2>)
}

sp {deduce-task-goal*elaborate*world-changes*old-predicate*unary
   (state <s> ^name deduce-task-goal
              ^world-changes <c>
              ^world.objects.object <src-obj>
              ^world-copy.objects.object <obj>)
   (<src-obj> ^handle <handle>
              -^predicates.<pred-name> <pred-val>)
   (<obj> ^handle <handle>
         ^predicates.<pred-name> <pred-val>)
-->
   (<c> ^old-predicate <old-pred>)
   (<old-pred> ^type unary
               ^handle <pred-val>
               ^property-handle <pred-name>
               ^1 <obj>)
}

sp {deduce-task-goal*elaborate*world-changes*old-predicate*relation
   (state <s> ^name deduce-task-goal
              ^world-changes <c>
              ^world.objects.object <src-obj1>
              ^world.objects.object <src-obj2>
              ^world.predicates.predicate <src-pred>
              ^world-copy.objects.object <obj1>
              ^world-copy.objects.object <obj2>
              ^world-copy.predicates.predicate <pred>)
   (<src-obj1> ^handle <handle1>)
   (<src-obj2> ^handle <handle2>)
   (<src-pred> ^handle <pred-handle>)
   (<obj1> ^handle <handle1>)
   (<obj2> ^handle <handle2>)
   (<pred> ^handle <pred-handle>
           ^instance <i>)
   (<i> ^1 <obj1> ^2 <obj2>)
   -{(<src-pred> ^instance <src-i>)
     (<src-i> ^1 <src-obj1> ^2 <src-obj2>)}
-->
   (<c> ^old-predicate <old-pred>)
   (<old-pred> ^type relation
               ^handle <pred-handle>
               ^1 <obj1>
               ^2 <obj2>)
}
   
