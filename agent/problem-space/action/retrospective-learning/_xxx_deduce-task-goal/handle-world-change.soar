sp {deduce-task-goal*propose*handle-world-change*new
   (state <s> ^name deduce-task-goal
              ^world-changes.new-predicate <pred>)
-->
   (<s> ^operator <o> + =)
   (<o> ^name handle-world-change
        ^predicate <pred>
        ^type new)
}

sp {deduce-task-goal*propose*handle-world-change*old
   (state <s> ^name deduce-task-goal
              ^world-changes.old-predicate <pred>)
-->
   (<s> ^operator <o> + =)
   (<o> ^name handle-world-change
        ^predicate <pred>
        ^type old)
}

sp {deduce-task-goal*apply*handle-world-change*new*unary*predicate
   (state <s> ^name deduce-task-goal
              ^operator <o>)
   (<o> ^name handle-world-change
        ^type new
        ^predicate <new-pred>)
   (<new-pred> ^type unary
               ^handle <pred-handle>
               ^property-handle <prop-handle>
               ^{1}.predicates <preds>)
-->
   (<preds> ^<prop-handle> <pred-handle>)
}

sp {deduce-task-goal*apply*handle-world-change*new*relation*predicate
   (state <s> ^name deduce-task-goal
              ^operator <o>
              ^world-copy.predicates.predicate <pred>)
   (<o> ^name handle-world-change
        ^type new
        ^predicate <new-pred>)
   (<new-pred> ^type relation
               ^handle <pred-handle>
               ^1 <obj1>
               ^2 <obj2>)
   (<pred> ^handle <pred-handle>)
-->
   (<pred> ^instance <i>)
   (<i> ^1 <obj1> ^2 <obj2>)
}

sp {deduce-task-goal*apply*handle-world-change*old*unary*predicate
   (state <s> ^name deduce-task-goal
              ^operator <o>)
   (<o> ^name handle-world-change
        ^type old
        ^predicate <old-pred>)
   (<old-pred> ^type unary
               ^handle <pred-handle>
               ^property-handle <prop-handle>
               ^{1}.predicates <preds>)
   (<preds> ^<prop-handle> <pred-handle>)
-->
   (<preds> ^<prop-handle> <pred-handle> -)
}

sp {deduce-task-goal*apply*handle-world-change*old*relation*predicate
   (state <s> ^name deduce-task-goal
              ^operator <o>
              ^world-copy.predicates.predicate <pred>)
   (<o> ^name handle-world-change
        ^type old
        ^predicate <old-pred>)
   (<old-pred> ^type relation
               ^handle <pred-handle>
               ^1 <obj1>
               ^2 <obj2>)
   (<pred> ^handle <pred-handle>
           ^instance <i>)
   (<i> ^1 <obj1> ^2 <obj2>)
-->
   (<pred> ^instance <i> -)
}

sp {deduce-task-goal*apply*handle-world-change*new*state*predicate*add*to*goal
   (state <s> ^name deduce-task-goal
              ^operator <o>
              ^goal-predicates <goal-preds>)
   (<o> ^name handle-world-change
        ^type new
        ^predicate <new-pred>)
   (<new-pred> ^type unary
               ^handle <pred-handle>
               ^property-handle <prop-handle>
               ^{1}.handle <obj1-handle>)
   -{(<goal-preds> ^goal-predicate <goal-pred>)
     (<goal-pred> ^type unary
                  ^handle <pred-handle>
                  ^1 <obj1-handle>)}
-->
   (<goal-preds> ^goal-predicate <goal-pred>)
   (<goal-pred> ^type unary
                ^handle <pred-handle>
                ^property-handle <prop-handle>
                ^1 <obj1-handle>)
}
                  
sp {deduce-task-goal*apply*handle-world-change*new*relation*predicate*add*to*goal
   (state <s> ^name deduce-task-goal
              ^operator <o>
              ^goal-predicates <goal-preds>)
   (<o> ^name handle-world-change
        ^type new
        ^predicate <new-pred>)
   (<new-pred> ^type relation
               ^handle <pred-handle>
               ^{1}.handle <obj1-handle>
               ^{2}.handle <obj2-handle>)
   -{(<goal-preds> ^goal-predicate <goal-pred>)
     (<goal-pred> ^type relation
                  ^handle <pred-handle>
                  ^1 <obj1-handle>
                  ^2 <obj2-handle>)}
-->
   (<goal-preds> ^goal-predicate <goal-pred>)
   (<goal-pred> ^type relation
                ^handle <pred-handle>
                ^1 <obj1-handle>
                ^2 <obj2-handle>)
}
sp {deduce-task-goal*apply*handle-world-change*old*unary*predicate*remove*from*goal
   (state <s> ^name deduce-task-goal
              ^operator <o>
              ^goal-predicates <goal-preds>)
   (<o> ^name handle-world-change
        ^type old
        ^predicate <new-pred>)
   (<new-pred> ^type unary
               ^handle <pred-handle>
               ^{1}.handle <obj1-handle>)
   (<goal-preds> ^goal-predicate <goal-pred>)
   (<goal-pred> ^type unary
                ^handle <pred-handle>
                ^1 <obj1-handle>)
-->
   (<goal-preds> ^goal-predicate <goal-pred> -)
}
                  
sp {deduce-task-goal*apply*handle-world-change*new*relation*predicate*remove*goal*predicate
   (state <s> ^name deduce-task-goal
              ^operator <o>
              ^goal-predicates <goal-preds>)
   (<o> ^name handle-world-change
        ^type old
        ^predicate <new-pred>)
   (<new-pred> ^type relation
               ^handle <pred-handle>
               ^{1}.handle <obj1-handle>
               ^{2}.handle <obj2-handle>)
   (<goal-preds> ^goal-predicate <goal-pred>)
   (<goal-pred> ^type relation
                ^handle <pred-handle>
                ^1 <obj1-handle>
                ^2 <obj2-handle>)
-->
   (<goal-preds> ^goal-predicate <goal-pred> -)
}
