sp {deduce-task-goal*propose*create-world-copy
   (state <s> ^name deduce-task-goal
              ^world <w>
             -^world-copy.copied true)
-->
   (<s> ^operator <o> + >)
   (<o> ^name create-world-copy)
}

sp {deduce-task-goal*apply*create-world-copy*mark*copied-level1
   (state <s> ^name deduce-task-goal
              ^operator.name create-world-copy)
-->
   (<s> ^copied level1)
}

sp {deduce-task-goal*apply*create-world-copy*mark*copied-level2
   (state <s> ^name deduce-task-goal
              ^operator.name create-world-copy
              ^copied level1)
-->
   (<s> ^copied level2)
}

sp {deduce-task-goal*apply*create-world-copy*mark*copied-level3
   (state <s> ^name deduce-task-goal
              ^operator.name create-world-copy
              ^copied level2)
-->
   (<s> ^copied level3)
}

sp {deduce-task-goal*apply*create-world-copy*mark*world-copy*copied
   (state <s> ^name deduce-task-goal
              ^operator.name create-world-copy
              ^copied level3
              ^world-copy <copy>)
-->
   (<copy> ^copied true)
}

sp {deduce-task-goal*apply*create-world-copy*create*world-copy
   (state <s> ^name deduce-task-goal
              ^operator.name create-world-copy
              ^world <w>)
-->
   (<s> ^world-copy <wc>)
   (<wc> ^objects <objs>
         ^predicates <preds>
         ^robot <rob>)
   (<rob> ^arm <arm>)
}

sp {deduce-task-goal*apply*create-world-copy*copy*robot*current-location
   (state <s> ^name deduce-task-goal
              ^operator.name create-world-copy
              ^world.robot <src-robot>
              ^world-copy.robot <robot>
              ^world-copy.objects.object <loc>)
   (<src-robot> ^current-location.handle <loc-handle>)
   (<loc> ^handle <loc-handle>)
-->
   (<robot> ^current-location <loc>)
}

sp {deduce-task-goal*apply*create-world-copy*copy*robot*arm
   (state <s> ^name deduce-task-goal
              ^operator.name create-world-copy
              ^world.robot.arm <src-arm>
              ^world-copy.robot.arm <arm>)
   (<src-arm> ^<att-name> <att-val>)
-->
   (<arm> ^<att-name> <att-val>)
}


sp {deduce-task-goal*apply*create-world-copy*copy*object
   (state <s> ^name deduce-task-goal
              ^operator.name create-world-copy
              ^world.objects.object <src-obj>
              ^world-copy.objects <objs>)
   (<src-obj> ^handle <handle>
              ^item-type <type>)
-->
   (<objs> ^object <new-obj>)
   (<new-obj> ^handle <handle>
              ^item-type <type>
              ^predicates <preds>)
}

sp {deduce-task-goal*apply*create-world-copy*copy*object*predicates
   (state <s> ^name deduce-task-goal
              ^operator.name create-world-copy
              ^world.objects.object <src-obj>
              ^world-copy.objects.object <obj>)
   (<src-obj> ^handle <handle>
              ^predicates.<pred-name> <pred-val>)
   (<obj> ^handle <handle>
          ^predicates <preds>)
-->
   (<preds> ^<pred-name> <pred-val>)
}


sp {deduce-task-goal*apply*create-world-copy*copy*predicate
   (state <s> ^name deduce-task-goal
              ^operator.name create-world-copy
              ^world.predicates <src-preds>
              ^world-copy.predicates <preds>)
   (<src-preds> ^predicate.handle <handle>)
-->
   (<preds> ^predicate <new-pred>)
   (<new-pred> ^handle <handle>)
}

sp {deduce-task-goal*apply*create-world-copy*copy*predicate*instance*size*2
   (state <s> ^name deduce-task-goal
              ^operator.name create-world-copy
              ^world.objects.object <src-obj1>
              ^world.objects.object <src-obj2>
              ^world.predicates.predicate <src-pred>
              ^world-copy.objects.object <obj1>
              ^world-copy.objects.object <obj2>
              ^world-copy.predicates.predicate <pred>)
   (<src-obj1> ^handle <handle1>)
   (<src-obj2> ^handle <handle2>)
   (<src-pred> ^handle <pred-handle>
               ^instance <src-instance>)
   (<src-instance> ^1 <src-obj1> ^2 <src-obj2> -^3)
   (<obj1> ^handle <handle1>)
   (<obj2> ^handle <handle2>)
   (<pred> ^handle <pred-handle>)
-->
   (<pred> ^instance <new-instance>)
   (<new-instance> ^1 <obj1> ^2 <obj2>)
}

        