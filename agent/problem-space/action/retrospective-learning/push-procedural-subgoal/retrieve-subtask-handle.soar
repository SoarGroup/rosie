sp {push-procedural-subgoal*propose*retrieve-subtask-handle
   (state <s> ^name push-procedural-subgoal
             -^subtask-handle)
-->
   (<s> ^operator <o> +)
   (<o> ^name retrieve-subtask-handle)
}

sp {push-procedural-subgoal*apply*retrieve-subtask-handle
   (state <s> ^name push-procedural-subgoal
              ^operator.name retrieve-subtask-handle
              ^task-operator.task-handle <task-handle>
              ^subtask-context <context> 
              ^superstate.superstate.subtasks-stack <stack>
              ^epmem.command <cmd>)
   (<context> ^episode-id <min>
              ^end-episode-id <max>
              ^subtask-copy.task-handle <sub-handle>)
-->
   (<cmd> ^query <q>
          ^before <max>
          ^after <min>)
   (<q> ^task-stack.bottom <bot>)
   (<bot> ^task-operator.task-handle <sub-handle>
          ^assigned-subtask-handle true
          ^prev.task-operator.task-handle <task-handle>)
}


sp {push-procedural-subgoal*apply*retrieve-subtask-handle*success
   (state <s> ^name push-procedural-subgoal
              ^operator.name retrieve-subtask-handle
              ^epmem <epmem>)
   (<epmem> ^result <res>
            ^result.retrieved <episode>
            ^command <cmd>)
   (<res> ^success <q>
          ^retrieved <episode>
          ^memory-id <ep-id>
          ^normalized-match-score 1.0)
   (<cmd> ^query <q>)
   (<episode> ^task-stack.bottom.task-operator.subtask-handle <sub-h>)
-->
   (<s> ^subtask-handle <sub-h>)
   (<cmd> ^query <q> -)
}

