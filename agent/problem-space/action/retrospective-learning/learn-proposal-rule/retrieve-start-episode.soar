sp {learn-proposal-rule*propose*retrieve-start-episode
   (state <s> ^name learn-proposal-rule
              ^task-handle <task-h>
             -^start-episode)
-->
   (<s> ^operator <o> +)
   (<o> ^name retrieve-start-episode)
}

sp {learn-proposal-rule*apply*retrieve-start-episode
   (state <s> ^name learn-proposal-rule
              ^operator.name retrieve-start-episode
              ^task-handle <task-handle>
              ^epmem.command <cmd>)
-->
   (<cmd> ^query <q>)
   (<q> ^task-stack.bottom <bot>)
   (<bot> ^start-of-execution true
          ^task-operator.task-handle <task-handle>)
}

sp {learn-proposal-rule*apply*retrieve-start-episode*success
   (state <s> ^name learn-proposal-rule
              ^operator.name retrieve-start-episode
              ^epmem <epmem>)
   (<epmem> ^result <res>
            ^result.retrieved <episode>
            ^command <cmd>)
   (<res> ^success <q>
          ^retrieved <episode>
          ^normalized-match-score 1.0)
   (<cmd> ^query <q>)
-->
   (<s> ^start-episode <episode>)
   (<cmd> ^query <q> -)
}

sp {learn-proposal-rule*apply*retrieve-start-episode*failure*no*exact*match*return*failure
   (state <s> ^name learn-proposal-rule
              ^operator.name retrieve-start-episode
              ^epmem <epmem>
              ^superstate <ss>)
   (<epmem> ^result.normalized-match-score < 1.0
            ^command <cmd>)
   (<cmd> ^query <q>)
-->
   (<ss> ^proposal-learning-result failure)
}
        
sp {learn-proposal-rule*apply*retrieve-start-episode*failure*no*match*return*failure
   (state <s> ^name learn-proposal-rule
              ^operator.name retrieve-start-episode
              ^epmem <epmem>
              ^superstate <ss>)
   (<epmem> ^result.failure
            ^command <cmd>)
   (<cmd> ^query <q>)
-->
   (<ss> ^proposal-learning-result failure)
}
