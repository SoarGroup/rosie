sp {subproblem*search*selection*success*evaluation*mark*search-succeeded*true
    (state <s> ^name selection 
               ^problem-space.subproblem search
               ^top-selection true
               ^evaluation <e1> ^superstate <ss>)
    (<e1> ^superoperator <o1>
          ^symbolic-value { << partial-success success >> <s*1> }
          ^desired <eb>)
    (<ss> ^desired <eb>)
    -->
   (<ss> ^successful-operator <o1>)
}

#sp {subproblem*search*selection*success*evaluation*write*successful
#    (state <s> ^name selection 
#               ^problem-space.subproblem search
#               ^evaluation <e1>)
#    (<e1> ^superoperator <o1>
#          ^symbolic-value success)
#   (<o1> ^name <task-name>)
# -->
#   (write (crlf) |Successful Operator: | <task-name> (crlf))
#}
#
#sp {subproblem*search*selection*success*evaluation*write*successful*task*arg1
#    (state <s> ^name selection 
#               ^problem-space.subproblem search
#               ^evaluation <e1>)
#    (<e1> ^superoperator <o1>
#          ^symbolic-value success)
#   (<o1> ^name <task-name>
#         ^arg1.id.root-category <cat>
#        -^arg2)
# -->
#   (write (crlf) |Successful Operator: | <task-name> |(| <cat> |)| (crlf))
#}
#
#sp {subproblem*search*selection*success*evaluation*write*successful*task*arg1*arg2
#    (state <s> ^name selection 
#               ^problem-space.subproblem search
#               ^evaluation <e1>)
#    (<e1> ^superoperator <o1>
#          ^symbolic-value success)
#   (<o1> ^name <task-name>
#         ^arg1.id.root-category <cat>
#         ^arg2 <arg2>)
#   (<arg2> ^handle <rel>
#           ^{2}.root-category <cat2>)
# -->
#   (write (crlf) |Successful Operator: | <task-name> |(| <cat> |, | <rel> |(| <cat2> |) )| (crlf))
#}
