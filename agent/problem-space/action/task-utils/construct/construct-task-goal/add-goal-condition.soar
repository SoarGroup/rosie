### Operator: add-goal-condition

# once a goal predicate was constructed via construct-task-argument, 
#   add it to the task-goal structure being created

sp {task-utils*construct-task-goal*propose*add-goal-condition
   (state <s> ^name construct-task-goal
              ^goal-condition <gcd>
              ^construct-task-argument <cta>
              ^task-goal <goal>)
   (<gcd> -^added)
   (<cta> ^arg-type predicate
          ^goal-condition <gcd>
          ^created-arg <pred>)
-->
   (<s> ^operator <o> + =)
   (<o> ^name add-goal-condition
        ^goal-condition <gcd>
        ^predicate <pred>)
}

# If there is no conditions wme on the goal, add it
sp {task-utils*construct-task-goal*add-goal-condition*create*conditions
   (state <s> ^name construct-task-goal
              ^operator.name add-goal-condition
              ^task-goal <goal>)
   (<goal> -^conditions)
-->
   (<goal> ^conditions <conds>)
   (<conds> ^pred-count 0)
}

# The number of the predicate we are adding to the goal
sp {task-utils*construct-task-goal*add-goal-condition*elaborate*pred-number
   (state <s> ^name construct-task-goal
              ^operator <o> +
              ^task-goal.conditions <conds>)
   (<o> ^name add-goal-condition)
   (<conds> ^pred-count <n>)
-->
   (<o> ^pred-number (+ <n> 1))
}

# Add the predicate to the goal and increment pred-count
sp {task-utils*construct-task-goal*apply*add-goal-condition
   (state <s> ^name construct-task-goal
              ^operator <o>
              ^task-goal.conditions <conds>)
   (<o> ^name add-goal-condition
        ^goal-condition <gcd>
        ^predicate <pred>
        ^pred-number <pred-num>)
   (<conds> ^pred-count <n>)
-->
   (<conds> ^<pred-num> <pred>
            ^pred-count <n> -
            ^pred-count (+ <n> 1))
   (<gcd> ^added true)
}

### Adding reference-info for each predicate object
sp {task-utils*construct-task-goal*elaborate*add-goal-condition*copy-reference-info*obj1
   (state <s> ^name construct-task-goal
              ^operator <o> +)
   (<o> ^name add-goal-condition
        ^goal-condition.obj1-ref-info <ref1>)
-->
   (<o> ^copy-reference-info <cri>)
   (<cri> ^arg-num 1
          ^source <ref1>
          ^destination <dest>)
}

sp {task-utils*construct-task-goal*elaborate*add-goal-condition*copy-reference-info*obj2
   (state <s> ^name construct-task-goal
              ^operator <o> +)
   (<o> ^name add-goal-condition
        ^goal-condition.obj2-ref-info <ref2>)
-->
   (<o> ^copy-reference-info <cri>)
   (<cri> ^arg-num 2
          ^source <ref2>
          ^destination <dest>)
}

sp {task-utils*construct-task-goal*apply*add-goal-condition*copy-reference-info*root
   (state <s> ^name construct-task-goal
              ^operator <o>)
   (<o> ^name add-goal-condition
        ^copy-reference-info <cri>
        ^predicate <pred>)
   (<cri> ^arg-num <num>
          ^destination <ref-info>)
-->
   (<pred> ^reference-info <ref-info>)
   (<ref-info> ^num <num>)
}

sp {task-utils*construct-task-goal*apply*add-goal-condition*copy-reference-info*constraint
   (state <s> ^name construct-task-goal
              ^operator <o>)
   (<o> ^name add-goal-condition
        ^copy-reference-info <cri>)
   (<cri> ^source.<prop-h> <pred-h>
          ^destination <ref-info>)
-->
   (<ref-info> ^<prop-h> <pred-h>)
}


