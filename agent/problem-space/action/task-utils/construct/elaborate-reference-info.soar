######################### reference-info ##########################
# Elaborate reference-info for objects

### object arguments
sp {task-utils*construct*elaborate*construct-task-argument*reference-info*object
   (state <s> ^construct-task-argument <cta>)
   (<cta> ^arg-type object
          ^arg-name <arg-name>
          ^parent <par>)
   (<par> ^reference-info <ref>)
   (<ref> ^arg-name <arg-name>)
  -{(<par> ^reference-info { <ref2> > <ref> })
    (<ref2> ^arg-name <arg-name>)}
-->
   (<cta> ^reference-info <ref>)
}

### partial predicate arguments
sp {task-utils*construct*elaborate*construct-task-argument*reference-info*partial-predicate
   (state <s> ^construct-task-argument <cta>)
   (<cta> ^arg-type partial-predicate
          ^source-name <arg-name>
          ^parent <par>)
   (<par> ^reference-info <ref>)
   (<ref> ^arg-name <arg-name>)
  -{(<par> ^reference-info { <ref2> > <ref> })
    (<ref2> ^arg-name <arg-name>)}
-->
   (<cta> ^reference-info.2 <ref>)
}

# it is possible that the reference-info arg-name is relation and doesn't match the source-name
sp {task-utils*construct*elaborate*construct-task-argument*reference-info*partial-predicate*special*case
   (state <s> ^construct-task-argument <cta>)
   (<cta> ^arg-type partial-predicate
          ^source-name predicate
          ^parent <par>)
   (<par> ^reference-info <ref>)
   (<ref> ^arg-name relation)
  -{(<par> ^reference-info { <ref2> > <ref> })
    (<ref2> ^arg-name relation)}
-->
   (<cta> ^reference-info.2 <ref>)
}

### unary predicates
sp {task-utils*construct*elaborate*construct-task-argument*reference-info*unary*predicate
   (state <s> ^construct-task-argument <cta>)
   (<cta> ^arg-type predicate
          ^parent <par>
          ^source.type unary
         -^disable-reference-info true)
   (<par> ^reference-info <ref>)
   (<ref> ^arg-name arg1)
  -{(<par> ^reference-info { <ref2> > <ref> })
    (<ref2> ^arg-name arg1)}
-->
   (<cta> ^reference-info.1 <ref>)
}

### relation predicates
sp {task-utils*construct*elaborate*construct-task-argument*reference-info*relation*predicate
   (state <s> ^construct-task-argument <cta>)
   (<cta> ^arg-type predicate
          ^parent <par>
          ^source.type relation
         -^disable-reference-info true)
   (<par> ^reference-info <ref> <ref-rel>)
   (<ref> ^arg-name arg1)
   (<ref-rel> ^arg-name << arg2 predicate relation >>)
  -{(<par> ^reference-info { <ref2> > <ref> })
    (<ref2> ^arg-name arg1)}
  -{(<par> ^reference-info { <ref-rel2> > <ref-rel> })
    (<ref-rel2> ^arg-name << arg2 predicate relation >>)}
-->
   (<cta> ^reference-info <new-ref>)
   (<new-ref> ^1 <ref> ^2 <ref-rel>)
}

