# Sometimes we have to retrieve the entire task goal graph

# Will create the wme ^goal-graph-nodes <nodes>)
#   With 1 ^goal <g> for each node in the graph (including the created one)
#   Note that all goals are retrieved separately so their identifiers won't match 
#   (Need to use LTI test)

# Recurisvely retrieve all the nodes in the graph and elaborate onto ^goal-graph-nodes
sp {add-node-to-goal-graph*elaborate*goal-graph-nodes
   (state <s> ^name add-node-to-goal-graph
              ^retrieve-entire-goal-graph true)
-->
   (<s> ^goal-graph-nodes <goals>)
}

sp {add-node-to-goal-graph*elaborate*goal-graph-nodes*start*handle
   (state <s> ^name add-node-to-goal-graph
              ^task-concept-network.goal-graph <start>
              ^goal-graph-nodes <goals>)
   (<start> ^handle <goal-h>)
-->
   (<goals> ^retrieve <goal-h>)
}

sp {add-node-to-goal-graph*elaborate*smem-query*goal-graph-node*from*handle
   (state <s> ^name add-node-to-goal-graph
             -^created-node.handle <goal-h>
             -^change-goal-handles.changed true
              ^goal-graph-nodes <goals>)
   (<goals> ^retrieve <goal-h>
           -^goal.handle <goal-h>)
-->
   (<s> ^smem-query <q>)
   (<q> ^cue <cue>
        ^depth 6
        ^destination <goals>
        ^result-name goal)
   (<cue> ^handle <goal-h>)
}

sp {add-node-to-goal-graph*elaborate*goal-graph-nodes*created-node
   (state <s> ^name add-node-to-goal-graph
              ^created-node <node>
              ^goal-graph-nodes <goals>)
-->
   (<goals> ^goal <node>)
}

sp {add-node-to-goal-graph*elaborate*goal-graph-nodes*next*goal-handle
   (state <s> ^name add-node-to-goal-graph
              ^goal-graph-nodes <goals>)
   (<goals> ^goal.next.goal.handle <next-goal-h>)
-->
   (<goals> ^retrieve <next-goal-h>)
}

