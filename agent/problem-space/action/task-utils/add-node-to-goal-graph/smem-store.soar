### Here we recursively expand the ^store-node and ^store-edge wmes
# and elaborate a bunch of ^store-concept <id> wmes
# to store the entire structure

# We use store-predicate-set from task-utils/store-task-operator.soar

sp {add-node-to-goal-graph*elaborate*store-node*from*created-node
   (state <s> ^name add-node-to-goal-graph
              ^created-node <node>)
-->
   (<s> ^store-node <node>)
}

##### EXPAND store-node

# store the node root
sp {add-node-to-goal-graph*store-node*elaborate*store-predicate-set
   (state <s> ^name add-node-to-goal-graph
              ^store-node <node>)
-->
   (<s> ^store-predicate-set <node>)
}

# store any node modifiers
sp {add-node-to-goal-graph*store-node*elaborate*store-concept*modifiers
   (state <s> ^name add-node-to-goal-graph
              ^store-node.modifiers <mods>)
-->
   (<s> ^store-concept <mods>)
}

##### EXPAND store-edge

# store the head + next pointer of an edge
sp {add-node-to-goal-graph*store-edge*elaborate*store-concept*edge
   (state <s> ^name add-node-to-goal-graph
              ^store-edge <se>)
   (<se> ^head <head>
         ^edge <edge>)
-->
   (<s> ^store-concept <head> <edge>)
}

# store any conditions on the edge
sp {add-node-to-goal-graph*store-edge*elaborate*store-concept*conditions
   (state <s> ^name add-node-to-goal-graph
              ^store-edge.edge.conditions <conds>)
   (<conds> ^pred-count <c>)
-->
   (<s> ^store-predicate-set <conds>)
}

