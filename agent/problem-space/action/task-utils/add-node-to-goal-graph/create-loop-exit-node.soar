### Operator create-loop-exit-node
# Proposed if node-type = loop-exit
# Creates a node with ^item-type loop-exit-goal and 0 predicates

### For a repeating block with conditions, create a loop-exit node
sp {add-node-to-goal-graph*propose*create-loop-exit-node*repeat
   (state <s> ^name add-node-to-goal-graph
              ^node-type repeat
              ^task-handle <task-h>
              ^repeat-conditions <conds>
             -^loop-exit-node)
-->
   (<s> ^operator <o> + =)
   (<o> ^name create-loop-exit-node
        ^item-type create-node-operator
        ^task-handle <task-h>
        ^result-name created-loop-exit-node)
}

sp {add-node-to-goal-graph*apply*create-loop-exit-node
   (state <s> ^name add-node-to-goal-graph
              ^operator <o>)
   (<o> ^name create-loop-exit-node
        ^task-handle <task-h>)
-->
   (<s> ^new-node <node>
        ^loop-exit-node <node>
        ^store-node <node>)
   (<node> ^item-type loop-exit
           ^handle (make-constant-symbol (concat <task-h> |exit|))
           ^pred-count 0)
}
