sp {task-utils*anystate*propose*generalize-task-operator
   (state <s> ^generalize-task-operator <gto>)
   (<gto> ^task-operator <task-op>        
          ^task-concept-network <tcn>      
          ^reference-task-op <ref-task>   
          ^reference-tcn-proc <ref-proc>
         -^general-task-rep
         -^reference-goal)
-->
   (<s> ^operator <o> + =)
   (<o> ^name generalize-task-operator
        ^destination <gto>
        ^task-operator <task-op>        
        ^task-concept-network <tcn>      
        ^reference-task-op <ref-task>   
        ^reference-tcn-proc <ref-proc>)
}

sp {task-utils*anystate*propose*generalize-task-operator*without*references
   (state <s> ^generalize-task-operator <gto>)
   (<gto> ^task-operator <task-op>        
          ^task-concept-network <tcn>      
         -^reference-task-op <ref-task>   
         -^reference-tcn-proc <ref-proc>
         -^general-task-rep)
-->
   (<s> ^operator <o> + =)
   (<o> ^name generalize-task-operator
        ^destination <gto>
        ^task-operator <task-op>        
        ^task-concept-network <tcn> )
}

sp {task-utils*anystate*propose*generalize-task-operator*with*reference*goal
   (state <s> ^generalize-task-operator <gto>)
   (<gto> ^task-operator <task-op>        
          ^task-concept-network <tcn>      
          ^reference-task-op <ref-task>   
          ^reference-tcn-proc <ref-proc>
          ^reference-goal <goal>
          ^reference-goal-id <goal-id>
         -^general-task-rep)
-->
   (<s> ^operator <o> + =)
   (<o> ^name generalize-task-operator
        ^destination <gto>
        ^task-operator <task-op>        
        ^task-concept-network <tcn>      
        ^reference-task-op <ref-task>   
        ^reference-tcn-proc <ref-proc>
        ^reference-goal <goal>
        ^reference-goal-id <goal-id>)
}
