### GENERALIZE NUMBER

# procedural match - the number matches one on the reference-task-op
sp {task-utils*generalize-task-argument*propose*generalize-task-argument*number*procedural
   (state <s> ^generalize-task-argument <arg>
              ^reference-tcn-proc.<arg-name> <parg>
              ^reference-task-op.<arg-name> <ref-arg>)
   (<arg> ^arg-type number
          ^instantiation <ins>
         -^general-arg-rep)
   (<ins> ^number <num>)
   (<ref-arg> ^number <num>)
   (<parg> ^arg-type number
           ^id <num-slot>)
-->
   (<s> ^operator <o> + =)
   (<o> ^name generalize-task-argument
        ^argument <arg>
        ^arg-type number
        ^match-type procedural
        ^id <num-slot>)
}

sp {task-utils*generalize-task-argument*apply*generalize-task-argument*number*procedural
  (state <s> ^operator <o>)
  (<o> ^name generalize-task-argument
       ^argument <arg>
       ^arg-type number
       ^match-type procedural
       ^id <num-slot>)
-->
  (<arg> ^general-arg-rep <gen>)
  (<gen> ^id <num-slot>)
}

# default match - copy the predicates onto a default rep
sp {task-utils*generalize-task-argument*propose*generalize-task-argument*number*default
  (state <s> ^generalize-task-argument <arg>)
  (<arg> ^arg-type number
         ^instantiation <ins>
        -^general-arg-rep)
   (<ins> ^number <num>)
-->
  (<s> ^operator <o> + =)
  (<o> ^name generalize-task-argument
       ^argument <arg>
       ^arg-type number
       ^match-type default
       ^number <num>)
}

sp {task-utils*generalize-task-argument*apply*generalize-task-argument*number*default
  (state <s> ^operator <o>)
  (<o> ^name generalize-task-argument
       ^argument <arg>
       ^arg-type number
       ^match-type default
       ^number <num>)
-->
  (<arg> ^general-arg-rep <rep>)
  (<rep> ^id <num-slot>)
  (<num-slot> ^default <def>)
  (<def> ^number <num>)
}
