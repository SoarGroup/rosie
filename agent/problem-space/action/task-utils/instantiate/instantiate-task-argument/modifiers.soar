### INSTANTIATE MODIFIER

sp {task-utils*instantiate-task-operator*propose*instantiate-task-argument*modifiers
   (state <s> ^instantiate-task-argument <arg>)
   (<arg> ^arg-type modifiers
         -^instantiation)
-->
  (<s> ^operator <o> + =)
  (<o> ^name instantiate-task-argument
       ^argument <arg>
       ^arg-type modifiers)
}

# ENUMERATE: 1-3 task modifiers

sp {task-utils*instantiate-task-argument*apply*instantiate-task-argument*modifiers*1
   (state <s> ^operator <o>)
   (<o> ^name instantiate-task-argument
        ^arg-type modifiers
        ^argument <arg>)
   (<arg> ^general-arg-rep <rep>)
   (<rep> ^mod-handle <mod1>
         -^mod-handle { <mod2> <> <mod1> })
-->
   (<arg> ^instantiation <ins>)
   (<ins> ^handle <mod1>)
}

sp {task-utils*instantiate-task-argument*apply*instantiate-task-argument*modifiers*2
   (state <s> ^operator <o>)
   (<o> ^name instantiate-task-argument
        ^arg-type modifiers
        ^argument <arg>)
   (<arg> ^general-arg-rep <rep>)
   (<rep> ^mod-handle <mod1>
          ^mod-handle { <mod2> > <mod1> }
         -^mod-handle { <mod3> <> <mod2> <> <mod1> })
-->
   (<arg> ^instantiation <ins>)
   (<ins> ^handle <mod1> <mod2>)
}

sp {task-utils*instantiate-task-argument*apply*instantiate-task-argument*modifiers*3
   (state <s> ^operator <o>)
   (<o> ^name instantiate-task-argument
        ^arg-type modifiers
        ^argument <arg>)
   (<arg> ^general-arg-rep <rep>)
   (<rep> ^mod-handle <mod1>
          ^mod-handle { <mod2> > <mod1> }
          ^mod-handle { <mod3> > <mod2> }
         -^mod-handle { <mod4> <> <mod3> <> <mod2> <> <mod1> })
-->
   (<arg> ^instantiation <ins>)
   (<ins> ^handle <mod1> <mod2> <mod3>)
}

