# Order - procedural > default > abstract

sp {task-utils*instantiate-task-operator*prefer*instantiate-task-argument*procedural*over*others
   (state <s> ^instantiate-task-argument <arg>
             ^operator <o1> +
             ^operator <o2> +)
  (<o1> ^name instantiate-task-argument
        ^argument <arg>
        ^match-type procedural)
  (<o2> ^name instantiate-task-argument
        ^argument <arg>
        ^match-type << default abstract >>)
-->
  (<s> ^operator <o1> > <o2>)
}

sp {task-utils*instantiate-task-operator*prefer*instantiate-task-argument*default*over*others
   (state <s> ^instantiate-task-argument <arg>
              ^operator <o1> +
             ^operator <o2> +)
  (<o1> ^name instantiate-task-argument
        ^argument <arg>
        ^match-type default)
  (<o2> ^name instantiate-task-argument
        ^argument <arg>
        ^match-type abstract)
-->
  (<s> ^operator <o1> > <o2>)
}

sp {task-utils*instantiate-task-operator*prefer*instantiate-task-argument*relation-constraint*over*object
   (state <s> ^operator <o1> +
              ^operator <o2> +)
  (<o1> ^name instantiate-task-argument
        ^arg-type relation-constraint)
  (<o2> ^name instantiate-task-argument
        ^arg-type object)
-->
  (<s> ^operator <o1> > <o2>)
}

### AM: This rule is just to try and make the system more deterministic by breaking ties alphabetically
# sp {task-utils*instantiate-task-operator*prefer*instantiate-task-argument*object*alphabetical
#    (state <s> ^instantiate-task-argument <arg>
#              ^operator <o1> +
#              ^operator <o2> +)
#   (<o1> ^name instantiate-task-argument
#         ^argument <arg>
#         ^match-type <type>
#         ^id <obj1>)
#   (<o2> ^name instantiate-task-argument
#         ^argument <arg>
#         ^match-type <type>
#         ^id <obj2>)
#    (<obj1> ^handle <obj-h1>)
#    (<obj2> ^handle > <obj-h1>)
# -->
#   (<s> ^operator <o1> > <o2>)
# }



#Prefer to instantiate task arguments that match condition rather than just randomly selecting
# Need to generalize for multiple conditions
#Preference for both operators if non have been applied yet
sp {task-utils*instantiate-task-operator*prefer*instantiate-task-argument*default*condition*match*pred-count1
   (state <s> ^instantiate-task-argument <arg>
              ^world <aw>
              ^conditions <c>
              ^operator <o1> +
              ^operator <o2> +
              ^quiescence t)
  (<aw> ^predicates.predicate <p>)
  (<p> ^handle <pred> ^instance <in>)
  (<in> ^1 <obj> ^2 <obj2>)
  (<o1> ^name instantiate-task-argument
        ^argument.general-arg-rep.id <objid>
        ^id <obj>
        ^match-type default)
  (<c> ^1 <pred1> ^pred-count 1)
  (<pred1> ^1 <objid> ^2 <objid2> ^type relation ^id.default.predicate-handle <pred>)
  (<o2> ^name instantiate-task-argument
        ^argument.general-arg-rep.id <objid2>
        ^id <obj2>
        ^match-type default)
-->
  (<s> ^operator <o1> >)
  (<s> ^operator <o2> >)
}
#Preferences for operators if an argument has already been instantiated
sp {task-utils*instantiate-task-operator*prefer*instantiate-task-argument*condition*match*pred-count1*existing*arg2
   (state <s> ^instantiate-task-argument <arg>
              ^world <aw>
              ^conditions <c>
              ^operator <o1> +
              ^instantiate-task-argument <ita>
              ^quiescence t)
  (<aw> ^predicates.predicate <p>)
  (<p> ^handle <pred> ^instance <in>)
  (<in> ^1 <obj> ^2 <obj2>)
  (<o1> ^name instantiate-task-argument
        ^argument.general-arg-rep.id <objid>
        ^id <obj>
        ^match-type default)
  (<c> ^1 <pred1> ^pred-count 1)
  (<pred1> ^1 <objid> ^2 <objid2> ^type relation ^id.default.predicate-handle <pred>)
  (<ita> ^general-arg-rep.id <objid2>
         ^instantiation.id <obj2>)
-->
  (<s> ^operator <o1> >)
}
sp {task-utils*instantiate-task-operator*prefer*instantiate-task-argument*condition*match*pred-count1*existing*arg1
   (state <s> ^instantiate-task-argument <arg>
              ^world <aw>
              ^conditions <c>
              ^operator <o1> +
              ^instantiate-task-argument <ita>
              ^quiescence t)
  (<aw> ^predicates.predicate <p>)
  (<p> ^handle <pred> ^instance <in>)
  (<in> ^1 <obj2> ^2 <obj>)
  (<o1> ^name instantiate-task-argument
        ^argument.general-arg-rep.id <objid>
        ^id <obj>
        ^match-type default)
  (<c> ^1 <pred1> ^pred-count 1)
  (<pred1> ^1 <objid2> ^2 <objid> ^type relation ^id.default.predicate-handle <pred>)
  (<ita> ^general-arg-rep.id <objid2>
         ^instantiation.id <obj2>)
-->
  (<s> ^operator <o1> >)
}

