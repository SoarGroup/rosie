### relation-constraint
# when an object has a relation on it (e.g., an object that is on the table)

sp {task-utils*instantiate-task-argument*expand*object*relation-constraint
   (state <s> ^instantiate-task-argument <arg>)
   (<arg> ^arg-type object
          ^general-arg-rep.id <rep>)
   (<rep> ^default.relation <rel>)
-->
   (<s> ^instantiate-task-argument <ins-rel>)
   (<ins-rel> ^arg-type relation-constraint
              ^general-arg-rep <rel>)

   (<arg> ^relation-constraint <ins-rel>)
}

sp {task-utils*instantiate-task-operator*propose*instantiate-task-argument*relation-constraint
   (state <s> ^instantiate-task-argument <arg>)
   (<arg> ^arg-type relation-constraint
          ^general-arg-rep <rel>
         -^found-matches true)
   (<rel> ^handle <rel-h>
          ^{2}.default <obj2>)
-->
  (<s> ^operator <o> + =)
  (<o> ^name instantiate-task-argument
       ^arg-type relation-constraint
       ^argument <arg>
       ^relation-handle <rel-h>
       ^object2 <obj2>)
}


sp {task-utils*instantiate-task-operator*apply*instantiate-task-argument*relation-constraint*found-matches
   (state <s> ^operator <o>
              ^world.objects.object <obj>)
   (<o> ^name instantiate-task-argument
        ^arg-type relation-constraint
        ^argument <arg>)
-->
   (<arg> ^found-matches true)
}

# ENUMERATE: 1-8 OBJECT PREDICATES 

## object2 default match with 1 predicate
sp {task-utils*instantiate-task-operator*apply*instantiate-task-argument*relation-constraint*obj2*match*1*predicate
   (state <s> ^operator <o>
              ^world.objects.object <obj>)
   (<o> ^name instantiate-task-argument
        ^arg-type relation-constraint
        ^argument <arg>
        ^relation-handle <rel-h>
        ^object2.predicates <obj2-preds>)
   (<obj2-preds> ^<prop1> <pred1>)
   -{(<obj2-preds> ^<prop2> { <pred2> <> <pred1> })}
   (<obj> ^predicates <preds>)
   (<preds> ^<prop1> <pred1>)
-->
   (<arg> ^obj2-match <obj>)
}

## object2 default match with 2 predicate
sp {task-utils*instantiate-task-operator*apply*instantiate-task-argument*relation-constraint*obj2*match*2*predicate
   (state <s> ^operator <o>
              ^world.objects.object <obj>)
   (<o> ^name instantiate-task-argument
        ^arg-type relation-constraint
        ^argument <arg>
        ^relation-handle <rel-h>
        ^object2.predicates <obj2-preds>)
   (<obj2-preds> ^<prop1> <pred1>
                 ^<prop2> { <pred2> > <pred1> } )
   -{(<obj2-preds> ^<prop3> { <pred3> <> <pred2> <> <pred1> })}
   (<obj> ^predicates <preds>)
   (<preds> ^<prop1> <pred1>
            ^<prop2> <pred2>)
-->
   (<arg> ^obj2-match <obj>)
}

## object2 default match with 3 predicate
sp {task-utils*instantiate-task-operator*apply*instantiate-task-argument*relation-constraint*obj2*match*3*predicate
   (state <s> ^operator <o>
              ^world.objects.object <obj>)
   (<o> ^name instantiate-task-argument
        ^arg-type relation-constraint
        ^argument <arg>
        ^relation-handle <rel-h>
        ^object2.predicates <obj2-preds>)
   (<obj2-preds> ^<prop1> <pred1>
                 ^<prop2> { <pred2> > <pred1> }
                 ^<prop3> { <pred3> > <pred2> })
   -{(<obj2-preds> ^<prop4> { <pred4> <> <pred3> <> <pred2> <> <pred1> })}
   (<obj> ^predicates <preds>)
   (<preds> ^<prop1> <pred1>
            ^<prop2> <pred2>
            ^<prop3> <pred3>)
-->
   (<arg> ^obj2-match <obj>)
}

## object2 default match with 4 predicate
sp {task-utils*instantiate-task-operator*apply*instantiate-task-argument*relation-constraint*obj2*match*4*predicate
   (state <s> ^operator <o>
              ^world.objects.object <obj>)
   (<o> ^name instantiate-task-argument
        ^arg-type relation-constraint
        ^argument <arg>
        ^relation-handle <rel-h>
        ^object2.predicates <obj2-preds>)
   (<obj2-preds> ^<prop1> <pred1>
                 ^<prop2> { <pred2> > <pred1> }
                 ^<prop3> { <pred3> > <pred2> }
                 ^<prop4> { <pred4> > <pred3> })
   -{(<obj2-preds> ^<prop5> { <pred5> <> <pred4> <> <pred3> <> <pred2> <> <pred1> })}
   (<obj> ^predicates <preds>)
   (<preds> ^<prop1> <pred1>
            ^<prop2> <pred2>
            ^<prop3> <pred3>
            ^<prop4> <pred4>)
-->
   (<arg> ^obj2-match <obj>)
}

## object2 default match with 5 predicate
sp {task-utils*instantiate-task-operator*apply*instantiate-task-argument*relation-constraint*obj2*match*5*predicate
   (state <s> ^operator <o>
              ^world.objects.object <obj>)
   (<o> ^name instantiate-task-argument
        ^arg-type relation-constraint
        ^argument <arg>
        ^relation-handle <rel-h>
        ^object2.predicates <obj2-preds>)
   (<obj2-preds> ^<prop1> <pred1>
                 ^<prop2> { <pred2> > <pred1> }
                 ^<prop3> { <pred3> > <pred2> }
                 ^<prop4> { <pred4> > <pred3> }
                 ^<prop5> { <pred5> > <pred4> })
   -{(<obj2-preds> ^<prop6> { <pred6> <> <pred5> <> <pred4> <> <pred3> <> <pred2> <> <pred1> })}
   (<obj> ^predicates <preds>)
   (<preds> ^<prop1> <pred1>
            ^<prop2> <pred2>
            ^<prop3> <pred3>
            ^<prop4> <pred4>
            ^<prop5> <pred5>)
-->
   (<arg> ^obj2-match <obj>)
}

## object2 default match with 6 predicate
sp {task-utils*instantiate-task-operator*apply*instantiate-task-argument*relation-constraint*obj2*match*6*predicate
   (state <s> ^operator <o>
              ^world.objects.object <obj>)
   (<o> ^name instantiate-task-argument
        ^arg-type relation-constraint
        ^argument <arg>
        ^relation-handle <rel-h>
        ^object2.predicates <obj2-preds>)
   (<obj2-preds> ^<prop1> <pred1>
                 ^<prop2> { <pred2> > <pred1> }
                 ^<prop3> { <pred3> > <pred2> }
                 ^<prop4> { <pred4> > <pred3> }
                 ^<prop5> { <pred5> > <pred4> }
                 ^<prop6> { <pred6> > <pred5> })
   -{(<obj2-preds> ^<prop7> { <pred7> <> <pred6> <> <pred5> <> <pred4> <> <pred3> <> <pred2> <> <pred1> })}
   (<obj> ^predicates <preds>)
   (<preds> ^<prop1> <pred1>
            ^<prop2> <pred2>
            ^<prop3> <pred3>
            ^<prop4> <pred4>
            ^<prop5> <pred5>
            ^<prop6> <pred6>)
-->
   (<arg> ^obj2-match <obj>)
}

## object2 default match with 7 predicate
sp {task-utils*instantiate-task-operator*apply*instantiate-task-argument*relation-constraint*obj2*match*7*predicate
   (state <s> ^operator <o>
              ^world.objects.object <obj>)
   (<o> ^name instantiate-task-argument
        ^arg-type relation-constraint
        ^argument <arg>
        ^relation-handle <rel-h>
        ^object2.predicates <obj2-preds>)
   (<obj2-preds> ^<prop1> <pred1>
                 ^<prop2> { <pred2> > <pred1> }
                 ^<prop3> { <pred3> > <pred2> }
                 ^<prop4> { <pred4> > <pred3> }
                 ^<prop5> { <pred5> > <pred4> }
                 ^<prop6> { <pred6> > <pred5> }
                 ^<prop7> { <pred7> > <pred6> })
   -{(<obj2-preds> ^<prop8> { <pred8> <> <pred7> <> <pred6> <> <pred5> <> <pred4> <> <pred3> <> <pred2> <> <pred1> })}
   (<obj> ^predicates <preds>)
   (<preds> ^<prop1> <pred1>
            ^<prop2> <pred2>
            ^<prop3> <pred3>
            ^<prop4> <pred4>
            ^<prop5> <pred5>
            ^<prop6> <pred6>
            ^<prop7> <pred7>)
-->
   (<arg> ^obj2-match <obj>)
}

## object2 default match with 8 predicate
sp {task-utils*instantiate-task-operator*apply*instantiate-task-argument*relation-constraint*obj2*match*8*predicate
   (state <s> ^operator <o>
              ^world.objects.object <obj>)
   (<o> ^name instantiate-task-argument
        ^arg-type relation-constraint
        ^argument <arg>
        ^relation-handle <rel-h>
        ^object2.predicates <obj2-preds>)
   (<obj2-preds> ^<prop1> <pred1>
                 ^<prop2> { <pred2> > <pred1> }
                 ^<prop3> { <pred3> > <pred2> }
                 ^<prop4> { <pred4> > <pred3> }
                 ^<prop5> { <pred5> > <pred4> }
                 ^<prop6> { <pred6> > <pred5> }
                 ^<prop7> { <pred7> > <pred6> }
                 ^<prop8> { <pred8> > <pred7> })
   -{(<obj2-preds> ^<prop9> { <pred9> <> <pred8> <> <pred7> <> <pred6> <> <pred5> <> <pred4> <> <pred3> <> <pred2> <> <pred1> })}
   (<obj> ^predicates <preds>)
   (<preds> ^<prop1> <pred1>
            ^<prop2> <pred2>
            ^<prop3> <pred3>
            ^<prop4> <pred4>
            ^<prop5> <pred5>
            ^<prop6> <pred6>
            ^<prop7> <pred7>
            ^<prop8> <pred8>)
-->
   (<arg> ^obj2-match <obj>)
}
