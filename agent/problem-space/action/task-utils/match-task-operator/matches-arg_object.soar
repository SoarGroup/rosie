######## match object arguments #######

sp {learn-matches-task-op-elaboration-rule*elaborate*candidate*matches-arg*object
   (state <s> ^name learn-matches-task-op-elaboration-rule
              ^match-task-op-workspace <ws>)
   (<ws> ^task-info.<num> <narg>
         ^candidate <cand>)
   (<narg> ^type object 
           ^name <arg-name>
           ^arg.id <obj>) 
   (<cand> ^task-operator <task-op>)
   (<task-op> ^<arg-name> <carg>)
   (<carg> ^arg-type object
           ^id <obj>)
-->
   (<cand> ^matches-arg <arg-name>)
}

# ENUMERATE: OBJECT PREDICATES 1-5

sp {learn-matches-task-op-elaboration-rule*elaborate*candidate*matches-arg*object*1*preds
   (state <s> ^name learn-matches-task-op-elaboration-rule
              ^match-task-op-workspace <ws>)
   (<ws> ^task-info.<num> <narg>
         ^candidate <cand>)
   (<narg> ^type object
           ^name <arg-name>
           ^arg.id <nobj>)
   (<nobj> ^abstract true
           ^predicates <preds1>)
   (<cand> ^task-operator <task-op>)
   (<task-op> ^<arg-name> <carg>)
   (<carg> ^arg-type object
           ^id <cobj>)
   (<cobj> ^abstract true
           ^predicates <preds2>)
   (<preds1> ^<prop1> { <pred1>           }
            -^<prop2> { <pred2> <> <pred1> })
   (<preds2> ^<prop1> <pred1>)
-->
   (<cand> ^matches-arg <arg-name>)
}

sp {learn-matches-task-op-elaboration-rule*elaborate*candidate*matches-arg*object*2*preds
   (state <s> ^name learn-matches-task-op-elaboration-rule
              ^match-task-op-workspace <ws>)
   (<ws> ^task-info.<num> <narg>
         ^candidate <cand>)
   (<narg> ^type object
           ^name <arg-name>
           ^arg.id <nobj>)
   (<nobj> ^abstract true
           ^predicates <preds1>)
   (<cand> ^task-operator <task-op>)
   (<task-op> ^<arg-name> <carg>)
   (<carg> ^arg-type object
           ^id <cobj>)
   (<cobj> ^abstract true
           ^predicates <preds2>)
   (<preds1> ^<prop1> { <pred1>           }
             ^<prop2> { <pred2> > <pred1> }
            -^<prop3> { <pred3> <> <pred2> <> <pred1> })
   (<preds2> ^<prop1> <pred1> 
             ^<prop2> <pred2>)
-->
   (<cand> ^matches-arg <arg-name>)
}

sp {learn-matches-task-op-elaboration-rule*elaborate*candidate*matches-arg*object*3*preds
   (state <s> ^name learn-matches-task-op-elaboration-rule
              ^match-task-op-workspace <ws>)
   (<ws> ^task-info.<num> <narg>
         ^candidate <cand>)
   (<narg> ^type object
           ^name <arg-name>
           ^arg.id <nobj>)
   (<nobj> ^abstract true
           ^predicates <preds1>)
   (<cand> ^task-operator <task-op>)
   (<task-op> ^<arg-name> <carg>)
   (<carg> ^arg-type object
           ^id <cobj>)
   (<cobj> ^abstract true
           ^predicates <preds2>)
   (<preds1> ^<prop1> { <pred1>           }
             ^<prop2> { <pred2> > <pred1> }
             ^<prop3> { <pred3> > <pred2> }
            -^<prop4> { <pred4> <> <pred3> <> <pred2> <> <pred1> })
   (<preds2> ^<prop1> <pred1> 
             ^<prop2> <pred2>
             ^<prop3> <pred3>)
-->
   (<cand> ^matches-arg <arg-name>)
}

sp {learn-matches-task-op-elaboration-rule*elaborate*candidate*matches-arg*object*4*preds
   (state <s> ^name learn-matches-task-op-elaboration-rule
              ^match-task-op-workspace <ws>)
   (<ws> ^task-info.<num> <narg>
         ^candidate <cand>)
   (<narg> ^type object
           ^name <arg-name>
           ^arg.id <nobj>)
   (<nobj> ^abstract true
           ^predicates <preds1>)
   (<cand> ^task-operator <task-op>)
   (<task-op> ^<arg-name> <carg>)
   (<carg> ^arg-type object
           ^id <cobj>)
   (<cobj> ^abstract true
           ^predicates <preds2>)
   (<preds1> ^<prop1> { <pred1>           }
             ^<prop2> { <pred2> > <pred1> }
             ^<prop3> { <pred3> > <pred2> }
             ^<prop4> { <pred4> > <pred3> }
            -^<prop5> { <pred5> <> <pred4> <> <pred3> <> <pred2> <> <pred1> })
   (<preds2> ^<prop1> <pred1> 
             ^<prop2> <pred2>
             ^<prop3> <pred3>
             ^<prop4> <pred4>)
-->
   (<cand> ^matches-arg <arg-name>)
}

sp {learn-matches-task-op-elaboration-rule*elaborate*candidate*matches-arg*object*5*preds
   (state <s> ^name learn-matches-task-op-elaboration-rule
              ^match-task-op-workspace <ws>)
   (<ws> ^task-info.<num> <narg>
         ^candidate <cand>)
   (<narg> ^type object
           ^name <arg-name>
           ^arg.id <nobj>)
   (<nobj> ^abstract true
           ^predicates <preds1>)
   (<cand> ^task-operator <task-op>)
   (<task-op> ^<arg-name> <carg>)
   (<carg> ^arg-type object
           ^id <cobj>)
   (<cobj> ^abstract true
           ^predicates <preds2>)
   (<preds1> ^<prop1> { <pred1>           }
             ^<prop2> { <pred2> > <pred1> }
             ^<prop3> { <pred3> > <pred2> }
             ^<prop4> { <pred4> > <pred3> }
             ^<prop5> { <pred5> > <pred4> }
            -^<prop6> { <pred6> <> <pred5> <> <pred4> <> <pred3> <> <pred2> <> <pred1> })
   (<preds2> ^<prop1> <pred1> 
             ^<prop2> <pred2>
             ^<prop3> <pred3>
             ^<prop4> <pred4>
             ^<prop5> <pred5>)
-->
   (<cand> ^matches-arg <arg-name>)
}
