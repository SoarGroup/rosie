# ENUMERATE: 0-5 TASK ARGUMENTS
# If everything matches, elaborates ^successful-match yes on the candidate

sp {learn-matches-task-op-elaboration-rule*elaborate*candidate*successful-match*yes*0*args
   (state <s> ^name learn-matches-task-op-elaboration-rule
              ^match-task-op-workspace <ws>)
   (<ws> ^task-info <info>
         ^candidate <cand>)
   (<info> ^num-args 0)
   (<cand> ^matches-handle yes
           ^task-operator <task-op>)
   (<task-op> -^{ <an1> }.arg-type <t1>)
-->
   (<cand> ^successful-match yes)
}

sp {learn-matches-task-op-elaboration-rule*elaborate*candidate*successful-match*yes*1*args
   (state <s> ^name learn-matches-task-op-elaboration-rule
              ^match-task-op-workspace <ws>)
   (<ws> ^task-info <info>
         ^candidate <cand>)
   (<info> ^num-args 1
           ^{1}.name <an1>)
   (<cand> ^matches-handle yes
           ^matches-arg <an1>
           ^task-operator <task-op>)
   (<task-op> -^{ <an2> <> <an1> }.arg-type <t2>)
-->
   (<cand> ^successful-match yes)
}

sp {learn-matches-task-op-elaboration-rule*elaborate*candidate*successful-match*yes*2*args
   (state <s> ^name learn-matches-task-op-elaboration-rule
              ^match-task-op-workspace <ws>)
   (<ws> ^task-info <info>
         ^candidate <cand>)
   (<info> ^num-args 2
           ^{1}.name <an1>
           ^{2}.name <an2>)
   (<cand> ^matches-handle yes
           ^matches-arg <an1>
           ^matches-arg <an2>
           ^task-operator <task-op>)
   (<task-op> -^{ <an3> <> <an2> <> <an1> }.arg-type <t3>)
-->
   (<cand> ^successful-match yes)
}

sp {learn-matches-task-op-elaboration-rule*elaborate*candidate*successful-match*yes*3*args
   (state <s> ^name learn-matches-task-op-elaboration-rule
              ^match-task-op-workspace <ws>)
   (<ws> ^task-info <info>
         ^candidate <cand>)
   (<info> ^num-args 3
           ^{1}.name <an1>
           ^{2}.name <an2>
           ^{3}.name <an3>)
   (<cand> ^matches-handle yes
           ^matches-arg <an1>
           ^matches-arg <an2>
           ^matches-arg <an3>
           ^task-operator <task-op>)
   (<task-op> -^{ <an4> <> <an3> <> <an2> <> <an1> }.arg-type <t4>)
-->
   (<cand> ^successful-match yes)
}

sp {learn-matches-task-op-elaboration-rule*elaborate*candidate*successful-match*yes*4*args
   (state <s> ^name learn-matches-task-op-elaboration-rule
              ^match-task-op-workspace <ws>)
   (<ws> ^task-info <info>
         ^candidate <cand>)
   (<info> ^num-args 4
           ^{1}.name <an1>
           ^{2}.name <an2>
           ^{3}.name <an3>
           ^{4}.name <an4>)
   (<cand> ^matches-handle yes
           ^matches-arg <an1>
           ^matches-arg <an2>
           ^matches-arg <an3>
           ^matches-arg <an4>
           ^task-operator <task-op>)
   (<task-op> -^{ <an5> <> <an4> <> <an3> <> <an2> <> <an1> }.arg-type <t5>)
-->
   (<cand> ^successful-match yes)
}

sp {learn-matches-task-op-elaboration-rule*elaborate*candidate*successful-match*yes*5*args
   (state <s> ^name learn-matches-task-op-elaboration-rule
              ^match-task-op-workspace <ws>)
   (<ws> ^task-info <info>
         ^candidate <cand>)
   (<info> ^num-args 5
           ^{1}.name <an1>
           ^{2}.name <an2>
           ^{3}.name <an3>
           ^{4}.name <an4>
           ^{5}.name <an5>)
   (<cand> ^matches-handle yes
           ^matches-arg <an1>
           ^matches-arg <an2>
           ^matches-arg <an3>
           ^matches-arg <an4>
           ^matches-arg <an5>
           ^task-operator <task-op>)
   (<task-op> -^{ <an6> <> <an5> <> <an4> <> <an3> <> <an2> <> <an1> }.arg-type <t6>)
-->
   (<cand> ^successful-match yes)
}
