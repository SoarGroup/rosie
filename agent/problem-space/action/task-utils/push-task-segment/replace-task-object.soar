
sp {task-utils*push-task-segment*propose*replace-task-object
   (state <s> ^name push-task-segment
              ^merge-object-workspace <ws>)
   (<ws> ^source-obj <obj>
         ^world-obj { <wobj> <> <obj> }
        -^replaced <obj>)
-->
   (<s> ^operator <o> + =)
   (<o> ^name replace-task-object
        ^workspace <ws>
        ^old-object <obj>
        ^new-object <wobj>)
}

sp {task-utils*push-task-segment*apply*replace-task-object*mark*replaced
   (state <s> ^name push-task-segment
              ^operator <o>)
   (<o> ^name replace-task-object
        ^workspace <ws>
        ^old-object <obj>)
-->
   (<ws> ^replaced <obj>)
}

sp {task-utils*push-task-segment*apply*replace-task-object*object
   (state <s> ^name push-task-segment
              ^operator <o>
              ^task-operator <task-op>)
   (<o> ^name replace-task-object
        ^old-object <obj>
        ^new-object <wobj>)
   (<task-op> ^<arg-name> <arg>)
   (<arg> ^arg-type object
          ^id <obj>)
-->
   (<arg> ^id <obj> -
          ^id <wobj>)
}

sp {task-utils*push-task-segment*apply*replace-task-object*predicate
   (state <s> ^name push-task-segment
              ^operator <o>
              ^task-operator <task-op>)
   (<o> ^name replace-task-object
        ^old-object <obj>
        ^new-object <wobj>)
   (<task-op> ^<arg-name> <arg>)
   (<arg> ^arg-type partial-predicate
          ^2 <obj>)
-->
   (<arg> ^2 <obj> -
          ^2 <wobj>)
}

sp {task-utils*push-task-segment*apply*replace-task-object*clause
   (state <s> ^name push-task-segment
              ^operator <o>
              ^task-operator <task-op>)
   (<o> ^name replace-task-object
        ^old-object <obj>
        ^new-object <wobj>)
   (<task-op> ^<arg-name> <arg>)
   (<arg> ^arg-type temporal-clause
          ^<pnum> <pred>)
   (<pred> ^{ <num> << 1 2 3 4 5 >> } <obj>)
-->
   (<pred> ^<num> <obj> -
           ^<num> <wobj>)
}

