############################### handle-type-execute ################################
#
# When the instructor tells the agent to perform a task, 
#   it pushes a new interaction segment with a purpose of executing a task 
# This will trigger satisfy-purpose/task-event/handle-type-execute
#
# In this state, the agent prepares a new task segement for the task-stack
#    and constructs a task-operator to go onto it


# <s> ^interaction-purpose <p>  # from superoperator - the execute-task purpose info
# <s> ^command-message <msg>    # from interaction-purpose.parameters - the command to execute
# <s> ^conditions <conds>       # from interaction-purpose.parameters, optional
source elaborations.soar
source preferences.soar


# Step 1: Retrieve the task-concept-network and copy onto the state
#   adds: <s> ^task-concept-network <tcn>
source retrieve-tcn.soar


# Step 2: Construct the new task-operator using the command-message 
#         (see problem-space/action/task-utils/construct)
#   adds: <s> ^task-operator <task-op>
source construct-task-operator.soar


# Step 3: If the task-operator is missing an argument which is on the TCN, 
#         flag it as missing on the task operator 
#   adds: <s> ^task-operator.missing-argument <arg-name>
source mark-argument-missing.soar


# Step 4: When everything is finished: 
#         Copy the task-operator onto top-state.task-stack.push-task-operator
#         Copy the task-operator onto top-state.interaction.stack.segment.purpose.parameters.task-operator
#         (Will retract satisfy-purpose and propose execute-task onto the top-state)
source complete-handle-new-task-command.soar
