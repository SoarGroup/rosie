
# If there is no current goal, ask the instructor for one
sp {task-state-no-change*propose*initiate-interaction*get-next-goal
   (state <s> ^name task-state-no-change
              ^desired.satisfied true
              ^task-operator <task-op>)
-->
   (<s> ^operator <o> + =)
   (<o> ^name initiate-interaction
        ^type get-next-goal
        ^task-operator <task-op>)
}

# If we are currently learning a composite goal, ask the instructor for the next subtask for that goal
sp {task-state-no-change*propose*initiate-interaction*get-next-subaction*learning-composite-goal
   (state <s> ^name task-state-no-change
              ^desired.handle <node-h>
              ^superstate.current-task-segment.learning-composite-goal <node-h>
              ^task-operator.task-handle <task-h>)
-->
   (<s> ^operator <o> + =)
   (<o> ^name initiate-interaction
        ^type get-next-subaction
        ^task-handle <task-h>)
}

## If there are next goals but none of their conditions are met, ask for an alternative
#sp {task-state-no-change*elaborate*unmet-goal-conditions*true
#   (state <s> ^name task-state-no-change
#              ^unmet-conditions <any>)
#-->
#   (<s> ^unmet-goal-conditions true)
#}
#sp {task-state-no-change*propose*initiate-interaction*get-goal-alternative
#   (state <s> ^name task-state-no-change
#              ^unmet-goal-conditions true
#              ^desired.satisfied true
#              ^task-operator <task-op>)
#-->
#   (<s> ^operator <o> + =)
#   (<o> ^name initiate-interaction
#        ^type get-goal-alternative
#        ^task-operator <task-op>)
#}

sp {task-state-no-change*apply*initiate-interaction*get-next-goal*mark*learning*needed
   (state <s> ^name task-state-no-change
              ^operator <o>
              ^quiescence t
              ^superstate.current-task-segment <seg>)
   (<o> ^name initiate-interaction
        ^type << get-next-goal get-goal-alternative >>)
-->
   (<seg> ^policy-learning-needed true)
}
