sp {problem-space*action*evaluate-operator*elaborate*task-operator*manual-operator-application
   (state <s> ^name evaluate-operator
              ^problem-space.name action
              ^look-ahead-operator <o>
              ^operator <o> +)
   (<o> -^known-action-model true)
-->
   (<o> ^manual-operator-application true)
}

#sp {problem-space*action*Operator-Tie*evaluate-operator*apply*task-operator*known-action-model*remove*untied-tried-operator
#   (state <s> ^problem-space.name action
#              ^look-ahead-operator <o>
#              ^untried-tied-operator <o>
#              ^operator <o>)
#   (<o> ^known-action-model true)
#-->
#   (<s> ^untried-tied-operator <o> -)
#}
#
#sp {problem-space*action*Operator-Tie*evaluate-operator*apply*task-operator*known-action-model*add*tried-tried-operator
#   (state <s> ^problem-space.name action
#              ^look-ahead-operator <o>
#              ^operator <o>)
#   (<o> ^known-action-model true)
#-->
#   (<s> ^tried-tied-operator <o>)
#}
#
#sp {problem-space*action*Operator-Tie*evalaute-operator*apply*task-operator*decrement*current-evaluatino-depth
#   (state <s> ^problem-space.name action
#              ^look-ahead-operator <o>
#              ^operator <o>
#              ^current-evaluation-depth <ced>)
#   (<o> ^known-action-model true)
#-->
#   (<s> ^current-evaluation-depth (- <ced> 1)
#                                  <ced> -)}
#

