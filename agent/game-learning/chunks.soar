#sp {chunk*chunk-predicate-impasse*apply*complete*OpNoChange*t6829-1
#    (state <s1> ^gtype <g1> ^<g1> <g2>)
#    (<g2> ^condition <c1>)
#    (<c1> ^name placed29 ^type concept ^attribute predicate)
#    -->
#    (<s1> ^predicate <p1> + ^gtype predicate +)
#    (<p1> ^link <c1> + ^potential-args <p2> + ^parameter-set <p3> +
#           ^formated predicate + ^secondary-rtype single +
#           ^primary-rtype single + ^nlp-set <n1> + ^aname placed29 +
#           ^handle placed29 +)
#    (<p3> ^argnum 3 +)
#    (<n1> ^conditions <c2> + ^conditions <i5> + ^conditions <c3> +
#           ^aname placed29 +)
#    (<c2> ^return-type number + ^parameter <p4> + ^rtype single +
#           ^negative false + ^args <a1> + ^result <r2> + ^name color +
#           ^type attribute-of +)
#    (<p4> ^num 2 + ^2 <i1> + ^1 <i2> +)
#    (<i1> ^param-id 1 + ^type single +)
#    (<i2> ^param-id 3 + ^type single +)
#    (<a1> ^num 1 + ^2 <i3> +)
#    (<i3> ^parameter <p5> + ^rtype single + ^negative false + ^args <a2> +
#           ^result <r1> + ^attribute 2 + ^name argument +)
#    (<p5> ^num 1 + ^1 <i4> +)
#    (<i4> ^param-id 1 + ^type single +)
#    (<a2> ^num 1 + ^1 <i5> +)
#    (<r1> ^set <s2> +)
#    (<r2> ^set <s3> +)
#    (<i5> ^parameter <p6> + ^rtype single + ^negative false + ^args <a3> +
#           ^result <r6> + ^attribute prepositions + ^name below1 +
#           ^type state-pair +)
#    (<p6> ^num 2 + ^2 <i6> + ^1 <i7> +)
#    (<i6> ^param-id 1 + ^type single +)
#    (<i7> ^param-id 2 + ^type single +)
#    (<a3> ^num 2 + ^2 <i8> + ^1 <i10> +)
#    (<i8> ^input 1 + ^parameter <p7> + ^rtype single + ^negative false +
#           ^args <a4> + ^result <r3> + ^attribute input-arg + ^name object +)
#    (<p7> ^num 1 + ^1 <i9> +)
#    (<i9> ^param-id 1 + ^type single +)
#    (<r3> ^set <s4> +)
#    (<i10> ^parameter <p8> + ^rtype single + ^negative false + ^args <a5> +
#           ^result <r5> + ^attribute category + ^name location +
#           ^type attribute +)
#    (<p8> ^num 0 +)
#    (<a5> ^num 1 + ^1 <i11> +)
#    (<i11> ^parameter <p9> + ^rtype single + ^negative false + ^args <a6> +
#           ^result <r4> + ^attribute primitive + ^name object +
#           ^type attribute +)
#    (<p9> ^num 0 +)
#    (<r4> ^set <s5> +)
#    (<r5> ^set <s6> +)
#    (<r6> ^set <s7> +)
#    (<c3> ^return-type number + ^parameter <p10> + ^rtype single +
#           ^negative false + ^args <a7> + ^result <r7> + ^name color +
#           ^type attribute-of +)
#    (<p10> ^num 2 + ^2 <i12> + ^1 <i13> +)
#    (<i12> ^param-id 2 + ^type single +)
#    (<i13> ^param-id 3 + ^type single +)
#    (<a7> ^num 1 + ^2 <i5> +)
##    (<r7> ^set <s8> +)
##}
#
##sp {chunk*chunk-predicate-impasse*apply*complete*OpNoChange*t3354d-1
##    (state <s1> ^gtype <g1> ^<g1> <g2>)
##    (<g2> ^condition <c1>)
##    (<c1> ^name frog3 ^type concept ^attribute predicate)
##    -->
##    (<s1> ^predicate <p1> + ^gtype predicate +)
##    (<p1> ^link <c1> + ^potential-args <p2> + ^parameter-set <p3> +
##           ^formated predicate + ^primary-rtype single + ^nlp-set <n1> +
##           ^aname frog3 + ^handle frog3 +)
##    (<p3> ^argnum 1 +)
##    (<n1> ^conditions <c2> + ^aname frog3 +)
##    (<c2> ^negative false + ^parameter <p4> + ^rtype single + ^args <a1> +
##           ^result <r3> + ^attribute category + ^name block +
##           ^type attribute +)
##    (<p4> ^num 1 + ^1 <i1> +)
##    (<i1> ^param-id 1 + ^type single +)
##    (<a1> ^num 1 + ^1 <i2> +)
##    (<i2> ^negative false + ^parameter <p5> + ^rtype single + ^args <a2> +
##           ^result <r2> + ^attribute color + ^name green1 + ^type attribute +)
##    (<p5> ^num 1 + ^1 <i3> +)
##    (<i3> ^param-id 1 + ^type single +)
##    (<a2> ^num 1 + ^1 <i4> +)
##    (<i4> ^input 1 + ^negative false + ^parameter <p6> + ^rtype single +
##           ^args <a3> + ^result <r1> + ^attribute input-arg + ^name object +)
##    (<p6> ^num 0 +)
##    (<r1> ^set <s2> +)
##    (<r2> ^set <s3> +)
##    (<r3> ^set <s4> +)
##}
#
#
##sp {chunk*chunk-predicate-impasse*apply*complete*OpNoChange*t1699d-1
#    (state <s1> ^gtype <g1> ^<g1> <g2>)
#    (<g2> ^condition <c1>)
#    (<c1> ^name toad5 ^type concept ^attribute predicate)
#    -->
#    (<s1> ^predicate <p1> + ^gtype predicate +)
#    (<p1> ^link <c1> + ^potential-args <p2> + ^parameter-set <p3> +
#           ^formated predicate + ^primary-rtype single + ^nlp-set <n1> +
#           ^aname toad5 + ^handle toad5 +)
#    (<p3> ^argnum 1 +)
#    (<n1> ^conditions <c2> + ^aname toad5 +)
#    (<c2> ^negative false + ^parameter <p4> + ^rtype single + ^args <a1> +
#           ^result <r3> + ^attribute color + ^name blue1 + ^type attribute +)
#    (<p4> ^num 1 + ^1 <i1> +)
#    (<i1> ^param-id 1 + ^type single +)
#    (<a1> ^num 1 + ^1 <i2> +)
#    (<i2> ^negative false + ^parameter <p5> + ^rtype single + ^args <a2> +
#           ^result <r2> + ^attribute category + ^name block +
#           ^type attribute +)
#    (<p5> ^num 1 + ^1 <i3> +)
#    (<i3> ^param-id 1 + ^type single +)
#    (<a2> ^num 1 + ^1 <i4> +)
#    (<i4> ^input 1 + ^negative false + ^parameter <p6> + ^rtype single +
#           ^args <a3> + ^result <r1> + ^attribute input-arg + ^name object +)
#    (<p6> ^num 0 +)
#    (<r1> ^set <s2> +)
#    (<r2> ^set <s3> +)
#    (<r3> ^set <s4> +)
#}
#sp {chunk*chunk-predicate-impasse*apply*complete*OpNoChange*t3354f-1
#    (state <s1> ^gtype <g1> ^<g1> <g2>)
#    (<g2> ^condition <c1>)
#    (<c1> ^name toad6 ^type concept ^attribute predicate)
#    -->
#    (<s1> ^predicate <p1> + ^gtype predicate +)
#    (<p1> ^link <c1> + ^potential-args <p2> + ^parameter-set <p3> +
#           ^formated predicate + ^primary-rtype single + ^nlp-set <n1> +
#           ^aname toad6 + ^handle toad6 +)
#    (<p3> ^argnum 1 +)
#    (<n1> ^conditions <c2> + ^aname toad6 +)
#    (<c2> ^negative false + ^parameter <p4> + ^rtype single + ^args <a1> +
#           ^result <r3> + ^attribute category + ^name block +
#           ^type attribute +)
#    (<p4> ^num 1 + ^1 <i1> +)
#    (<i1> ^param-id 1 + ^type single +)
#    (<a1> ^num 1 + ^1 <i2> +)
#    (<i2> ^negative false + ^parameter <p5> + ^rtype single + ^args <a2> +
#           ^result <r2> + ^attribute color + ^name red1 + ^type attribute +)
#    (<p5> ^num 1 + ^1 <i3> +)
#    (<i3> ^param-id 1 + ^type single +)
#    (<a2> ^num 1 + ^1 <i4> +)
#    (<i4> ^input 1 + ^negative false + ^parameter <p6> + ^rtype single +
#           ^args <a3> + ^result <r1> + ^attribute input-arg + ^name object +)
#    (<p6> ^num 0 +)
#    (<r1> ^set <s2> +)
#    (<r2> ^set <s3> +)
#    (<r3> ^set <s4> +)
#}
#
##
##sp {chunk*chunk-predicate-impasse*apply*complete*OpNoChange*t1699f-1
##    (state <s1> ^gtype <g1> ^<g1> <g2>)
##    (<g2> ^condition <c1>)
##    (<c1> ^name frog4 ^type concept ^attribute predicate)
##    -->
##    (<s1> ^predicate <p1> + ^gtype predicate +)
##    (<p1> ^link <c1> + ^potential-args <p2> + ^parameter-set <p3> +
##           ^formated predicate + ^primary-rtype single + ^nlp-set <n1> +
##           ^aname frog4 + ^handle frog4 +)
##    (<p3> ^argnum 1 +)
##    (<n1> ^conditions <c2> + ^aname frog4 +)
##    (<c2> ^negative false + ^parameter <p4> + ^rtype single + ^args <a1> +
##           ^result <r3> + ^attribute color + ^name brown1 + ^type attribute +)
##    (<p4> ^num 1 + ^1 <i1> +)
##    (<i1> ^param-id 1 + ^type single +)
##    (<a1> ^num 1 + ^1 <i2> +)
##    (<i2> ^negative false + ^parameter <p5> + ^rtype single + ^args <a2> +
##           ^result <r2> + ^attribute category + ^name block +
##           ^type attribute +)
##    (<p5> ^num 1 + ^1 <i3> +)
##    (<i3> ^param-id 1 + ^type single +)
##    (<a2> ^num 1 + ^1 <i4> +)
##    (<i4> ^input 1 + ^negative false + ^parameter <p6> + ^rtype single +
##           ^args <a3> + ^result <r1> + ^attribute input-arg + ^name object +)
##    (<p6> ^num 0 +)
##    (<r1> ^set <s2> +)
##    (<r2> ^set <s3> +)
##    (<r3> ^set <s4> +)
##}
##### temp chunk for transfer test
##sp {chunk*chunk-predicate-impasse*apply*complete*OpNoChange*t1504-1z
##    (state <s1> ^gtype <g1> ^<g1> <g2>)
##    (<g2> ^condition <c1>)
##    (<c1> ^name clear9 ^type concept ^attribute predicate)
##    -->
##    (<s1> ^predicate <p1> + ^gtype predicate +)
##    (<p1> ^link <c1> + ^potential-args <p2> + ^parameter-set <p3> +
##           ^formated predicate + ^primary-rtype single + ^nlp-set <n1> +
##           ^aname clear9 + ^handle clear9 +)
##    (<p3> ^argnum 1 +)
##    (<n1> ^conditions <c2> + ^aname clear9 +)
##    (<c2> ^negative true + ^parameter <p4> + ^rtype single + ^args <a1> +
##           ^result <r3> + ^attribute prepositions + ^name below1 +
##           ^type state-pair +)
##    (<p4> ^num 1 + ^1 <i1> +)
##    (<i1> ^param-id 1 + ^type single +)
##    (<a1> ^num 2 + ^2 <i2> + ^1 <i3> +)
##    (<i2> ^negative false + ^parameter <p5> + ^rtype single + ^args <a2> +
##           ^result <r1> + ^attribute primitive + ^name object +
##           ^type attribute +)
##    (<p5> ^num 0 +)
##    (<r1> ^set <s2> +)
##    (<i3> ^input 1 + ^negative false + ^parameter <p6> + ^rtype single +
##           ^args <a3> + ^result <r2> + ^attribute input-arg + ^name object +)
##    (<p6> ^num 0 +)
##    (<r2> ^set <s3> +)
##    (<r3> ^set <s4> +)
##}
##sp {chunk*chunk-predicate-impasse*apply*complete*OpNoChange*t1992-1z
##    (state <s1> ^gtype <g1> ^<g1> <g2>)
##    (<g2> ^condition <c1>)
##    (<c1> ^name clear8 ^type concept ^attribute predicate)
##    -->
##    (<s1> ^predicate <p1> + ^gtype predicate +)
##    (<p1> ^link <c1> + ^potential-args <p2> + ^parameter-set <p3> +
##           ^formated predicate + ^primary-rtype single + ^nlp-set <n1> +
##           ^aname clear8 + ^handle clear8 +)
##    (<p3> ^argnum 1 +)
##    (<n1> ^conditions <c2> + ^aname clear8 +)
##    (<c2> ^negative true + ^parameter <p4> + ^rtype single + ^args <a1> +
##           ^result <r2> + ^name value + ^type has-attribute +)
##    (<p4> ^num 1 + ^1 <i1> +)
##    (<i1> ^param-id 1 + ^type single +)
##    (<a1> ^num 1 + ^1 <i2> +)
##    (<i2> ^input 1 + ^attribute input-arg + ^negative false +
##           ^parameter <p5> + ^rtype single + ^args <a2> + ^result <r1> +
##           ^name object +)
##    (<p5> ^num 0 +)
##    (<r1> ^set <s2> +)
##    (<r2> ^set <s3> +)
##}
##sp {chunk*chunk-predicate-impasse*apply*complete*OpNoChange*t3206-1z
##    (state <s1> ^gtype <g1> ^<g1> <g2>)
##    (<g2> ^condition <c1>)
##    (<c1> ^name captured5 ^type concept ^attribute predicate)
##    -->
##    (<s1> ^predicate <p1> + ^gtype predicate +)
##    (<p1> ^link <c1> + ^potential-args <p2> + ^parameter-set <p3> +
##           ^formated predicate + ^primary-rtype single + ^nlp-set <n1> +
##           ^aname captured5 + ^handle captured5 +)
##    (<p3> ^argnum 1 +)
##    (<n1> ^conditions <c2> + ^aname captured5 +)
##    (<c2> ^negative false + ^parameter <p4> + ^rtype single + ^args <a1> +
##           ^result <r5> + ^attribute prepositions + ^name below1 +
##           ^type state-pair +)
##    (<p4> ^num 1 + ^1 <i1> +)
##    (<i1> ^param-id 1 + ^type single +)
##    (<a1> ^num 2 + ^2 <i2> + ^1 <i5> +)
##    (<i2> ^negative false + ^parameter <p5> + ^rtype single + ^args <a2> +
##           ^result <r3> + ^attribute color + ^name red1 + ^type attribute +)
##    (<p5> ^num 0 +)
##    (<a2> ^num 1 + ^1 <i3> +)
##    (<i3> ^negative false + ^parameter <p6> + ^rtype single + ^args <a3> +
##           ^result <r2> + ^attribute category + ^name block +
##           ^type attribute +)
##    (<p6> ^num 0 +)
##    (<a3> ^num 1 + ^1 <i4> +)
##    (<i4> ^negative false + ^parameter <p7> + ^rtype single + ^args <a4> +
##           ^result <r1> + ^attribute primitive + ^name object +
##           ^type attribute +)
##    (<p7> ^num 0 +)
##    (<r1> ^set <s2> +)
##    (<r2> ^set <s3> +)
##    (<r3> ^set <s4> +)
##    (<i5> ^input 1 + ^negative false + ^parameter <p8> + ^rtype single +
##           ^args <a5> + ^result <r4> + ^attribute input-arg + ^name object +)
##    (<p8> ^num 0 +)
##    (<r4> ^set <s5> +)
##    (<r5> ^set <s6> +)
##}
##sp {chunk*chunk-predicate-impasse*apply*complete*OpNoChange*t5111-1z
##    (state <s1> ^gtype <g1> ^<g1> <g2>)
##    (<g2> ^condition <c1>)
##    (<c1> ^name captured6 ^type concept ^attribute predicate)
##    -->
##    (<s1> ^predicate <p1> + ^gtype predicate +)
##    (<p1> ^link <c1> + ^potential-args <p2> + ^parameter-set <p3> +
##           ^formated predicate + ^primary-rtype single + ^nlp-set <n1> +
##           ^aname captured6 + ^handle captured6 +)
##    (<p3> ^argnum 1 +)
##    (<n1> ^conditions <c2> + ^aname captured6 +)
##    (<c2> ^negative false + ^parameter <p4> + ^rtype single + ^args <a1> +
##           ^result <r5> + ^attribute prepositions + ^name below1 +
##           ^type state-pair +)
##    (<p4> ^num 1 + ^1 <i1> +)
##    (<i1> ^param-id 1 + ^type single +)
##    (<a1> ^num 2 + ^2 <i2> + ^1 <i5> +)
##    (<i2> ^negative false + ^parameter <p5> + ^rtype single + ^args <a2> +
##           ^result <r3> + ^attribute color + ^name blue1 + ^type attribute +)
##    (<p5> ^num 0 +)
##    (<a2> ^num 1 + ^1 <i3> +)
##    (<i3> ^negative false + ^parameter <p6> + ^rtype single + ^args <a3> +
##           ^result <r2> + ^attribute category + ^name block +
##           ^type attribute +)
##    (<p6> ^num 0 +)
##    (<a3> ^num 1 + ^1 <i4> +)
##    (<i4> ^negative false + ^parameter <p7> + ^rtype single + ^args <a4> +
##           ^result <r1> + ^attribute primitive + ^name object +
##           ^type attribute +)
##    (<p7> ^num 0 +)
##    (<r1> ^set <s2> +)
##    (<r2> ^set <s3> +)
##    (<r3> ^set <s4> +)
##    (<i5> ^input 1 + ^negative false + ^parameter <p8> + ^rtype single +
##           ^args <a5> + ^result <r4> + ^attribute input-arg + ^name object +)
##    (<p8> ^num 0 +)
##    (<r4> ^set <s5> +)
##    (<r5> ^set <s6> +)
##}
##doesn't fix...


#sp {zchunkx4*subset-of*elaborate*object*instance*OpNoChange*t2812-1
#    (state <s1> ^list <l1>
#          ^{ <a1> << action goal predicate failure heuristic >> } <a2>)
#    (<l1> ^game <g1>)
#    (<a2> ^condition <c1>)
#    (<c1> ^function subset-of ^rtype set ^name 3 ^type function ^args <a3>
#          ^negative <n1> ^parameter <p1> ^result <r1>)
#    (<a3> ^num 1 ^2 <i1>)
#    (<r1> ^set <s2>)
#    (<i1> ^result <r2>)
#    (<r2> ^set <s3>)
#    (<s3> ^instance <i2>)
#    (<i2> ^1 <i3>)
#   -{ (<s3> ^instance { <i4> < <i2> })
#      (<i4> ^1 <i3>)}
#    (<i3> ^<a4> <a5> ^<a6> { <a7> > <a5> } ^<a8> { <a9> > <a7> })
#    -->
#    (<s2> ^instance <i5> +)
#    (<i5> ^2 <i3> + ^1 <i6> +)
#    (<i6> ^object <a9> + ^object <a7> + ^object <a5> +)
#}
## hmm?
#sp {zchunkx4*subset-of*elaborate*object*instance*OpNoChange*t2812-122
#    (state <s1> ^list <l1>
#          ^{ <a1> << action goal predicate failure heuristic >> } <a2>)
#    (<l1> ^game <g1>)
#    (<a2> ^condition <c1>)
#    (<c1> ^function subset-of ^rtype set ^name 2 ^type function ^args <a3>
#          ^negative <n1> ^parameter <p1> ^result <r1>)
#    (<a3> ^num 1 ^2 <i1>)
#    (<r1> ^set <s2>)
#    (<i1> ^result <r2>)
#    (<r2> ^set <s3>)
#    (<s3> ^instance <i2>)
#    (<i2> ^1 <i3>)
#   -{ (<s3> ^instance { <i4> < <i2> })
#      (<i4> ^1 <i3>)}
#    (<i3> ^<a4> <a5> ^<a6> { <a7> > <a5> })
#-->
#    (<s2> ^instance <i5> +)
#    (<i5> ^2 <i3> + ^1 <i6> +)
#    (<i6> ^object <a7> + ^object <a5> +)
#}

#storing chunks because delay while learning causes issues when learning this and count in a certain way,
#makes initially bad count
sp {chunkx4*with-attribute*apply*complete*instance*objects*OpNoChange*t10663-2
    (state <s1> ^list <l1>
          ^{ <a1> << action goal predicate failure heuristic >> } <a2>)
    (<l1> ^game <g1>)
    (<a2> ^condition <c1>)
    (<c1> ^rtype set ^type attribute ^negative false ^parameter <p1> ^args <a3>
          ^result <r2> ^attribute <i5> ^name <i6>)
    (<a3> ^1 <i1>)
    (<i1> -^rtype set ^result <r1>)
    (<r1> ^set <s2>)
    (<s2> ^instance <i2>)
    (<i2> ^1 <i3>)
    (<i3> ^predicates <p2>)
    (<r2> ^set <s3>)
    (<s3> ^instance <i4>)
    (<i4> ^3 <i5> ^2 <i6> ^1 <i7>)
    (<p2> ^<i5> <i6>)
    -->
    (<i7> ^object <i3> +)
}
sp {chunkx4*with-attribute*apply*complete*instance*OpNoChange*t10663-1
    (state <s1> ^list <l1>
          ^{ <a1> << action goal predicate failure heuristic >> } <a2>)
    (<l1> ^game <g1>)
    (<a2> ^condition <c1>)
    (<c1> ^rtype set ^type attribute ^negative false ^parameter <p1> ^args <a3>
          ^result <r1> ^name <n2> ^attribute <a4>)
    (<a3> ^1 <i1>)
    (<i1> -^rtype set)
    (<r1> ^set <s2>)
    -->
    (<s2> ^instance <i2> +)
    (<i2> ^2 <n2> + ^3 <a4> + ^1 <i3> +)
}
sp {chunkx4*top-pair*with-type*1param*set*noarg-set1*apply*OpNoChange*t57252-2
    (state <s1> ^list <l1>
          ^{ <a1> << action goal predicate failure heuristic >> } <a2>)
    (<l1> ^game <g1>)
    (<a2> ^condition <c1>)
    (<c1> ^negative false ^rtype set ^name <h1> ^type state-pair
          ^parameter <p3> ^args <a3> ^result <r2> ^attribute <a4>)
    (<p3> ^num 2)
    (<a3> ^num 2 ^2 <i4> ^1 <i5> ^2 <i6> ^1 <i7>)
    (<i4> -^rtype set ^result <r4>)
    (<i5> -^rtype set ^result <r3>)
    (<i6> ^result <r1>)
    (<r1> ^set <s2>)
    (<s2> ^instance <i8>)
    (<i8> ^1 <i9>)
   -{ (<s2> ^instance { <i10> > <i8> })
      (<i10> ^1 <i9>)}
    (<r2> ^set <s3>)
    (<s3> ^instance <i11>)
    (<i11> ^2 <i2> ^1 <i12>)
    (<r3> ^set <s4>)
    (<s4> ^instance <i13>)
    (<i13> ^1 <i3>)
    (<r4> ^set <s5>)
    (<s5> ^instance <i14>)
    (<i14> ^1 <i2>)
    (<s1> ^world <w1>)
    (<w1> ^predicates <p1>)
    (<p1> ^predicate <p2>)
    (<p2> ^instance <i1> ^handle <h1>)
    (<i1> ^2 <i2> ^1 <i3>)
    -->
    (<i12> ^object <i3> +)
}
sp {chunkx4*top-pair*apply*complete*OpNoChange*t57252-1
    (state <s1> ^list <l1>
          ^{ <a1> << action goal predicate failure heuristic >> } <a2>)
    (<l1> ^game <g1>)
    (<a2> ^condition <c1>)
    (<c1> ^negative false ^rtype set ^type state-pair ^parameter <p1>
          ^args <a3> ^result <r1> ^name <n1> ^attribute <a4>)
    (<p1> ^num 2)
    (<a3> ^num 2 ^2 <i1> ^1 <i2>)
    (<i1> -^rtype set ^result <r2>)
    (<i2> -^rtype set)
    (<r1> ^set <s2>)
    (<r2> ^set <s3>)
    (<s3> ^instance <i3>)
    (<i3> ^1 <i4>)
   -{ (<s3> ^instance { <i5> > <i3> })
      (<i5> ^1 <i4>)}
    -->
    (<s2> ^instance <i6> +)
    (<i6> ^2 <i4> + ^1 <i7> +)
}

sp {chunkx4*soar-count*apply*complete*OpNoChange*t3021-1
    (state <s1> ^list <l1>
          ^{ <a1> << action goal predicate failure heuristic >> } <a2>)
    (<l1> ^game <g1>)
    (<a2> ^condition <c1>)
    (<c1> ^function soar-count ^type function ^parameter <p1> ^args <a3>
          ^negative <n1> ^result <r1> ^name <n2>)
    (<p1> ^num 2)
    (<a3> ^num 1 ^2 <i1>)
    (<i1> ^rtype set ^result <r2>)
    (<r1> ^set <s2>)
    (<r2> ^set <s3>)
    (<s3> ^instance <i2>)
    (<i2> ^1 <i3>)
   -{ (<i3> -^<a4> <a5>)
      (<s1> ^<a6> <a7>)}
    -->
    (<s2> ^instance <i4> +)
    (<i4> ^1 (size <i3>) + ^2 <i3> +)
}
sp {chunkx4*board-between*elaborate*object*instance*inclusive*OpNoChange*t3015-1
    (state <s1> ^list <l1>
          ^{ <a1> << action goal predicate failure heuristic >> } <a2>)
    (<l1> ^game <g1>)
    (<a2> ^condition <c1>)
    (<c1> ^function board-between ^rtype set ^name between-inclusive
          ^type function ^args <a3> ^negative <n1> ^parameter <p1>
          ^result <r1>)
    (<a3> ^num 3 ^3 <i1> ^2 <i2> ^1 <i3>)
    (<r1> ^set <s2>)
    (<i2> ^result <r2>)
    (<r2> ^set <s3>)
    (<s3> ^instance <i4>)
    (<i4> ^1 <i5>)
   -{ (<s3> ^instance { <i6> < <i4> })
      (<i6> ^1 <i5>)}
    (<i1> ^result <r3>)
    (<r3> ^set <s4>)
    (<s4> ^instance <i7>)
    (<i7> ^1 { <i8> <> <i5> })
   -{ (<s4> ^instance { <i9> < <i7> })
      (<i9> ^1 <i8>)}
    -->
    (<s2> ^instance <i10> +)
    (<i10> ^1 <i11> + ^3 <i8> + ^2 <i5> +)
}
sp {chunkx4*board-between*elaborate*object*instance*OpNoChange*t3035-1
    (state <s1> ^list <l1>
          ^{ <a1> << action goal predicate failure heuristic >> } <a2>)
    (<l1> ^game <g1>)
    (<a2> ^condition <c1>)
    (<c1> ^function board-between ^rtype set ^name between-exclusive
          ^type function ^args <a3> ^negative <n1> ^parameter <p1>
          ^result <r1>)
    (<a3> ^num 3 ^3 <i1> ^2 <i2> ^1 <i3>)
    (<r1> ^set <s2>)
    (<i2> ^result <r2>)
    (<r2> ^set <s3>)
    (<s3> ^instance <i4>)
    (<i4> ^1 <i5>)
   -{ (<s3> ^instance { <i6> < <i4> })
      (<i6> ^1 <i5>)}
    (<i1> ^result <r3>)
    (<r3> ^set <s4>)
    (<s4> ^instance <i7>)
    (<i7> ^1 { <i8> <> <i5> })
   -{ (<s4> ^instance { <i9> < <i7> })
      (<i9> ^1 <i8>)}
    -->
    (<s2> ^instance <i10> +)
    (<i10> ^1 <i11> + ^3 <i8> + ^2 <i5> +)
}

### CHUNK issue, ordering, prestore for now
sp {chunkx4*board-between*elaborate*instances*straight*single*OpNoChange*t3343-2
    (state <s1> ^list <l1>
          ^{ <a1> << action goal predicate failure heuristic >> } <a2>)
    (<l1> ^game <g1>)
    (<a2> ^condition <c1>)
    (<c1> ^function board-between ^rtype single ^name between-exclusive
          ^type function ^args <a3> ^negative <n4> ^parameter <p4>
          ^result <r1>)
    (<a3> ^num 3 ^1 <i1> ^3 <i2> ^2 <i3>)
    (<i1> ^rtype single ^result <r2>)
    (<r1> ^set <s2>)
    (<r2> ^set <s3>)
    (<s3> ^instance <i4>)
    (<i4> ^1 <i5>)
   -{ (<s3> ^instance { <i6> > <i4> })
      (<i6> ^1 <i5>)}
    (<i5> ^predicates <p5>)
    (<i3> ^result <r3>)
    (<r3> ^set <s4>)
    (<s4> ^instance <i7>)
    (<i7> ^1 <i8>)
   -{ (<s4> ^instance { <i9> > <i7> })
      (<i9> ^1 <i8>)}
    (<i8> ^predicates <p6>)
    (<p5> ^{ <a4> << x y >> } <n1> ^<a5> <a6>)
    (<p6> ^<a4> <n2> ^{ <a5> << x y >> <> <a4> } <a6>)
    (<i2> ^result <r4>)
    (<r4> ^set <s5>)
    (<s5> ^instance <i10>)
    (<i10> ^1 <i11>)
   -{ (<s5> ^instance { <i12> > <i10> })
      (<i12> ^1 <i11>)}
    (<i11> ^predicates <p7>)
    (<p7> ^<a4> <n3> ^<a5> <a6>)    
    (<s1> ^diff-table <d1>)
    (<d1> ^diff <d2> ^diff <d3>)
    (<d2> ^result 1 ^pair <p1> ^pair <p2>)
    (<d3> ^result 2 ^pair <p3>)
    (<p1> ^num <n1> ^num { <n2> <> <n1> })
    (<p2> ^num <n1> ^num { <n3> <> <n2> <> <n1> })
    (<p3> ^num <n2> ^num <n3>)
    -->
    (<s2> ^instance <i13> +)
    (<i13> ^2 <i8> + ^3 <i11> + ^1 <i5> +)
}

sp {chunkx4*board-between*elaborate*instances*diagonal*single*OpNoChange*t3343-1
    (state <s1> ^list <l1>
          ^{ <a1> << action goal predicate failure heuristic >> } <a2>)
    (<l1> ^game <g1>)
    (<a2> ^condition <c1>)
    (<c1> ^function board-between ^rtype single ^name between-exclusive
          ^type function ^args <a3> ^negative <n7> ^parameter <p7>
          ^result <r1>)
    (<a3> ^num 3 ^1 <i1> ^3 <i2> ^2 <i3>)
    (<i1> ^rtype single ^result <r2>)
    (<r1> ^set <s2>)
    (<r2> ^set <s3>)
    (<s3> ^instance <i4>)
    (<i4> ^1 <i5>)
   -{ (<s3> ^instance { <i6> > <i4> })
      (<i6> ^1 <i5>)}
    (<i5> ^predicates <p8>)
    (<p8> ^y <n2> ^x <n1>)
    (<i3> ^result <r3>)
    (<r3> ^set <s4>)
    (<s4> ^instance <i7>)
    (<i7> ^1 <i8>)
   -{ (<s4> ^instance { <i9> > <i7> })
      (<i9> ^1 <i8>)}
    (<i8> ^predicates <p9>)
    (<p9> ^y <n5> ^x <n3>)
    (<i2> ^result <r4>)
    (<r4> ^set <s5>)
    (<s5> ^instance <i10>)
    (<i10> ^1 <i11>)
   -{ (<s5> ^instance { <i12> > <i10> })
      (<i12> ^1 <i11>)}
    (<i11> ^predicates <p10>)
    (<p10> ^y <n6> ^x <n4>)
    (<s1> ^diff-table <d1>)
    (<d1> ^diff <d2> ^diff <d3>)
    (<d2> ^result 1 ^pair <p1> ^pair <p2> ^pair <p3> ^pair <p4>)
    (<d3> ^result 2 ^pair <p5> ^pair <p6>)
    (<p1> ^num <n1> ^num { <n3> <> <n1> })
    (<p3> ^num <n1> ^num { <n4> <> <n3> <> <n1> })
    (<p2> ^num <n2> ^num { <n5> <> <n2> })
    (<p4> ^num <n2> ^num { <n6> <> <n5> <> <n2> })
    (<p5> ^num <n3> ^num <n4>)
    (<p6> ^num <n5> ^num <n6>)
    -->
    (<s2> ^instance <i13> +)
    (<i13> ^2 <i8> + ^3 <i11> + ^1 <i5> +)
}

sp {chunkx4*board-between*elaborate*instances*samexy*set*OpNoChange*t3076-2
    (state <s1> ^list <l1>
          ^{ <a1> << action goal predicate failure heuristic >> } <a2>)
    (<l1> ^game <g1>)
    (<a2> ^condition <c1>)
    (<c1> ^function board-between ^rtype set ^name between-exclusive
          ^type function ^args <a3> ^negative <n1> ^parameter <p1>
          ^result <r3>)
    (<a3> ^num 3 ^1 <i1> ^3 <i2> ^2 <i3>)
    (<i1> ^rtype set ^result <r4>)
    (<i3> ^result <r1> ^result <r5>)
    (<r1> ^set <s2>)
    (<s2> ^instance <i4>)
    (<i4> ^1 <i5>)
   -{ (<s2> ^instance { <i6> > <i4> })
      (<i6> ^1 <i5>)}
    (<i2> ^result <r2> ^result <r6>)
    (<r2> ^set <s3>)
    (<s3> ^instance <i7>)
    (<i7> ^1 { <i8> <> <i5> })
   -{ (<s3> ^instance { <i9> > <i7> })
      (<i9> ^1 <i8>)}
    (<r3> ^set <s4>)
    (<s4> ^instance <i10>)
    (<i10> ^3 <i11> ^2 <i12> ^1 <i13>)
    (<i11> ^predicates <p2>)
    (<i12> ^predicates <p3>)
    (<r4> ^set <s5>)
    (<s5> ^instance <i14>)
    (<i14> ^1 <i15>)
    (<r5> ^set <s6>)
    (<s6> ^instance <i16>)
    (<i16> ^1 <i12>)
    (<r6> ^set <s7>)
    (<s7> ^instance <i17>)
    (<i17> ^1 <i11>)
    (<p3> ^{ <a4> << x y >> } <a5> ^{ <a8> << x y >> <> <a4> } <a9>)
    (<p2> ^<a4> <a5> ^<a8> <a10>)
    (<i15> ^<a6> <a7>)
    (<a7> ^predicates <p4>)
    (<p4> ^<a4> <a5>)
   -{ (<p4> ^<a8> { <a11> >= <a10> >= <a9> } ^<a8> <a11>)}
   -{ (<p4> ^<a8> { <a12> <= <a10> <= <a9> } ^<a8> <a12>)}
    -->
    (<i13> ^object <a7> +)
}
sp {chunkx4*board-between*elaborate*instances*samexy*set*inclusive*OpNoChange*t57212-3
    (state <s1> ^list <l1>
          ^{ <a1> << action goal predicate failure heuristic >> } <a2>)
    (<l1> ^game <g1>)
    (<a2> ^condition <c1>)
    (<c1> ^function board-between ^rtype set ^name between-inclusive
          ^type function ^args <a3> ^negative <n1> ^parameter <p1>
          ^result <r3>)
    (<a3> ^num 3 ^1 <i1> ^3 <i2> ^2 <i3>)
    (<i1> ^rtype set ^result <r4>)
    (<i3> ^result <r1> ^result <r5>)
    (<r1> ^set <s2>)
    (<s2> ^instance <i4>)
    (<i4> ^1 <i5>)
   -{ (<s2> ^instance { <i6> > <i4> })
      (<i6> ^1 <i5>)}
    (<i2> ^result <r2> ^result <r6>)
    (<r2> ^set <s3>)
    (<s3> ^instance <i7>)
    (<i7> ^1 { <i8> <> <i5> })
   -{ (<s3> ^instance { <i9> > <i7> })
      (<i9> ^1 <i8>)}
    (<r3> ^set <s4>)
    (<s4> ^instance <i10>)
    (<i10> ^3 <i11> ^2 <i12> ^1 <i13>)
    (<i11> ^predicates <p2>)
    (<i12> ^predicates <p3>)
    (<r4> ^set <s5>)
    (<s5> ^instance <i14>)
    (<i14> ^1 <i15>)
    (<r5> ^set <s6>)
    (<s6> ^instance <i16>)
    (<i16> ^1 <i12>)
    (<r6> ^set <s7>)
    (<s7> ^instance <i17>)
    (<i17> ^1 <i11>)
    (<p3> ^{ <a4> << x y >> } <a5> ^{ <a8> << x y >> <> <a4> } <a9>)
    (<p2> ^<a4> <a5> ^<a8> <a10>)
    (<i15> ^<a6> <a7>)
    (<a7> ^predicates <p4>)
    (<p4> ^<a4> <a5>)
   -{ (<p4> ^<a8> { <a11> > <a10> >= <a9> } ^<a8> <a11>)}
   -{ (<p4> ^<a8> { <a12> < <a10> <= <a9> } ^<a8> <a12>)}
    -->
    (<i13> ^object <a7> +)
}

#fix temp nqueen bad learning investiage why get gtype g1 g1 g3
#sp {chunkx4*subset-of*elaborate*object*instance*OpNoChange*t3263-1
#    (state <s1> ^list <l1>
#          ^{ <a1> << action goal predicate failure heuristic >> } <a2>)
#    (<l1> ^game <g1>)
#    (<a2> ^condition <c1>)
#    (<c1> ^function subset-of ^rtype set ^name 2 ^type function ^args <a3>
#          ^negative <n1> ^parameter <p1> ^result <r1>)
#    (<a3> ^num 1 ^2 <i1>)
#    (<r1> ^set <s2>)
#    (<i1> ^result <r2>)
#    (<r2> ^set <s3>)
#    (<s3> ^instance <i2>)
#    (<i2> ^1 <i3>)
#   -{ (<s3> ^instance { <i4> < <i2> })
#      (<i4> ^1 <i3>)}
#    (<i3> ^<a4> <a5> ^<a6> { <a7> > <a5> })
#    -->
#    (<s2> ^instance <i5> +)
#    (<i5> ^2 <i3> + ^1 <i6> +)
#    (<i6> ^object <a7> + ^object <a5> +)
#}
#sp {chunkx4*same-attribute*apply*complete*instance*OpNoChange*t3785-1
#    (state <s1> ^list <l1>
#          ^{ <a1> << action goal predicate failure heuristic >> } <a2>)
#    (<l1> ^game <g1>)
#    (<a2> ^condition <c1>)
#    (<c1> ^negative false ^rtype set ^type same-attribute ^parameter <p1>
#          ^args <a3> ^result <r1> ^name <n1>)
#    (<p1> ^num 1)
#    (<a3> ^num 1 ^1 <i1>)
#    (<i1> ^rtype set ^result <r2>)
#    (<r1> ^set <s2>)
#    (<r2> ^set <s3>)
#    (<s3> ^instance <i2>)
#    (<i2> ^1 <i3>)
#   -{ (<s3> ^instance { <i4> < <i2> })
#      (<i4> ^1 <i3>)}
#   -{ (<i3> ^<a4> <a5> ^<a6> { <a7> < <a5> })
#      (<a5> ^predicates <p2>)
#      (<a7> ^predicates <p3>)
#      (<p3> ^<n1> <n2>)
#      (<p2> -^<n1> <n2>)}
#   -{ (<i3> ^<a8> <a9>)
#      (<a9> ^predicates <p4>)
#      (<p4> -^<n1> <n3>)}
#    -->
#    (<s2> ^instance <i5> +)
#    (<i5> ^1 <i3> +)
#}
#sp {chunkx4*soar-difference*apply*complete*OpNoChange*t5909-1
#    (state <s1> ^list <l1>
#          ^{ <a1> << action goal predicate failure heuristic >> } <a2>)
#    (<l1> ^game <g1>)
#    (<a2> ^condition <c1>)
#    (<c1> ^function soar-difference ^type function ^parameter <p1> ^args <a3>
#          ^negative <n1> ^result <r1> ^name <n2>)
#    (<p1> ^num 2)
#    (<a3> ^num 1 ^2 <i1>)
#    (<r1> ^set <s2>)
#    (<i1> ^result <r2>)
#    (<r2> ^set <s3>)
#    (<s3> ^instance <i2>)
#    (<i2> ^1 <i3>)
#   -{ (<s3> ^instance { <i4> < <i2> })
#      (<i4> ^1 <i3>)}
#    (<i3> ^<a4> <a5> ^<a6> { <a7> > <a5> } -^{ <a8> <> <a4> <> <a6> } <a9>)
#    -->
#    (<s2> ^instance <i5> +)
#    (<i5> ^1 (- <a7> <a5>) + ^2 <i3> +)
#}
#sp {chunkx4*top-pair*apply*complete*OpNoChange*t3689-1
#    (state <s1> ^list <l1> ^world <w1>
#          ^{ <a1> << action goal predicate failure heuristic >> } <a2>)
#    (<l1> ^game <g1>)
#    (<w1> ^predicates <p1>)
#    (<p1> ^predicate <p2>)
#    (<p2> ^instance <i1> ^handle <h1>)
#    (<i1> ^2 <i2> ^1 <i3>)
#    (<a2> ^condition <c1>)
#    (<c1> ^negative false ^rtype single ^name <h1> ^type state-pair ^args <a3>
#          ^parameter <p3> ^result <r1> ^attribute <a4>)
#    (<a3> ^num 2 ^2 <i4> ^1 <i5>)
#    (<i4> -^rtype set ^result <r3>)
#    (<i5> -^rtype set ^result <r2>)
#    (<p3> ^num { <n1> < 2 })
#    (<r1> ^set <s2>)
#    (<r2> ^set <s3>)
#    (<s3> ^instance <i6>)
#   -{ (<s3> ^instance { <i7> < <i6> })
#      (<i7> ^1 <i3>)}
#    (<i6> ^1 <i3>)
#    (<r3> ^set <s4>)
#    (<s4> ^instance <i8>)
#   -{ (<s4> ^instance { <i9> < <i8> })
#      (<i9> ^1 <i2>)}
#    (<i8> ^1 <i2>)
#    -->
#    (<s2> ^instance <i10> +)
#    (<i10> ^1 <i3> +)
#}
#sp {chunkx4*soar-compare*greater*param-2*OpNoChange*t10969-1
#    (state <s1> ^list <l1>
#          ^{ <a1> << action goal predicate failure heuristic >> } <a2>)
#    (<l1> ^game <g2>)
#    (<a2> ^condition <c1>)
#    (<c1> ^function soar-greater ^type function ^parameter <p1> ^args <a3>
#          ^negative <n1> ^result <r1> ^name <n2>)
#    (<p1> ^num 2)
#    (<a3> ^num 2 ^2 <i1> ^1 <i2>)
#    (<r1> ^set <s2>)
#    (<i2> ^result <r2>)
#    (<r2> ^set <s3>)
#    (<s3> ^instance <i3>)
#    (<i3> ^1 <i4>)
#   -{ (<s3> ^instance { <i5> < <i3> })
#      (<i5> ^1 <i4>)}
#    (<i1> ^result <r3>)
#    (<r3> ^set <s4>)
#    (<s4> ^instance <i6>)
#    (<i6> ^1 { <i7> < <i4> })
#   -{ (<s4> ^instance { <i8> < <i6> })
#      (<i8> ^1 <i7>)}
#    -->
#    (<s2> ^instance <i9> +)
#    (<i9> ^1 <i4> + ^2 <i7> +)
#}
#sp {chunkx4*top-pair*apply*complete*OpNoChange*t15977-1
#    (state <s1> ^list <l1> ^world <w1>
#          ^{ <a1> << action goal predicate failure heuristic >> } <a2>)
#    (<l1> ^game <g2>)
#    (<w1> ^predicates <p1>)
#    (<p1> ^predicate <p2>)
#    (<p2> ^handle <h1>)
#    (<a2> ^condition <c1>)
#    (<c1> ^negative false ^rtype set ^name <h1> ^type state-pair
#          ^parameter <p3> ^args <a3> ^result <r1> ^attribute <a10>)
#    (<p3> ^num 1)
#    (<a3> ^num 2 ^2 <i1> ^1 <i2>)
#    (<i1> -^rtype set)
#    (<i2> ^rtype set ^result <r2>)
#    (<r1> ^set <s2>)
#    (<r2> ^set <s3>)
#    (<s3> ^instance <i3>)
#    (<i3> ^1 <i4>)
#   -{ (<i4> -^<a4> <a5>)
#      (<s1> ^<a6> <a7>)}
#   -{ (<i4> ^<a8> <a9>)
#     -{ (<p2> ^instance <i5>)
#        (<i5> ^1 <a9> ^2 <i6>)
#        (<i1> ^result <r3>)
#        (<r3> ^set <s4>)
#        (<s4> ^instance <i7>)
#        (<i7> ^1 <i6>)}}
#   -{ (<s3> ^instance { <i8> < <i3> })
#      (<i8> ^1 <i4>)}
#    -->
#    (<s2> ^instance <i9> +)
#    (<i9> ^1 <i4> +)
#}
####################



#seems buggy...
#sp {chunkx4*board-between*elaborate*instances*samexy*set*inclusive*OpNoChange*t57212-2
#    (state <s1> ^list <l1>
#          ^{ <a1> << action goal predicate failure heuristic >> } <a2>)
#    (<l1> ^game <g1>)
#    (<a2> ^condition <c1>)
#    (<c1> ^function board-between ^rtype set ^name between-inclusive
#          ^type function ^args <a3> ^negative <n1> ^parameter <p1>
#          ^result <r3>)
#    (<a3> ^num 3 ^1 <i1> ^3 <i2> ^2 <i3>)
#    (<i1> ^rtype set ^result <r4>)
#    (<i3> ^result <r1> ^result <r5>)
#    (<r1> ^set <s2>)
#    (<s2> ^instance <i4>)
#    (<i4> ^1 <i5>)
#   -{ (<s2> ^instance { <i6> > <i4> })
#      (<i6> ^1 <i5>)}
#    (<i2> ^result <r2> ^result <r6>)
#    (<r2> ^set <s3>)
#    (<s3> ^instance <i7>)
#    (<i7> ^1 { <i8> <> <i5> })
#   -{ (<s3> ^instance { <i9> > <i7> })
#      (<i9> ^1 <i8>)}
#    (<r3> ^set <s4>)
#    (<s4> ^instance <i10>)
#    (<i10> ^3 <i11> ^2 <i12> ^1 <i13>)
#    (<i11> ^predicates <p2>)
#    (<i12> ^predicates <p3>)
#    (<r4> ^set <s5>)
#    (<s5> ^instance <i14>)
#    (<i14> ^1 <i15>)
#    (<r5> ^set <s6>)
#    (<s6> ^instance <i16>)
#    (<i16> ^1 <i12>)
#    (<r6> ^set <s7>)
#    (<s7> ^instance <i17>)
#    (<i17> ^1 <i11>)
#    (<i15> ^<a4> <a5>)
#    (<a5> ^predicates <p2>)
#    (<p3> ^{ <a6> << x y >> } <a7> ^{ <a8> << x y >> <> <a6> } <a9>)
#    (<p2> ^<a6> <a7> ^<a8> <a10>)
#   -{ (<p2> ^<a8> { <a11> > <a10> >= <a9> } ^<a8> <a11>)}
#   -{ (<p2> ^<a8> { <a12> < <a10> <= <a9> } ^<a8> <a12>)}
#    -->
#    (<i13> ^object <a5> +)
#}

#sp {chunkx4*board-between*elaborate*object*instance*OpNoChange*t57212-1
#    (state <s1> ^list <l1>
#          ^{ <a1> << action goal predicate failure heuristic >> } <a2>)
#    (<l1> ^game <g1>)
#    (<a2> ^condition <c1>)
#    (<c1> ^function board-between ^rtype set ^type function ^args <a3>
#          ^negative <n1> ^parameter <p1> ^result <r1> ^name <n2>)
#    (<a3> ^num 3 ^3 <i1> ^2 <i2> ^1 <i3>)
#    (<r1> ^set <s2>)
#    (<i2> ^result <r2>)
#    (<r2> ^set <s3>)
#    (<s3> ^instance <i4>)
#    (<i4> ^1 <i5>)
#   -{ (<s3> ^instance { <i6> > <i4> })
#      (<i6> ^1 <i5>)}
#    (<i1> ^result <r3>)
#    (<r3> ^set <s4>)
#    (<s4> ^instance <i7>)
#    (<i7> ^1 { <i8> <> <i5> })
#   -{ (<s4> ^instance { <i9> > <i7> })
#      (<i9> ^1 <i8>)}
#    -->
#    (<s2> ^instance <i10> +)
#    (<i10> ^1 <i11> + ^3 <i8> + ^2 <i5> +)
#}