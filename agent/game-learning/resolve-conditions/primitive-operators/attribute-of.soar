sp {attribute-of*propose*complete
   (state <s> ^name attribute-of
              ^instance <instance>)
-->
   (<s> ^operator <o> + =)
   (<o> ^name complete
        ^instance <instance>)
}

sp {attribute-of*apply*complete
   (state <s> ^name attribute-of
              ^superstate.condition.result.set <res>
              ^operator <op>
              ^instance <s1>)  
   (<op> ^name complete ^instance <s1>) #JAMES UNCHUNKED VERSION
-->
  (<res> ^instance <s1>)
}

sp {attribute-of*numeric-evaluate*value
   (state <s> ^name attribute-of
              ^superstate.condition.rtype single
              ^superstate.operator <o>)
   (<o> ^args <args> ^parameter.num < 2 ^type <type>)
   (<args> ^num 1
           ^2 <a1>)
   (<a1> -^rtype set ^result.set <s3>)
   (<s3> ^instance <i5>)
   (<i5> ^1 <obja>)
   (<obja> ^predicates.<type> <value>)
 -{(<s3> ^instance {<i8> < <i5>})
   (<i8> ^1 <obja>)} #bias only create one per object
-->
   (<s> ^instance <instance>)
   (<instance> ^1 <value>)
}

sp {attribute-of*numeric-evaluate*value*instance
   (state <s> ^name attribute-of
              ^superstate.condition.rtype single
              ^superstate.operator <o>)
   (<o> ^args <args> ^parameter.num 2 ^type <type>)
   (<args> ^num 1
           ^2 <a1>)
   (<a1> -^rtype set ^result.set <s3>)
   (<s3> ^instance <i5>)
   (<i5> ^1 <obja>)
   (<obja> ^predicates.<type> <value>)
 -{(<s3> ^instance {<i8> < <i5>})
   (<i8> ^1 <obja>)} #bias only create one per object
-->
   (<s> ^instance <instance>)
   (<instance> ^1 <value> ^2 <obja>)
}

sp {attribute-of*numeric-evaluate*value*instance*arg2
   (state <s> ^name attribute-of
              ^superstate.condition.rtype single
              ^superstate.operator <o>)
   (<o> ^args <args> ^parameter.num 2 ^type <type> ^negative false)
   (<args> ^num 2
           ^1 <a1>
           ^2 <a2>)
   (<a1> ^result.set <s35>)
   (<s35> ^instance <i55>)
   (<i55> ^1 <value>)
   (<a2> -^rtype set ^result.set <s3>)
   (<s3> ^instance <i5>)
   (<i5> ^1 <obja>)
   (<obja> ^predicates.<type> <value>)
 -{(<s3> ^instance {<i8> < <i5>})
   (<i8> ^1 <obja>)} #bias only create one per object
 -{(<s35> ^instance {<i9> < <i55>})
   (<i9> ^1 <value>)} #bias only create one per object
-->
   (<s> ^instance <instance>)
   (<instance> ^1 <value> ^2 <obja>)
}
sp {attribute-of*numeric-evaluate*value*instance*arg2*negative
   (state <s> ^name attribute-of
              ^superstate.condition.rtype single
              ^superstate.operator <o>)
   (<o> ^args <args> ^parameter.num 2 ^type <type> ^negative true)
   (<args> ^num 2
           ^1 <a1>
           ^2 <a2>)
   (<a2> -^rtype set ^result.set <s3>)
   (<s3> ^instance <i5>)
   (<i5> ^1 <obja>)
   (<obja> ^predicates.<type> <value>)
  -{(<a1> ^result.set.instance.{1} <value>)}
 -{(<s3> ^instance {<i8> < <i5>})
   (<i8> ^1 <obja>)} #bias only create one per object
-->
   (<s> ^instance <instance>)
   (<instance> ^1 <value> ^2 <obja>)
}

sp {attribute-of*numeric-evaluate*value*instance*sets
   (state <s> ^name attribute-of
              ^superstate.condition.rtype set
              ^superstate.operator <o>)
   (<o> ^args <args> ^parameter <pn>)
   #(<pn> ^num 2)
   (<args> ^num 1
           ^2 <a1>)
   (<a1> ^rtype set ^result.set <s3>)
   (<s3> ^instance <i5>)
   (<i5> ^1 <obja>)
 -{(<s3> ^instance {<i8> < <i5>})
   (<i8> ^1 <obja>)} #bias only create one per object
-->
   (<s> ^instance <b20>)
   (<b20> ^1 <n10> ^2 <obja>)
}

#TODO CHUNK BUG
#### prestore chunks , inccorect learned
sp {chunkx4*attribute-of*apply*complete*sets*OpNoChange*t5077-2
    (state <s1> ^list <l1>
          ^{ <a1> << action goal predicate failure heuristic >> } <a2>)
    (<l1> ^game <g1>)
    (<a2> ^condition <c1>)
    (<c1> ^rtype set ^type attribute-of ^args <a3> ^negative <n1>
          ^parameter <p1> ^result <r2> ^name <n2>)
    (<a3> ^num 1 ^2 <i1>)
    (<i1> ^rtype set ^result <r1>)
    (<r1> ^set <s2>)
    (<s2> ^instance <i2>)
    (<i2> ^1 <i5>)
    (<r2> ^set <s3>)
    (<s3> ^instance <i4>)
    (<i4> ^2 <i5> ^1 <i6>)
    (<i5> ^object <o1>)
    (<o1> ^predicates <p2>)
    (<p2> ^<n2> <n3>)
-->
    (<i6> ^<a4> <n3> +)
}

sp {chunkx4*attribute-of*apply*complete*OpNoChange*t5077-1
    (state <s1> ^list <l1>
          ^{ <a1> << action goal predicate failure heuristic >> } <a2>)
    (<l1> ^game <g1>)
    (<a2> ^condition <c1>)
    (<c1> ^rtype set ^type attribute-of ^args <a3> ^negative <n1>
          ^parameter <p1> ^result <r1> ^name <n2>)
    (<a3> ^num 1 ^2 <i1>)
    (<i1> ^rtype set ^result.set <s3>)
    (<s3> ^instance <i2>)
    (<i2> ^1 <i3>)
    (<r1> ^set <s2>)
 -{(<s3> ^instance {<i8> < <i2>})
   (<i8> ^1 <i3>)} #bias only create one per object
-->
    (<s2> ^instance <i4> +)
    (<i4> ^2 <i3> + ^1 <i5> +)
}

#chunking bug?? try other versions
sp {attribute-of*apply*complete*sets
   (state <s> ^name attribute-of
              #^instance <f1> #JAMES UNCHUNKED VERSION
              ^operator <op>
              ^superstate <ss>)
   (<ss> ^condition <c> ^operator <o>)
   (<c> ^rtype set ^result.set.instance <f1>)
   (<op> ^name complete ^instance <f1>) #JAMES UNCHUNKED VERSION huh wtf weird
   (<f1> ^1 <n2> ^2 <b5>)
   (<o> ^args <args> ^parameter <pn> ^type <type>)
   #(<args> ^num 1
   #        ^2 <a1b>)
   #(<a1b> ^rtype set ^result.set.instance.{1} <b5>) #weird bug in chunk if include
   (<b5> ^object <obj>)
   (<obj> ^predicates.<type> <val>)
-->
   (<n2> ^<random> <val>)
}