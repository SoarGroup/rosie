### matches-object-predicates
# match an existing object based on the predicates they share

### Case 1: For a perception object, match any objects that have no belief obj

sp {add-object-to-world*propose*matches-object-predicates*source-type*perception
   (state <s> ^name add-object-to-world
              ^source-type perception
              ^source-obj <il-obj>
              ^object-monitor.object-info <obj-info>
             -^predicate-match)
   (<obj-info> ^status.is-visible1 not-visible1
              -^belief-obj)
-->
   (<s> ^operator <o> + =)
   (<o> ^name matches-object-predicates
        ^object-info <obj-info>
        ^matching-counts <mc>)
}

### Case 2: For a world-obj, match any perception objects

sp {add-object-to-world*propose*matches-object-predicates*source-type*belief
   (state <s> ^name add-object-to-world
              ^source-type << imagined tcn-obj-slot smem >>
              ^object-monitor.object-info <obj-info>
             -^matches-existing-object)
-->
   (<s> ^operator <o> + =)
   (<o> ^name matches-object-predicates
        ^object-info <obj-info>
        ^matching-counts <mc>)
}

### Elaborate matching predicates

sp {add-object-to-world*elaborate*matches-object-predicates*matching-predicate
   (state <s> ^name add-object-to-world
              ^operator <o> +
              ^new-object-predicates.<prop> <pred>)
   (<o> ^name matches-object-predicates
        ^object-info.world-obj.predicates.<prop> <pred>)
-->
   (<o> ^matching-predicate <pred>)
}

# Count the number of matching predicates
# start with the lowest predicate as 1
sp {add-object-to-world*elaborate*matches-object-predicates*matching-counts*initial
   (state <s> ^name add-object-to-world
              ^operator <o> +)
   (<o> ^name matches-object-predicates
        ^matching-predicate <min-pred>
       -^matching-predicate < <min-pred>
        ^matching-counts <counts>)
-->
   (<counts> ^<min-pred> 1)
}

# add a +1 count for each 'next' predicate (no predicate between it and previous)
sp {matching-existing-object*elaborate*matching-object-predicates*matching-counts*next
   (state <s> ^name add-object-to-world
              ^operator <o> +)
   (<o> ^name matches-object-predicates
        ^matching-predicate { <next-pred> > <prev-pred> }
       -^matching-predicate { > <prev-pred> < <next-pred> }
        ^matching-counts <counts>)
   (<counts> ^<prev-pred> <prev-count>)
-->
   (<counts> ^<next-pred> (+ <prev-count> 1))
}

# elaborate the max count as the number of matching predicates
sp {matching-existing-object*elaborate*matching-object-predicates*number-matching-predicates
   (state <s> ^name add-object-to-world
              ^operator <o> +
              ^new-object-predicates.<prop> <pred>)
   (<o> ^name matches-object-predicates
        ^matching-counts <counts>)
   (<counts> ^<max-pred> <max-count>
            -^<better-pred> > <max-count>)
-->
   (<o> ^number-matching-predicates <max-count>)
}

### Elaborate conflicting predicates

# These conflict if the other object has a different predicate for the same property
sp {add-object-to-world*elaborate*matches-object-predicates*conflicting-predicate
   (state <s> ^name add-object-to-world
              ^operator <o> +
              ^new-object-predicates.<prop> <pred>)
   (<o> ^name matches-object-predicates
        ^object-info.world-obj.predicates <preds>)
   (<preds> -^<prop> <pred>
             ^<prop> <> <pred>)
-->
   (<o> ^conflicting-predicate <pred>)
}

#   These are predicates which must be on the other object to match
sp {add-object-to-world*elaborate*matches-object-predicates*conflicting-predicate*required
   (state <s> ^name add-object-to-world
              ^operator <o> +
              ^new-object-predicates.{ <prop> << category modifier1 name sentence >> } <pred>)
   (<o> ^name matches-object-predicates
        ^object-info.world-obj.predicates <preds>)
   (<preds> -^<prop> <pred>)
-->
   (<o> ^conflicting-predicate <pred>)
}


### Preferences

# Prefer matches with more matching predicates
sp {add-object-to-world*prefer*matches-object-predicates*higher*matching-predicate*count
   (state <s> ^name add-object-to-world
              ^operator <o1> +
              ^operator <o2> +)
   (<o1> ^name matches-object-predicates
         ^matching-predicate-count <c>)
   (<o2> ^name matches-object-predicates
         ^matching-predicate-count < <c>)
-->
   (<s> ^operator <o1> > <o2>)
}

# Reject if no matching predicates
sp {add-object-to-world*reject*matches-object-predicates*no*matching-predicate
   (state <s> ^name add-object-to-world
              ^operator <o> +)
   (<o> ^name matches-object-predicates
        -^matching-predicate)
-->
   (<s> ^operator <o> -)
}

# Reject if any conflicting predicate
sp {add-object-to-world*reject*matches-object-predicates*conflicting-predicate
   (state <s> ^name add-object-to-world
              ^operator <o> +)
   (<o> ^name matches-object-predicates
        ^conflicting-predicate)
-->
   (<s> ^operator <o> -)
}

### Application

# copy the match to the superstate
sp {add-object-to-world*apply*matches-object-predicates*report*to*superstate
   (state <s> ^name add-object-to-world
              ^operator <o>)
   (<o> ^name matches-object-predicates
        ^object-info <obj-info>)
-->
   (<s> ^matches-existing-object <obj-info>
        ^predicate-match <obj-info>)
}

# If print-perception is on, print a message about the match
sp {add-object-to-world*apply*matches-object-predicates*print-perception
   (state <s> ^name add-object-to-world
              ^operator <o>
              ^object-handle <new-obj>
              ^agent-params.print-perception true)
   (<o> ^name matches-object-predicates
        ^object-info.object-handle <matching-obj>)
-->
   (write |add-object-to-world: Object | <new-obj> | matches | <matching-obj> | via predicates|(crlf))
   (write (cmd print <o>) (crlf))
}
