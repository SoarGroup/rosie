
sp {add-subtask-to-tcn*propose*add-subtask-goal
   (state <s> ^name add-subtask-to-tcn
              ^current-goal-id <goal>
              ^superstate.desired <des>
              ^subtask-structure.handle <sub-h>)
   (<goal> ^handle <goal-h>)
   (<des> ^handle <goal-h>
          ^satisfied true)
-->
   (<s> ^operator <o> + =)
   (<o> ^name add-subtask-goal
        ^subtask-handle <sub-h>)
}
*
matches add-subtask-to-tcn*propose*add-subtask-goal
1 (state <s> ^name add-subtask-to-tcn)
>>>> (<s> ^subtask-structure <s*2>)
     (<s> ^current-goal-id <goal>)
     (<goal> ^handle <goal-h>)
     (<s*2> ^handle <sub-h>)
     (<s> ^superstate <s*1>)
     (<s*1> ^desired <des>)
     (<des> ^satisfied true)
     (<des> ^handle <goal-h>)

0 complete matches.
603:             ==>S: S172 (operator no-change)
604:                O: O765 (generalize-task-argument)
605:                O: O764 (complete-generalize-task-operator)
606:             O: O767 (create-subtask-structure)
607:             O: O769 (store-task-subtask)
matches add-subtask-to-tcn*propose*add-subtask-goal
1 (state <s> ^name add-subtask-to-tcn)
   1 (<s> ^subtask-structure <s*2>)
   1 (<s> ^current-goal-id <goal>)
   1 (<goal> ^handle <goal-h>)
   1 (<s*2> ^handle <sub-h>)
   1 (<s> ^superstate <s*1>)
   1 (<s*1> ^desired <des>)
   1 (<des> ^satisfied true)
   1 (<des> ^handle <goal-h>)

1 complete matches.
sp {add-subtask-to-tcn*prefer*add-subtask-goal*over*store-task-subtask
   (state <s> ^name add-subtask-to-tcn
              ^operator <o1> +
              ^operator <o2> +)
   (<o1> ^name add-subtask-goal)
   (<o2> ^name store-task-subtask)
-->
   (<s> ^operator <o1> > <o2>)
}
*
matches add-subtask-to-tcn*prefer*add-subtask-goal*over*store-task-subtask
1 (state <s> ^name add-subtask-to-tcn)
   2 (<s> ^operator <o2> +)
   1 (<o2> ^name store-task-subtask)
   2 (<s> ^operator <o1> +)
   1 (<o1> ^name add-subtask-goal)

1 complete matches.
608:             O: O768 (add-subtask-goal)
sp {add-subtask-to-tcn*propose*add-subtask-goal
   (state <s> ^name add-subtask-to-tcn
              ^current-goal-id <goal>
              ^superstate.desired <des>
              ^subtask-structure.handle <sub-h>)
   (<goal> ^handle <goal-h>)
   (<des> ^handle <goal-h>
          ^satisfied true)
-->
   (<s> ^operator <o> + =)
   (<o> ^name add-subtask-goal
        ^current-goal <goal>
        ^subtask-handle <sub-h>)
}
#*
sp {add-subtask-to-tcn*propose*add-subtask-goal
   (state <s> ^name add-subtask-to-tcn
              ^current-goal-id <goal>
              ^superstate.desired <des>
              ^subtask-structure.handle <sub-h>)
   (<goal> ^handle <goal-h>)
   (<des> ^handle <goal-h>
          ^satisfied true)
-->
   (<s> ^operator <o> + =)
   (<o> ^name add-subtask-goal
        ^current-goal <goal>
        ^subtask-handle <sub-h>)
}
#*
matches add-subtask-to-tcn*propose*add-subtask-goal
1 (state <s> ^name add-subtask-to-tcn)
   1 (<s> ^subtask-structure <s*2>)
   1 (<s> ^current-goal-id <goal>)
   1 (<goal> ^handle <goal-h>)
   1 (<s*2> ^handle <sub-h>)
   1 (<s> ^superstate <s*1>)
   1 (<s*1> ^desired <des>)
   1 (<des> ^satisfied true)
   1 (<des> ^handle <goal-h>)

1 complete matches.
sp {add-subtask-to-tcn*apply*add-subtask-goal
   (state <s> ^name add-subtask-to-tcn
              ^operator <o>
              ^task-operator.task-handle <task-h>)
   (<o> ^name add-subtask-goal
        ^current-goal <goal>
        ^subtask-handle <sub-h>)
-->
   (<goal> ^next <next>)
   (<next> ^goal <st-goal>)
   (<st-goal> ^handle (make-constant-symbol (concat <task-h> |goal|))
              ^pred-count 1
              ^1 <st-pred>)
   (<st-pred> ^type subtask
              ^subtask-handle <sub-h>)

   (<s> ^to-store <goal> <next> <st-goal> <st-pred>)
}
*
matches add-subtask-to-tcn*apply*add-subtask-goal
1 (state <s> ^name add-subtask-to-tcn)
   1 (<s> ^operator <o>)
   1 (<o> ^name add-subtask-goal)
   1 (<o> ^subtask-handle <sub-h>)
>>>> (<o> ^current-goal <goal>)
     (<s> ^task-operator <t*1>)
     (<t*1> ^task-handle <task-h>)

0 complete matches.
609:             O: O770 (add-subtask-goal)
matches
O Assertions:
  add-subtask-to-tcn*apply*add-subtask-goal  [S168] 
I Assertions:
Retractions:
sp {add-subtask-to-tcn*propose*add-subtask-goal
   (state <s> ^name add-subtask-to-tcn
              ^current-goal-id <goal>
              ^superstate.desired <des>
              ^subtask-structure.handle <sub-h>
             -^subtask-goal)
   (<goal> ^handle <goal-h>)
   (<des> ^handle <goal-h>
          ^satisfied true)
-->
   (<s> ^operator <o> + =)
   (<o> ^name add-subtask-goal
        ^current-goal <goal>
        ^subtask-handle <sub-h>)
}
#*
sp {add-subtask-to-tcn*apply*add-subtask-goal
   (state <s> ^name add-subtask-to-tcn
              ^operator <o>
              ^task-operator.task-handle <task-h>)
   (<o> ^name add-subtask-goal
        ^current-goal <goal>
        ^subtask-handle <sub-h>)
-->
   (<goal> ^next <next>)
   (<next> ^goal <st-goal>)
   (<st-goal> ^handle (make-constant-symbol (concat <task-h> |goal|))
              ^pred-count 1
              ^1 <st-pred>)
   (<st-pred> ^type subtask
              ^subtask-handle <sub-h>)

   (<s> ^subtask-goal <st-goal>
        ^to-store <goal> <next> <st-goal> <st-pred>)
}
#*
matches add-subtask-to-tcn*apply*add-subtask-goal
1 (state <s> ^name add-subtask-to-tcn)
   1 (<s> ^operator <o>)
   1 (<o> ^name add-subtask-goal)
   1 (<o> ^subtask-handle <sub-h>)
   1 (<o> ^current-goal <goal>)
   1 (<s> ^task-operator <t*1>)
   1 (<t*1> ^task-handle <task-h>)

1 complete matches.
610:             O: O771 (add-subtask-goal)
matches
O Assertions:
  add-subtask-to-tcn*apply*add-subtask-goal  [S168] 
I Assertions:
Retractions:
611:             O: O769 (store-task-subtask)
matches
O Assertions:
  add-subtask-to-tcn*apply*store-task-subtask*store*to-store  [S168] (4)
  add-subtask-to-tcn*apply*store-task-subtask*arg*slots  [S168] 
  add-subtask-to-tcn*apply*store-task-subtask*argument  [S168] 
  add-subtask-to-tcn*apply*store-task-subtask*store*root  [S168] 
I Assertions:
Retractions:
612:          ==>S: S173 (state no-change)
613:             O: O776 (smem-query)
614:             ==>S: S174 (operator no-change)
615:             O: O777 (smem-query)
616:             ==>S: S175 (operator no-change)
617:             O: O779 (learn-select-next-goal-rule)
618:             ==>S: S176 (operator no-change)
619:                O: O780 (smem-query)
620:                ==>S: S177 (operator no-change)
621:                O: O783 (mark-edge-learned)
622:                O: O782 (propose-select-next-goal)
623:          ==>S: S178 (state no-change)
624:             O: O788 (smem-query)
625:             ==>S: S179 (operator no-change)
626:             O: O787 (smem-query)
627:             ==>S: S180 (operator no-change)
628:             O: O790 (learn-subtask-proposal)
629:             ==>S: S181 (operator no-change)
630:                O: O791 (smem-query)
631:                ==>S: S182 (operator no-change)
632:                O: O794 (smem-query)
633:                ==>S: S183 (operator no-change)
634:                O: O792 (remove-learned-flag)
635:                O: O793 (instantiate-task-operator)
636:                ==>S: S184 (operator no-change)
637:                   O: O796 (instantiate-task-argument)
638:                   O: O795 (complete-instantiate-task-operator)
639:                O: O797 (create-operator)
640:                ==>S: S185 (state no-change)
641:                   O: O813 (return-successful-match)
642:                O: O801 (op_pick-up1)
643:          O: T4 (op_pick-up1)
pref s166
Preferences for S166 ^operator:

acceptables:
  T4 (op_pick-up1) +  :I  [level 3] 
  I387 (select-next-goal) +  :I  [level 3] 
  O772 (smem-query) +  :I  [level 3] 
  O757 (push-task-segment) +  :I  [level 3] 

requires:
  T4 (op_pick-up1) !  :I  [level 3] 

rejects:
  T4 (op_pick-up1) -  :I  [level 3] 
  T4 (op_pick-up1) -  :I  [level 3] 

unary indifferents:
  I387 (select-next-goal) =  :I  [level 3] 
  O772 (smem-query) =  :I  [level 3] 

bests:
  O772 (smem-query) >  :I  [level 3] 

betters:
  O757 (push-task-segment) > T4 (op_pick-up1) :I  [level 3] 
  O772 (smem-query) > T4 (op_pick-up1) :I  [level 3] 
  I387 (select-next-goal) > T4 (op_pick-up1) :I  [level 3] 
  O757 (push-task-segment) > I387 (select-next-goal) :I  [level 3] 
  O772 (smem-query) > I387 (select-next-goal) :I  [level 3] 
  O772 (smem-query) > O757 (push-task-segment) :I  [level 3] 

selection probabilities:
  T4 (op_pick-up1) !  = 0. :I (100.00%)
operator --names
No such command: operator
pref s166 operator --names
Preferences for S166 ^operator:

acceptables:
  T4 (op_pick-up1) +  :I  [level 3] 
    From chunkx2*__PROP__SUBT__*problem-space*action*propose*subtask*3*OpNoChange*t642-1

  I387 (select-next-goal) +  :I  [level 3] 
    From chunkx2*__SEL_NEXT_GOAL__*propose*select-next-goal*superstate*OpNoChange*t622-1

  O772 (smem-query) +  :I  [level 3] 
    From anystate*propose*smem-query

  O757 (push-task-segment) +  :I  [level 3] 
    From subproblem*execute*propose*push-task-segment*for*push-task-operator*bottom*segment


requires:
  T4 (op_pick-up1) !  :I  [level 3] 
    From subproblem*execute*best*preference*learned*subtask


rejects:
  T4 (op_pick-up1) -  :I  [level 3] 
    From subproblem*execute*reject*subtask*proposals*if*desired*satisfied

  T4 (op_pick-up1) -  :I  [level 3] 
    From subproblem*execute*reject*subtask*operator*if*no*policy


unary indifferents:
  I387 (select-next-goal) =  :I  [level 3] 
    From chunkx2*__SEL_NEXT_GOAL__*propose*select-next-goal*superstate*OpNoChange*t622-1

  O772 (smem-query) =  :I  [level 3] 
    From anystate*propose*smem-query


bests:
  O772 (smem-query) >  :I  [level 3] 
    From anystate*propose*smem-query


betters:
  O757 (push-task-segment) > T4 (op_pick-up1) :I  [level 3] 
    From subproblem*execute*prefer*higher*operator*priority

  O772 (smem-query) > T4 (op_pick-up1) :I  [level 3] 
    From subproblem*execute*prefer*higher*operator*priority

  I387 (select-next-goal) > T4 (op_pick-up1) :I  [level 3] 
    From subproblem*execute*prefer*higher*operator*priority

  O757 (push-task-segment) > I387 (select-next-goal) :I  [level 3] 
    From subproblem*execute*prefer*higher*operator*priority

  O772 (smem-query) > I387 (select-next-goal) :I  [level 3] 
    From subproblem*execute*prefer*higher*operator*priority

  O772 (smem-query) > O757 (push-task-segment) :I  [level 3] 
    From subproblem*execute*prefer*higher*operator*priority


selection probabilities:
  T4 (op_pick-up1) !  = 0. :I (100.00%)
    From subproblem*execute*best*preference*learned*subtask
p subproblem*execute*best*preference*learned*subtask
sp {subproblem*execute*best*preference*learned*subtask
    (state <s> ^problem-space <p*1> ^current-task-segment <c*1>
          ^operator <o> +)
    (<p*1> ^subproblem execute)
    (<c*1> ^learn-subtask-proposal <sub-h>)
    (<o> ^subtask-handle <sub-h>)
    -->
    (<s> ^operator <o> !)
}
644:          O: O772 (smem-query)
645:          ==>S: S186 (operator no-change)
646:          O: O757 (push-task-segment)
