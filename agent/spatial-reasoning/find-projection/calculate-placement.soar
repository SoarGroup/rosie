sp {find-projection*propose*calculate-placement
   (state <s> ^name find-projection
              ^predicate.relation <rx> <ry> <rz>)
   (<rx> ^axis x ^type <xtype>)
   (<ry> ^axis y ^type <ytype>)
   (<rz> ^axis z ^type <ztype>)
-->
   (<s> ^operator <o> + =)
   (<o> ^name calculate-placement
        ^types <types>
        ^distances <dists>)
   (<types> ^x <xtype> ^y <ytype> ^z <ztype>)
}

sp {find-projection*elaborate*axis*distance*greater
   (state <s> ^name find-projection
              ^operator <o> +
              ^predicate.relation <rel>)
   (<rel> ^axis <axis>
          ^avg <dist>)
   (<o> ^name calculate-placement
        ^types.<axis> greater
        ^distances <dists>)
-->
   (<dists> ^<axis> <dist>)
}

sp {find-projection*elaborate*axis*distance*aligned
   (state <s> ^name find-projection
              ^operator <o> +)
   (<o> ^name calculate-placement
        ^types.<axis> aligned
        ^distances <dists>)
-->
   (<dists> ^<axis> 0.0)
}

sp {find-projection*elaborate*axis*distance*less
   (state <s> ^name find-projection
              ^operator <o> +
              ^predicate.relation <rel>)
   (<rel> ^axis <axis>
          ^avg <dist>)
   (<o> ^name calculate-placement
        ^types.<axis> less
        ^distances <dists>)
-->
   (<dists> ^<axis> (- <dist>))
}

sp {find-projection*project*svs*create-projection*2-args*global
   (state <s> ^name find-projection
              ^operator <o>
              ^arg-list.{1}.svs-obj.id <id1>
              ^arg-list.{2}.svs-obj.id <id2>
              ^result <res>
              ^svs-link.command <cmd>
             -^predicate.reference-frame local)
   (<o> ^name calculate-placement
        ^distances <d>)
   (<d> ^x <dx> ^y <dy> ^z <dz>)
-->
    (<cmd> ^extract_once <e>)
    (<e> ^type calculate_placement 
             ^a <nodea> ^b <nodeb>
             ^x_axis_separation <dx> 
             ^y_axis_separation <dy> 
             ^z_axis_separation <dz>)
   (<nodea> ^type node ^id <id1>)
   (<nodeb> ^type node ^id <id2>)
   (<s> ^calculate-placement-filter <e>)
}

sp {find-projection*project*svs*create-projection*2-args*local
   (state <s> ^name find-projection
              ^operator <o>
              ^arg-list.{1}.svs-obj.id <id1>
              ^arg-list.{2}.svs-obj.id <id2>
              ^result <res>
              ^svs-link.command <cmd>
              ^predicate.reference-frame local)
   (<o> ^name calculate-placement
        ^distances <d>)
   (<d> ^x <dx> ^y <dy> ^z <dz>)
-->
    (<cmd> ^extract_once <e>)
    (<e> ^type calculate_placement 
             ^a <nodea> ^b <nodeb>
             ^reference <ref>
             ^x_axis_separation <dx> 
             ^y_axis_separation <dy> 
             ^z_axis_separation <dz>)
   (<nodea> ^type node ^id <id1>)
   (<nodeb> ^type node ^id <id2>)
   (<ref> ^type node ^id robot)
   (<s> ^calculate-placement-filter <e>)
}

sp {find-projection*project*svs*complete-projection
   (state <s> ^name find-projection
              ^operator.name calculate-placement
              ^calculate-placement-filter <f>
              ^svs-link.command <cmd>
              ^result <res>
              ^superstate <ss>)
    (<f> ^type calculate_placement
         ^a.id <ida> ^b.id <idb>
         ^result.record.value <pos>)
    (<pos> ^x <x> ^y <y> ^z <z>)
-->
   (<ss> ^projection-result <result>)
   (<result> ^x <x> ^y <y> ^z <z> ^1 <ida> ^2 <idb>)
   (<cmd> ^extract_once <f> -)
}

