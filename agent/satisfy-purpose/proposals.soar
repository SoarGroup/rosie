sp {satisfy-purpose*propose*dialog-event*from*agent
   (state <s> ^name satisfy-purpose
              ^purpose <p>)
   (<p> ^satisfaction.dialog-event <e>)
   (<e> ^originator agent)
-->
   (<s> ^operator <o> +)
   (<o> ^name dialog-event
        ^event <e>
        ^purpose <p>)
}

sp {satisfy-purpose*propose*learning-event
   (state <s> ^name satisfy-purpose
              ^purpose <p>)
   (<p> ^satisfaction.learning-event <e>)
-->
   (<s> ^operator <o> +)
   (<o> ^name learning-event
        ^event <e>
        ^purpose <p>)
}

sp {satisfy-purpose*propose*task-event
   (state <s> ^name satisfy-purpose
              ^purpose <p>)
   (<p> ^satisfaction.task-event <e>)
-->
   (<s> ^operator <o> +)
   (<o> ^name task-event
        ^event <e>
        ^purpose <p>)
}

sp {satisfy-purpose*propose*testing-event
   (state <s> ^name satisfy-purpose
              ^purpose <p>)
   (<p> ^satisfaction.testing-event <e>)
-->
   (<s> ^operator <o> +)
   (<o> ^name testing-event
        ^event <e>
        ^purpose <p>)
}

sp {satisfy-purpose*propose*dialog-event*instructor
   (state <s> ^name satisfy-purpose
              ^purpose.satisfaction.dialog-event <de>)
   (<de> ^originator instructor)
-->
   (<s> ^operator <o> + =)
   (<o> ^name wait-for-response)
}
