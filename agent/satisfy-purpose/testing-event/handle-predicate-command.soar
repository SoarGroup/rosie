sp {testing-event*propose*handle-predicate-command
   (state <s> ^name testing-event
              ^purpose <p>
             -^handled-command)
   (<p> ^type handle-command
        ^parameters.command <cmd>)
   (<cmd> ^spelling set-pred
          ^next <arg1>)
   (<arg1> ^spelling <obj-h>
           ^next <arg2>)
   (<arg2> ^spelling <prop-h>
           ^next <arg3>)
   (<arg3> ^spelling <pred-h>)
-->
   (<s> ^operator <o> +)
   (<o> ^name handle-predicate-command
        ^object-id <obj-h>
        ^property-handle <prop-h>
        ^predicate-handle <pred-h>)
}

sp {testing-event*propose*handle-predicate-command*open
   (state <s> ^name testing-event
              ^purpose <p>
             -^handled-command)
   (<p> ^type handle-command
        ^parameters.command <cmd>)
   (<cmd> ^spelling open
          ^next.spelling <obj-h>)
-->
   (<s> ^operator <o> +)
   (<o> ^name handle-predicate-command
        ^object-id <obj-h>
        ^property-handle is-open1
        ^predicate-handle open2)
}

sp {testing-event*propose*handle-predicate-command*close
   (state <s> ^name testing-event
              ^purpose <p>
             -^handled-command)
   (<p> ^type handle-command
        ^parameters.command <cmd>)
   (<cmd> ^spelling close
          ^next.spelling <obj-h>)
-->
   (<s> ^operator <o> +)
   (<o> ^name handle-predicate-command
        ^object-id <obj-h>
        ^property-handle is-open1
        ^predicate-handle not-open1)
}

sp {testing-event*propose*handle-predicate-command*on
   (state <s> ^name testing-event
              ^purpose <p>
             -^handled-command)
   (<p> ^type handle-command
        ^parameters.command <cmd>)
   (<cmd> ^spelling on
          ^next.spelling <obj-h>)
-->
   (<s> ^operator <o> +)
   (<o> ^name handle-predicate-command
        ^object-id <obj-h>
        ^property-handle is-activated1
        ^predicate-handle activated1)
}

sp {testing-event*propose*handle-predicate-command*off
   (state <s> ^name testing-event
              ^purpose <p>
             -^handled-command)
   (<p> ^type handle-command
        ^parameters.command <cmd>)
   (<cmd> ^spelling off
          ^next.spelling <obj-h>)
-->
   (<s> ^operator <o> +)
   (<o> ^name handle-predicate-command
        ^object-id <obj-h>
        ^property-handle is-activated1
        ^predicate-handle not-activated1)
}

### ELABORATIONS

sp {testing-event*elaborate*handle-predicate-command*object-src
   (state <s> ^name testing-event
              ^operator <o> +
              ^top-state.internal-world.objects.object <obj>)
   (<o> ^name handle-predicate-command
        ^object-id <obj-id>)
   (<obj> ^{ << handle perc-id >> } <obj-id>)
-->
   (<o> ^object-src <obj>)
}

### APPLICATION

# change the predicate on the object
sp {testing-event*apply*handle-predicate-command*change*predicate
   (state <s> ^name testing-event
              ^operator <o>)
   (<o> ^name handle-predicate-command
        ^object-src.predicates <preds>
        ^property-handle <prop-h>
        ^predicate-handle <pred-h>)
   (<preds> ^<prop-h> { <old-pred> <> <pred-h> })
-->
   (<preds> ^<prop-h> <old-pred> -
            ^<prop-h> <pred-h>)
}

# add performed-predicate flag
sp {testing-event*apply*handle-predicate-command*add*performed-predicate*flag
   (state <s> ^name testing-event
              ^operator.name handle-predicate-command)
-->
   (<s> ^handled-command true)
}
