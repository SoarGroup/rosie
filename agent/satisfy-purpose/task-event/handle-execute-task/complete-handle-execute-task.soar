
sp {handle-execute-task*propose*complete-handle-execute-task
   (state <s> ^name handle-execute-task
              ^task-operator <task-op>)
-->
   (<s> ^operator <o> + <)
   (<o> ^name complete-handle-execute-task)
}

sp {handle-execute-task*apply*complete-handle-execute-task*new-subtask
   (state <s> ^name handle-execute-task
              ^operator.name complete-handle-execute-task
              ^task-operator <task-op>
              ^top-state.task-stack.bottom { <seg> <> none })
-->
   (<seg> ^new-subtask <task-op>)
   (<task-op> ^task-source instruction)
}

sp {handle-execute-task*apply*complete-handle-execute-task*empty*stack
   (state <s> ^name handle-execute-task
              ^operator.name complete-handle-execute-task
              ^task-operator <task-op>
              ^top-state.task-stack <stack>)
   (<stack> ^bottom none)
-->
   (<stack> ^push-task-operator <task-op>)
   (<task-op> ^task-source instruction)
}

sp {handle-execute-task*apply*complete-handle-execute-task*update*interaction*segment*params
   (state <s> ^name handle-execute-task
              ^operator.name complete-handle-execute-task
              ^command-message <msg>
              ^task-operator <task-op>
              ^top-state.interaction.stack.segment.purpose.parameters <params>)
-->
   (<params> ^task-operator <task-op>)
}
