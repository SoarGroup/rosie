#   Soar code produced automatically 
#   from file 'C:\Users\plind\OneDrive\GitHub\PLCode\Lucia\Grammars\Robot\ecg\r-properties.ecg'.

#   ONLY construction
sp {comprehend-word*apply*lexical-access*ONLY-only
   (state <s> ^problem-space comprehend-word
              ^operator <o>
              ^input.word <word>)
   (<o> ^name lexical-access)
   (<word> ^orth |only|
           ^content <content1>)
-->
   (<s> ^cxn <cxn>)
   (<cxn> ^cxn-name ONLY
          ^is <a>
          ^orth |only|
          ^text <content1>
          ^f <form>
          ^m <meaning>
          ^subcase-of Property
          ^first-lex nil
          ^evokes <e-meaning>)
   (<a> ^a ONLY)
   (<e-meaning> ^schema PropertyDescriptor
                ^target <meaning>)
}

#   ONLY self.m.class <-- @state constraint
sp {comprehend-word*ONLY-constraint*self-m-class*ASSIGN*AT-state
   (state <s> ^problem-space comprehend-word
              ^operator <o>
              ^cxn <cxn>)
   (<o> ^type construction)
   (<cxn> ^is.a ONLY
          ^orth |only|
          ^m <l-slot1>)
   (<l-slot1> ^class { <target> <> |state| })
-->
   (<l-slot1> ^class <target> -
              ^class |state|)
}

#   ONLY self.m.name <-- "only1" constraint
sp {comprehend-word*ONLY-constraint*self-m-name*ASSIGN*only1
   (state <s> ^problem-space comprehend-word
              ^operator <o>
              ^cxn <cxn>)
   (<o> ^type construction)
   (<cxn> ^is.a ONLY
          ^orth |only|
          ^m <l-slot1>)
   (<l-slot1> ^name { <target> <> |only1| })
-->
   (<l-slot1> ^name <target> -
              ^name |only1|)
}

#   CLOSED construction
sp {comprehend-word*apply*lexical-access*CLOSED-closed
   (state <s> ^problem-space comprehend-word
              ^operator <o>
              ^input.word <word>)
   (<o> ^name lexical-access)
   (<word> ^orth |closed|
           ^content <content1>)
-->
   (<s> ^cxn <cxn>)
   (<cxn> ^cxn-name CLOSED
          ^is <a>
          ^orth |closed|
          ^text <content1>
          ^f <form>
          ^m <meaning>
          ^subcase-of Property
          ^first-lex nil
          ^evokes <e-meaning>)
   (<a> ^a CLOSED)
   (<e-meaning> ^schema PropertyDescriptor
                ^target <meaning>)
}

#   CLOSED self.m.class <-- @state constraint
sp {comprehend-word*CLOSED-constraint*self-m-class*ASSIGN*AT-state
   (state <s> ^problem-space comprehend-word
              ^operator <o>
              ^cxn <cxn>)
   (<o> ^type construction)
   (<cxn> ^is.a CLOSED
          ^orth |closed|
          ^m <l-slot1>)
   (<l-slot1> ^class { <target> <> |state| })
-->
   (<l-slot1> ^class <target> -
              ^class |state|)
}

#   CLOSED self.m.name <-- "not-open1" constraint
sp {comprehend-word*CLOSED-constraint*self-m-name*ASSIGN*not-open1
   (state <s> ^problem-space comprehend-word
              ^operator <o>
              ^cxn <cxn>)
   (<o> ^type construction)
   (<cxn> ^is.a CLOSED
          ^orth |closed|
          ^m <l-slot1>)
   (<l-slot1> ^name { <target> <> |not-open1| })
-->
   (<l-slot1> ^name <target> -
              ^name |not-open1|)
}

