#   Soar code produced automatically 
#   from file 'C:\Users\plind\OneDrive\GitHub\PLCode\Lucia\Grammars\Robot\ecg\r-nouns.ecg'.

#   FORK construction
sp {comprehend-word*apply*lexical-access*FORK-fork
   (state <s> ^problem-space comprehend-word
              ^operator <o>
              ^input.word <word>)
   (<o> ^name lexical-access)
   (<word> ^orth |fork|
           ^content <content1>)
-->
   (<s> ^cxn <cxn>)
   (<cxn> ^cxn-name FORK
          ^is <a>
          ^orth |fork|
          ^text <content1>
          ^f <form>
          ^m <meaning>
          ^subcase-of CommonNoun
          ^first-lex nil
          ^evokes <e-meaning>)
   (<a> ^a FORK)
   (<e-meaning> ^schema Fork
                ^target <meaning>)
}

#   DRAWER construction
sp {comprehend-word*apply*lexical-access*DRAWER-drawer
   (state <s> ^problem-space comprehend-word
              ^operator <o>
              ^input.word <word>)
   (<o> ^name lexical-access)
   (<word> ^orth |drawer|
           ^content <content1>)
-->
   (<s> ^cxn <cxn>)
   (<cxn> ^cxn-name DRAWER
          ^is <a>
          ^orth |drawer|
          ^text <content1>
          ^f <form>
          ^m <meaning>
          ^subcase-of CommonNoun
          ^first-lex nil
          ^evokes <e-meaning>)
   (<a> ^a DRAWER)
   (<e-meaning> ^schema Drawer
                ^target <meaning>)
}

#   MUG construction
sp {comprehend-word*apply*lexical-access*MUG-mug
   (state <s> ^problem-space comprehend-word
              ^operator <o>
              ^input.word <word>)
   (<o> ^name lexical-access)
   (<word> ^orth |mug|
           ^content <content1>)
-->
   (<s> ^cxn <cxn>)
   (<cxn> ^cxn-name MUG
          ^is <a>
          ^orth |mug|
          ^text <content1>
          ^f <form>
          ^m <meaning>
          ^subcase-of CommonNoun
          ^first-lex nil
          ^evokes <e-meaning>)
   (<a> ^a MUG)
   (<e-meaning> ^schema Mug
                ^target <meaning>)
}

#   FRIDGE construction
sp {comprehend-word*apply*lexical-access*FRIDGE-fridge
   (state <s> ^problem-space comprehend-word
              ^operator <o>
              ^input.word <word>)
   (<o> ^name lexical-access)
   (<word> ^orth |fridge|
           ^content <content1>)
-->
   (<s> ^cxn <cxn>)
   (<cxn> ^cxn-name FRIDGE
          ^is <a>
          ^orth |fridge|
          ^text <content1>
          ^f <form>
          ^m <meaning>
          ^subcase-of CommonNoun
          ^first-lex nil
          ^evokes <e-meaning>)
   (<a> ^a FRIDGE)
   (<e-meaning> ^schema Fridge
                ^target <meaning>)
}

