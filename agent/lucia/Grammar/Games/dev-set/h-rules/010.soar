##!
# @file
#
# @created plindes 20200828
# File: 010.soar
# Author: Peter Lindes
# Created: 28 August 2020
#
# Desc: This file contains all the processing rules
#       needed to add to be able to process sentence 010
#       of the Games development set.
#
#  This is sentence #6 of 01.03_king-stacking-frogs script.txt.
#  The sentence is:
#      There is six.
#
#   The only rule needed here is an apply rule for do-assertion
#   that will generate the right message for a NumberAssertion.
#
#   It is expected that this will apply to a number of other
#   sentences as well.
#


#   Build a message for an NumberAssertion like this one:
#       There is six.
# TAKE THIS MEANING:
#(M5 ^is A10 ^number 6 ^schema-name NumberAssertion ^source I13
#       ^text |There are six.|)
#  (A10 ^a NumberAssertion ^a Assertion)
#  (I13 ^left 0 ^right 2)
#
# AND BUILD A MESSAGE LIKE THIS:
#(I1148 ^message-type object-description ^predicate L1536 (@100415))
#  (L1536 ^handle 6 ^item-type predicate ^property L1540 (@100395))
#    (L1540 ^handle number ^item-type property ^type number)

sp {interpret*apply*number-assertion
   (state <s> ^top-state <ts> 
              ^problem-space interpret
              ^operator <o>)
   (<o> ^name do-assertion
        ^meaning <m>)
   (<m> ^is.a NumberAssertion
        ^number <number>)
-->
   #    Build the message
   (<s> ^message nil -
        ^message <message>)
   (<message> ^message-type object-description
              ^predicate <number>)
}


