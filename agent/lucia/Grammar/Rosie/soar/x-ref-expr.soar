#   Soar code produced automatically 
#   from file '..\Lucia\Grammars\Rosie\ecg\x-ref-expr.ecg'.

#   Propose an operator for the NumberOfUnits construction
sp {comprehend-word*propose*match-construction*NumberOfUnits
   (state <s> ^problem-space comprehend-word
              ^lexical-access done)
   #   Look for the constituents
   (<s> ^cxn <units>)
   (<units> ^is.a UnitsName
            ^previous <number>)
   (<number> ^is.a CardinalNumber
             ^previous <previous>)
-->
   (<s> ^operator <o> +)
   (<o> ^name match-construction
        ^type construction
        ^cxn-name NumberOfUnits
        ^span 2
        ^lexicals 0
        ^units <units>
        ^number <number>
        ^previous <previous>
        ^debug-info (concat |Match a NumberOfUnits construction, combination 0.|))
}

#   Apply the operator for the NumberOfUnits construction
sp {comprehend-word*apply*match-construction*NumberOfUnits
   (state <s> ^problem-space comprehend-word
              ^operator <o>)
   (<o> ^name match-construction
        ^cxn-name NumberOfUnits
        ^number <number>
        ^units <units>
        ^previous <previous>)
-->
   (<s> ^cxn-new <cxn-new>)
   (<cxn-new> ^cxn-name NumberOfUnits
              ^is <a>
              ^f <form>
              ^m <meaning>
              ^subcase-of SpecifierNP
              ^constituents <constituents>
              ^number <number>
              ^units <units>
              ^evokes <e-meaning>
              ^previous <previous>)
   (<a> ^a NumberOfUnits)
   (<constituents> ^number <number>
                   ^units <units>)
   (<e-meaning> ^schema Measurement
                ^target <meaning>)
   #   Write a message for the construction that matched.
   (write (crlf) (concat |Matched a NumberOfUnits construction.|))
}

#   NumberOfUnits self.m.units <--> units.m constraint
sp {comprehend-word*NumberOfUnits-constraint*self-m-units*UNIFY*units-m
   (state <s> ^problem-space comprehend-word
              ^operator <o>
              ^cxn-new <cxn>)
   (<o> ^type construction)
   (<cxn> ^is.a NumberOfUnits
          ^m <l-slot1>
          ^units <r-slot1>)
   (<l-slot1> ^units { <target> <> <value> })
   (<r-slot1> ^m <value>)
-->
   (<l-slot1> ^units <target> -
              ^units <value>)
}

#   NumberOfUnits self.m.number <--> number.m constraint
sp {comprehend-word*NumberOfUnits-constraint*self-m-number*UNIFY*number-m
   (state <s> ^problem-space comprehend-word
              ^operator <o>
              ^cxn-new <cxn>)
   (<o> ^type construction)
   (<cxn> ^is.a NumberOfUnits
          ^m <l-slot1>
          ^number <r-slot1>)
   (<l-slot1> ^number { <target> <> <value> })
   (<r-slot1> ^m <value>)
-->
   (<l-slot1> ^number <target> -
              ^number <value>)
}

#   Propose an operator for the NumberOfThings construction
sp {comprehend-word*propose*match-construction*NumberOfThings
   (state <s> ^problem-space comprehend-word
              ^lexical-access done)
   #   Look for the constituents
   (<s> ^cxn <noun>)
   (<noun> ^is.a CommonNoun
           ^previous <number>)
   (<number> ^is.a CardinalNumber
             ^previous <previous>)
-->
   (<s> ^operator <o> +)
   (<o> ^name match-construction
        ^type construction
        ^cxn-name NumberOfThings
        ^span 2
        ^lexicals 0
        ^noun <noun>
        ^number <number>
        ^previous <previous>
        ^debug-info (concat |Match a NumberOfThings construction, combination 0.|))
}

#   Apply the operator for the NumberOfThings construction
sp {comprehend-word*apply*match-construction*NumberOfThings
   (state <s> ^problem-space comprehend-word
              ^operator <o>)
   (<o> ^name match-construction
        ^cxn-name NumberOfThings
        ^number <number>
        ^noun <noun>
        ^previous <previous>)
-->
   (<s> ^cxn-new <cxn-new>)
   (<cxn-new> ^cxn-name NumberOfThings
              ^is <a>
              ^f <form>
              ^m <meaning>
              ^subcase-of SpecifierNP
              ^constituents <constituents>
              ^number <number>
              ^noun <noun>
              ^evokes <e-meaning>
              ^previous <previous>)
   (<a> ^a NumberOfThings)
   (<constituents> ^number <number>
                   ^noun <noun>)
   (<e-meaning> ^schema RefDesc
                ^target <meaning>)
   #   Write a message for the construction that matched.
   (write (crlf) (concat |Matched a NumberOfThings construction.|))
}

#   NumberOfThings self.m.name <--> noun.m.schema-name constraint
sp {comprehend-word*NumberOfThings-constraint*self-m-name*UNIFY*noun-m-schema-name
   (state <s> ^problem-space comprehend-word
              ^operator <o>
              ^cxn-new <cxn>)
   (<o> ^type construction)
   (<cxn> ^is.a NumberOfThings
          ^m <l-slot1>
          ^noun <r-slot1>)
   (<l-slot1> ^name { <target> <> <value> })
   (<r-slot1> ^m <r-slot2>)
   (<r-slot2> ^schema-name <value>)
-->
   (<l-slot1> ^name <target> -
              ^name <value>)
}

#   NumberOfThings self.m.category <--> noun.m constraint
sp {comprehend-word*NumberOfThings-constraint*self-m-category*UNIFY*noun-m
   (state <s> ^problem-space comprehend-word
              ^operator <o>
              ^cxn-new <cxn>)
   (<o> ^type construction)
   (<cxn> ^is.a NumberOfThings
          ^m <l-slot1>
          ^noun <r-slot1>)
   (<l-slot1> ^category { <target> <> <value> })
   (<r-slot1> ^m <value>)
-->
   (<l-slot1> ^category <target> -
              ^category <value>)
}

#   NumberOfThings self.m.givenness <-- "number" constraint
sp {comprehend-word*NumberOfThings-constraint*self-m-givenness*ASSIGN*number
   (state <s> ^problem-space comprehend-word
              ^operator <o>
              ^cxn-new <cxn>)
   (<o> ^type construction)
   (<cxn> ^is.a NumberOfThings
          ^m <l-slot1>)
   (<l-slot1> ^givenness { <target> <> |number| })
-->
   (<l-slot1> ^givenness <target> -
              ^givenness |number|)
}

#   NumberOfThings self.m.quantified <--> number.m constraint
sp {comprehend-word*NumberOfThings-constraint*self-m-quantified*UNIFY*number-m
   (state <s> ^problem-space comprehend-word
              ^operator <o>
              ^cxn-new <cxn>)
   (<o> ^type construction)
   (<cxn> ^is.a NumberOfThings
          ^m <l-slot1>
          ^number <r-slot1>)
   (<l-slot1> ^quantified { <target> <> <value> })
   (<r-slot1> ^m <value>)
-->
   (<l-slot1> ^quantified <target> -
              ^quantified <value>)
}

