#   Soar code produced automatically 
#   from file '..\Lucia\Grammars\Rosie\ecg\xv-prepositions.ecg'.

#   BELOW construction
sp {comprehend-word*apply*lexical-access*BELOW-below
   (state <s> ^problem-space comprehend-word
              ^operator <o>
              ^input.word <word>)
   (<o> ^name lexical-access)
   (<word> ^orth |below|
           ^content <content1>)
-->
   (<s> ^cxn <cxn>)
   (<cxn> ^cxn-name BELOW
          ^is <a>
          ^orth |below|
          ^text <content1>
          ^f <form>
          ^m <meaning>
          ^subcase-of Preposition
          ^first-lex nil)
   (<a> ^a BELOW)
}

#   BELOW self.m.name <-- "below1" constraint
sp {comprehend-word*BELOW-constraint*self-m-name*ASSIGN*below1
   (state <s> ^problem-space comprehend-word
              ^operator <o>
              ^cxn <cxn>)
   (<o> ^type construction)
   (<cxn> ^is.a BELOW
          ^orth |below|
          ^m <l-slot1>)
   (<l-slot1> ^name { <target> <> |below1| })
-->
   (<l-slot1> ^name <target> -
              ^name |below1|)
}

#   FOR construction
sp {comprehend-word*apply*lexical-access*FOR-for
   (state <s> ^problem-space comprehend-word
              ^operator <o>
              ^input.word <word>)
   (<o> ^name lexical-access)
   (<word> ^orth |for|
           ^content <content1>)
-->
   (<s> ^cxn <cxn>)
   (<cxn> ^cxn-name FOR
          ^is <a>
          ^orth |for|
          ^text <content1>
          ^f <form>
          ^m <meaning>
          ^subcase-of AdverbialPreposition
          ^first-lex nil)
   (<a> ^a FOR)
}

#   FOR self.m.name <-- "for" constraint
sp {comprehend-word*FOR-constraint*self-m-name*ASSIGN*for
   (state <s> ^problem-space comprehend-word
              ^operator <o>
              ^cxn <cxn>)
   (<o> ^type construction)
   (<cxn> ^is.a FOR
          ^orth |for|
          ^m <l-slot1>)
   (<l-slot1> ^name { <target> <> |for| })
-->
   (<l-slot1> ^name <target> -
              ^name |for|)
}

#   HOLDING construction
sp {comprehend-word*apply*lexical-access*HOLDING-holding
   (state <s> ^problem-space comprehend-word
              ^operator <o>
              ^input.word <word>)
   (<o> ^name lexical-access)
   (<word> ^orth |holding|
           ^content <content1>)
-->
   (<s> ^cxn <cxn>)
   (<cxn> ^cxn-name HOLDING
          ^is <a>
          ^orth |holding|
          ^text <content1>
          ^f <form>
          ^m <meaning>
          ^subcase-of Preposition
          ^first-lex nil)
   (<a> ^a HOLDING)
}

#   HOLDING self.m.name <-- "holding1" constraint
sp {comprehend-word*HOLDING-constraint*self-m-name*ASSIGN*holding1
   (state <s> ^problem-space comprehend-word
              ^operator <o>
              ^cxn <cxn>)
   (<o> ^type construction)
   (<cxn> ^is.a HOLDING
          ^orth |holding|
          ^m <l-slot1>)
   (<l-slot1> ^name { <target> <> |holding1| })
-->
   (<l-slot1> ^name <target> -
              ^name |holding1|)
}

