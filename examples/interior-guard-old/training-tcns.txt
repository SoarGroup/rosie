
Task Concept Network for guard1 @100042

Task Structure:
  op_guard176(arg1:)

Subtasks:

  subtask81 @999174
  op_ask1(mod:once1, arg1:[message,|who is my relieving officer?|])

  subtask86 @999182
  op_remember1(mod:once1, arg1:[answered1], arg2:[officer1,relieving1])

  subtask93 @999205
  op_inspect11(arg1:[room1,messhall1])

  subtask141 @999323
  op_inspect11(arg1:[east1,post1])

  subtask145 @999330
  op_inspect11(arg1:[room1,motorpool1])

  subtask165 @999374
  op_go-to-location1(arg2:to1([office1,cos1]))

Goal Graph:

  guard1start77 @999169: start-goal
    --> guard1goal82

  guard1goal82 @999170: { exec(subtask81:op_ask1) }
    --> guard1goal87

  guard1goal87 @999179: { exec(subtask86:op_remember1) }
    --> guard1repeat91

  guard1repeat91 @999192: repeat-goal
    --IF{ confirmed1([officer1,relieving1]) }-> guard1exit92
    --> guard1goal94

  guard1exit92 @999194: loop-exit
    --> guard1term168

  guard1goal94 @999202: { exec(subtask93:op_inspect11) }
    --> guard1goal142

  guard1term168 @999381: terminal-goal

  guard1goal142 @999320: { exec(subtask141:op_inspect11) }
    --> guard1goal146

  guard1goal146 @999327: { exec(subtask145:op_inspect11) }
    --> guard1goal166

  guard1goal166 @999371: { exec(subtask165:op_go-to-location1) }
    --> guard1repeat91
Task Concept Network for inspect1 @100045

Task Structure:
  op_inspect11(arg1:<S1>)

Subtasks:

  subtask3 @999008
  op_go-to-location1(arg2:to1(<S1>))

  subtask5 @999024
  op_turn-on1(arg1:[lightswitch1])

  subtask19 @999044
  op_fetch12(arg1:[extinguisher1], arg2:from1([room1,supply1]))

  subtask28 @999065
  op_ensure115(arg1:[sentry1], arg2:)

  subtask33 @999082
  op_turn-off1(arg1:[lightswitch1])

  subtask99 @999232
  op_move198(arg1:[plate1], arg2:in1([sink1]))

  subtask117 @999277
  op_store1116(arg1:[condiment1])

  subtask158 @999346
  op_ensure115(arg1:[sentry1], arg2:)

  subtask160 @999354
  op_ensure115(arg1:[dispatcher1], arg2:)

  subtask162 @999362
  op_lock1(arg1:[vehicle1])

Goal Graph:

  inspect1start155 @999003: start-goal
    --> inspect1goal154

  inspect1goal154 @999004: { exec(subtask3:op_go-to-location1) }
    --IF{ not-activated1([lightswitch1]) }-> inspect1goal156
    --> inspect1int153

  inspect1goal156 @999012: { exec(subtask5:op_turn-on1) }
    --> inspect1int153

  inspect1int153 @999015: intermediate-goal
    --> inspect1int151
    --IF{ cur-loc([room1,motorpool1]) }-> inspect1goal152

  inspect1int151 @999337: intermediate-goal
    --> inspect1int120
    --IF{ cur-loc([room1,messhall1]), on1([plate1],[table1]) }-> inspect1goal125

  inspect1goal152 @999338: { exec(subtask158:op_ensure115), exec(subtask160:op_ensure115), exec(subtask162:op_lock1) }
    --> inspect1int151

  inspect1int120 @999215: intermediate-goal
    --> inspect1int118
    --IF{ cur-loc([room1,messhall1]), on1([condiment1],[table1]) }-> inspect1goal119

  inspect1goal125 @999216: { exec(subtask99:op_move198) }
    --> inspect1int120

  inspect1int118 @999260: intermediate-goal
    --> inspect1int20
    --IF{ cur-loc([post1]), missing[extinguisher1] }-> inspect1goal21

  inspect1goal119 @999261: { exec(subtask117:op_store1116) }
    --> inspect1int118

  inspect1int20 @999032: intermediate-goal
    --IF{ cur-loc([post1]) }-> inspect1goal29
    --> inspect1int30

  inspect1goal21 @999033: { exec(subtask19:op_fetch12) }
    --> inspect1int20

  inspect1goal29 @999055: { exec(subtask28:op_ensure115) }
    --> inspect1int30

  inspect1int30 @999058: intermediate-goal
    --IF{ empty1(<S1>) }-> inspect1goal35
    --> inspect1int34

  inspect1goal35 @999073: { exec(subtask33:op_turn-off1) }
    --> inspect1int34

  inspect1int34 @999072: intermediate-goal
    --> inspect1term36

  inspect1term36 @999086: terminal-goal
Task Concept Network for raise1 @100043

Task Structure:
  op_raise138(arg1:)

Subtasks:

  subtask42 @999096
  op_remember1(mod:once1, arg1:[location,current1], arg2:[location,emergency1])

  subtask46 @999107
  op_go-to-location1(arg2:to1([east1,hall1]))

  subtask49 @999116
  op_turn-on1(arg1:[alarm1])

  subtask55 @999123
  op_say1(arg1:[message,|there is a fire.|], arg2:to1([officer1,co1]))

  subtask63 @999140
  op_describe1(arg1:[location,emergency1])

  subtask66 @999147
  op_go-to-location1(arg2:to1([location,emergency1]))

Goal Graph:

  raise1start39 @999091: start-goal
    --> raise1goal43

  raise1goal43 @999092: { exec(subtask42:op_remember1) }
    --> raise1goal47

  raise1goal47 @999104: { exec(subtask46:op_go-to-location1) }
    --> raise1goal50

  raise1goal50 @999113: { exec(subtask49:op_turn-on1) }
    --> raise1goal56

  raise1goal56 @999120: { exec(subtask55:op_say1) }
    --> raise1goal64

  raise1goal64 @999137: { exec(subtask63:op_describe1) }
    --> raise1goal67

  raise1goal67 @999144: { exec(subtask66:op_go-to-location1) }
    --> raise1term69

  raise1term69 @999153: terminal-goal
Task Concept Network for fetch1 @100025

Task Structure:
  op_fetch12(arg1:<S1>, arg2:())

Subtasks:

  subtask9 @464
  op_find1(arg1:<S1>)

  subtask13 @465
  op_put-down1(arg1:<S1>)

  subtask12 @466
  op_go-to-location1(arg2:to1(<S5>[location,starting1]))

  subtask10 @467
  op_pick-up1(arg1:<S1>)

  subtask8 @468
  op_remember1(mod:once1, mod:first1, arg1:[location,current1], arg2:<S5>[location,starting1])

Goal Graph:

  fetch1start3 @455: start-goal
    --> fetch1goal6

  fetch1goal6 @469: { in1(<S1>,<S5>[location,starting1]) }
    --> fetch1term5

  fetch1term5 @482: terminal-goal
Task Concept Network for ensure1 @100054

Task Structure:
  op_ensure115(arg1:<S1>, arg2:)

Subtasks:

  subtask41 @401
  op_describe1(arg1:[location,starting1])

  subtask32 @402
  op_describe1(arg1:[sentry1])

  subtask44 @403
  op_go-to-location1(arg2:to1([location,starting1]))

  subtask22 @404
  op_remember1(mod:once1, arg1:[location,current1], arg2:[location,starting1])

  subtask26 @405
  op_find1(arg1:[officer1,co1])

  subtask38 @406
  op_say1(arg1:[message,|is not present|])

Goal Graph:

  ensure1start16 @393: start-goal
    --> ensure1goal23
    --IF{ confirmed1(<S1>) }-> ensure1term19

  ensure1goal23 @409: { exec(subtask22:op_remember1) }
    --> ensure1goal27

  ensure1term19 @408: terminal-goal

  ensure1goal27 @430: { exec(subtask26:op_find1) }
    --> ensure1goal33

  ensure1goal33 @442: { exec(subtask32:op_describe1) }
    --> ensure1goal39

  ensure1goal39 @445: { exec(subtask38:op_say1) }
    --> ensure1goal42

  ensure1goal42 @448: { exec(subtask41:op_describe1) }
    --> ensure1goal45

  ensure1goal45 @451: { exec(subtask44:op_go-to-location1) }
    --> ensure1term47

  ensure1term47 @454: terminal-goal
Task Concept Network for move1 @100021

Task Structure:
  op_move198(arg1:<S1>, arg2:<S2>(<S3>))

Subtasks:

  subtask111 @999248
  op_pick-up1(arg1:<S1>)

  subtask112 @999250
  op_put-down1(arg1:<S1>, arg2:<S2>(<S3>))

Goal Graph:

  move1start108 @999241: start-goal
    --> move1goal110

  move1goal110 @999243: { <S2>(<S1>,<S3>) }
    --> move1term109

  move1term109 @999242: terminal-goal
Task Concept Network for store1 @100022

Task Structure:
  op_store1116(arg1:<S1>)

Subtasks:

  subtask132 @999301
  op_open1(arg1:<S2>[fridge1])

  subtask135 @999307
  op_pick-up1(arg1:<S1>)

  subtask136 @999309
  op_put-down1(arg1:<S1>, arg2:in1(<S2>[fridge1]))

  subtask137 @999314
  op_close1(arg1:<S2>[fridge1])

Goal Graph:

  store1start127 @999281: start-goal
    --IF{ condiment1(<S1>) }-> store1goal128

  store1goal128 @999282: { in1(<S1>,[fridge1]), not-open1(<S2>[fridge1]) }
    --> store1term129

  store1term129 @999294: terminal-goal
