
sp {top-state*apply*create-internal-world*
   (state <s> ^superstate nil
              ^operator <o>)
   (<o> ^name create-internal-world)
-->
   (<s> ^world <wo>)
   (<wo> ^objects <objs> ^predicates <preds> ^robot <ro>)
   (<ro> ^handle rosie ^item-type object ^arm.action wait ^predicate.handle rosie)
   (<objs> ^object <self> <o1> <o2> <o3> <o4> <o5> <o6>)
   (<self> ^type object ^handle self ^predicates.type object
)
   (<preds> ^predicate <on1> <below1>)
(<o1> ^item-type object ^handle object-0 ^predicates <pr0>)
(<pr0> ^is-visible1 visible1 ^arm-status not-grabbed^category location )
(<o2> ^item-type object ^handle object-1 ^predicates <pr1>)
(<pr1> ^is-visible1 visible1 ^arm-status not-grabbed^category location )
(<o3> ^item-type object ^handle object-2 ^predicates <pr2>)
(<pr2> ^is-visible1 visible1 ^arm-status not-grabbed^category location )
(<o4> ^item-type object ^handle object-3 ^predicates <pr3>)
(<pr3> ^is-visible1 visible1 ^arm-status not-grabbed^category block ^color red1 )
(<o5> ^item-type object ^handle object-4 ^predicates <pr4>)
(<pr4> ^is-visible1 visible1 ^arm-status not-grabbed^category block ^color green1 )
(<o6> ^item-type object ^handle object-5 ^predicates <pr5>)
(<pr5> ^is-visible1 visible1 ^arm-status not-grabbed^category block ^color orange1 )
(<on1> ^item-type predicate ^handle on1 ^instance <ins0> <ins1> <ins2> )
(<ins0> ^1 <o4> ^2 <o5>)
(<ins1> ^1 <o5> ^2 <o6>)
(<ins2> ^1 <o6> ^2 <o1>)
(<below1> ^item-type predicate ^handle below1 ^instance <ins3> <ins4> <ins5> )
(<ins3> ^1 <o5> ^2 <o4>)
(<ins4> ^1 <o6> ^2 <o5>)
(<ins5> ^1 <o1> ^2 <o6>)
}
